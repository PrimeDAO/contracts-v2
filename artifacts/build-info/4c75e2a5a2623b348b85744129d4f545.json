{
  "id": "4c75e2a5a2623b348b85744129d4f545",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/seed/Seed.sol": {
        "content": "/*\r\n\r\n██████╗░██████╗░██╗███╗░░░███╗███████╗██████╗░░█████╗░░█████╗░\r\n██╔══██╗██╔══██╗██║████╗░████║██╔════╝██╔══██╗██╔══██╗██╔══██╗\r\n██████╔╝██████╔╝██║██╔████╔██║█████╗░░██║░░██║███████║██║░░██║\r\n██╔═══╝░██╔══██╗██║██║╚██╔╝██║██╔══╝░░██║░░██║██╔══██║██║░░██║\r\n██║░░░░░██║░░██║██║██║░╚═╝░██║███████╗██████╔╝██║░░██║╚█████╔╝\r\n╚═╝░░░░░╚═╝░░╚═╝╚═╝╚═╝░░░░░╚═╝╚══════╝╚═════╝░╚═╝░░╚═╝░╚════╝░\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n/* solhint-disable space-after-comma */\r\n/* solhint-disable max-states-count */\r\n// solium-disable linebreak-style\r\npragma solidity 0.8.4;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\r\n\r\n\r\n/**\r\n * @title PrimeDAO Seed contract\r\n * @dev   Smart contract for seed phases of liquid launch.\r\n */\r\ncontract Seed {\r\n    // Locked parameters\r\n    address public beneficiary;\r\n    address public admin;\r\n    uint256 public softCap;\r\n    uint256 public hardCap;\r\n    uint256 public seedAmountRequired;    // Amount of seed required for distribution\r\n    uint256 public feeAmountRequired;     // Amount of seed required for fee\r\n    uint256 public price;\r\n    uint256 public startTime;\r\n    uint256 public endTime;               // set by project admin, this is the last resort endTime to be applied when\r\n                                          //     maximumReached has not been reached by then\r\n    bool    public permissionedSeed;\r\n    uint32  public vestingDuration;\r\n    uint32  public vestingCliff;\r\n    IERC20  public seedToken;\r\n    IERC20  public fundingToken;\r\n    uint8   public fee;\r\n\r\n    bytes   public metadata;           // IPFS Hash\r\n\r\n    uint256 constant internal PCT_BASE        = 10 ** 18;  // // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\r\n\r\n    // Contract logic\r\n    bool    public closed;                 // is the distribution closed\r\n    bool    public paused;                 // is the distribution paused\r\n    bool    public isFunded;               // distribution can only start when required seed tokens have been funded\r\n    bool    public initialized;            // is this contract initialized [not necessary that it is funded]\r\n    bool    public minimumReached;         // if the softCap[minimum limit of funding token] is reached\r\n    bool    public maximumReached;         // if the hardCap[maximum limit of funding token] is reached\r\n    uint256 public vestingStartTime;       // timestamp for when vesting starts, by default == endTime,\r\n                                           //     otherwise when maximumReached is reached\r\n    uint256 public totalFunderCount;       // Total funders that have contributed.\r\n    uint256 public seedRemainder;          // Amount of seed tokens remaining to be distributed\r\n    uint256 public seedClaimed;            // Amount of seed token claimed by the user.\r\n    uint256 public feeRemainder;           // Amount of seed tokens remaining for the fee\r\n    uint256 public feeClaimed;             // Amount of seed tokens claimed as fee\r\n    uint256 public fundingCollected;       // Amount of funding tokens collected by the seed contract.\r\n    uint256 public fundingWithdrawn;       // Amount of funding token withdrawn from the seed contract.\r\n\r\n    mapping (address => bool) public whitelisted;        // funders that are whitelisted and allowed to contribute\r\n    mapping (address => FunderPortfolio) public funders; // funder address to funder portfolio\r\n\r\n    event SeedsPurchased(address indexed recipient, uint256 amountPurchased);\r\n    event TokensClaimed(address indexed recipient,uint256 amount,address indexed beneficiary,uint256 feeAmount);\r\n    event FundingReclaimed(address indexed recipient, uint256 amountReclaimed);\r\n    event MetadataUpdated(bytes indexed metadata);\r\n\r\n    struct FunderPortfolio {\r\n        uint256 seedAmount;                 // Total amount of seed tokens bought\r\n        uint256 totalClaimed;               // Total amount of seed tokens claimed\r\n        uint256 fundingAmount;              // Total amount of funding tokens contributed\r\n        uint256 fee;                        // Total amount of fee in seed amount for this portfolio\r\n        uint256 feeClaimed;                 // Total amount of fee sent to beneficiary for this portfolio\r\n    }\r\n\r\n    modifier initializer() {\r\n        require(!initialized, \"Seed: contract already initialized\");\r\n        initialized = true;\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(msg.sender == admin, \"Seed: caller should be admin\");\r\n        _;\r\n    }\r\n\r\n    modifier isActive() {\r\n        require(!closed, \"Seed: should not be closed\");\r\n        require(!paused, \"Seed: should not be paused\");\r\n        _;\r\n    }\r\n\r\n    modifier allowedToBuy() {\r\n        require(!maximumReached, \"Seed: maximum funding reached\");\r\n        require(!permissionedSeed || whitelisted[msg.sender], \"Seed: sender has no rights\");\r\n        require(endTime >= block.timestamp && startTime <= block.timestamp,\r\n            \"Seed: only allowed during distribution period\");\r\n        _;\r\n    }\r\n\r\n    modifier allowedToClaim() {\r\n        require(minimumReached, \"Seed: minimum funding amount not met\");\r\n        require(endTime <= block.timestamp || maximumReached,\"Seed: the distribution has not yet finished\");\r\n        _;\r\n    }\r\n\r\n    modifier allowedToRetrieve() {\r\n        require(!paused, \"Seed: should not be paused\");\r\n        require(startTime <= block.timestamp, \"Seed: distribution haven't started\");\r\n        require(!minimumReached, \"Seed: minimum already met\");\r\n        _;\r\n    }\r\n\r\n    modifier allowedToWithdraw() {\r\n        require(!paused, \"Seed: should not be paused\");\r\n        require(minimumReached, \"Seed: minimum funding amount not met\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n      * @dev                          Initialize Seed.\r\n      * @param _beneficiary           The address that recieves fees.\r\n      * @param _admin                 The address of the admin of this contract. Funds contract\r\n                                      and has permissions to whitelist users, pause and close contract.\r\n      * @param _tokens                Array containing two params:\r\n                                        - The address of the seed token being distributed.\r\n      *                                 - The address of the funding token being exchanged for seed token.\r\n      * @param _softHardThresholds     Array containing two params:\r\n                                        - the minimum funding token collection threshold in wei denomination.\r\n                                        - the highest possible funding token amount to be raised in wei denomination.\r\n      * @param _price                 The price in wei of fundingTokens when exchanged for seedTokens.\r\n      * @param _startTime             Distribution start time in unix timecode.\r\n      * @param _endTime               Distribution end time in unix timecode.\r\n      * @param _vestingDuration       Vesting period duration in seconds.\r\n      * @param _vestingCliff          Cliff duration in seconds.\r\n      * @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\r\n      * @param _fee                   Success fee expressed as a % (e.g. 2 = 2% fee)\r\n    */\r\n    function initialize(\r\n        address _beneficiary,\r\n        address _admin,\r\n        address[] memory _tokens,\r\n        uint256[] memory _softHardThresholds,\r\n        uint256 _price,\r\n        uint256 _startTime,\r\n        uint256 _endTime,\r\n        uint32  _vestingDuration,\r\n        uint32  _vestingCliff,\r\n        bool    _permissionedSeed,\r\n        uint8   _fee\r\n    ) public initializer\r\n    {\r\n\r\n        // parameter check\r\n        require(_tokens[0] != _tokens[1], \"SeedFactory: seedToken cannot be fundingToken\");\r\n        require(_softHardThresholds[1] >= _softHardThresholds[0],\"SeedFactory: hardCap cannot be less than softCap\");\r\n        require(_vestingDuration >= _vestingCliff, \"SeedFactory: vestingDuration cannot be less than vestingCliff\");\r\n        require(_endTime > _startTime, \"SeedFactory: endTime cannot be less than equal to startTime\");\r\n\r\n        beneficiary       = _beneficiary;\r\n        admin             = _admin;\r\n        softCap           = _softHardThresholds[0];\r\n        hardCap           = _softHardThresholds[1];\r\n        price             = _price;\r\n        startTime         = _startTime;\r\n        endTime           = _endTime;\r\n        vestingStartTime  = endTime;\r\n        vestingDuration   = _vestingDuration;\r\n        vestingCliff      = _vestingCliff;\r\n        permissionedSeed  = _permissionedSeed;\r\n        seedToken         = IERC20(_tokens[0]);\r\n        fundingToken      = IERC20(_tokens[1]);\r\n        fee               = _fee;\r\n\r\n        seedAmountRequired = (hardCap*PCT_BASE) / _price;\r\n        feeAmountRequired  = (seedAmountRequired*_fee) / 100;\r\n        seedRemainder      = seedAmountRequired;\r\n        feeRemainder       = feeAmountRequired;\r\n    }\r\n\r\n    /**\r\n      * @dev                     Buy seed tokens.\r\n      * @param _fundingAmount    The amount of funding tokens to contribute.\r\n    */\r\n    function buy(uint256 _fundingAmount) public isActive allowedToBuy returns(uint256, uint256) {\r\n        if (!isFunded) {\r\n            require(seedToken.balanceOf(address(this)) >= seedAmountRequired + feeAmountRequired,\r\n                \"Seed: sufficient seeds not provided\");\r\n            isFunded = true;\r\n        }\r\n        // fundingAmount is an amount of fundingTokens required to buy _seedAmount of SeedTokens\r\n        uint256 seedAmount = (_fundingAmount*PCT_BASE)/price;\r\n\r\n        // Funding Token balance of this contract;\r\n        uint256 fundingBalance = fundingCollected;\r\n\r\n        // feeAmount is an amount of fee we are going to get in seedTokens\r\n        uint256 feeAmount = (seedAmount*fee) / 100;\r\n\r\n        // total fundingAmount should not be greater than the hardCap\r\n        require( fundingBalance + _fundingAmount <= hardCap,\r\n            \"Seed: amount exceeds contract sale hardCap\");\r\n\r\n        require( seedRemainder >= seedAmount,\r\n            \"Seed: seed distribution would be exceeded\");\r\n\r\n        fundingCollected = fundingBalance + _fundingAmount;\r\n\r\n        // the amount of seed tokens still to be distributed\r\n        seedRemainder -= seedAmount;\r\n        feeRemainder  -= feeAmount;\r\n\r\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\r\n        require(fundingToken.transferFrom(msg.sender, address(this), _fundingAmount), \"Seed: no tokens\");\r\n\r\n        if (fundingCollected >= softCap) {\r\n            minimumReached = true;\r\n        }\r\n        if (fundingCollected >= hardCap) {\r\n            maximumReached = true;\r\n            vestingStartTime = _currentTime();\r\n        }\r\n\r\n        _addFunder(\r\n            msg.sender,\r\n            (funders[msg.sender].seedAmount + seedAmount),         // Previous Seed Amount + new seed amount\r\n            (funders[msg.sender].fundingAmount + _fundingAmount),  // Previous Funding Amount + new funding amount\r\n            funders[msg.sender].totalClaimed,\r\n            (funders[msg.sender].fee + feeAmount),                  // Previous Fee + new fee\r\n            funders[msg.sender].feeClaimed\r\n            );\r\n\r\n        // buyer, seed token purchased in this transaction (not the total amount of seed purchased)\r\n        emit SeedsPurchased(msg.sender, seedAmount);\r\n\r\n        return (seedAmount, feeAmount);\r\n    }\r\n\r\n    /**\r\n      * @dev                     Claim vested seed tokens.\r\n      * @param _funder           Address of funder to calculate seconds and amount claimable\r\n      * @param _claimAmount      The amount of seed token a users wants to claim.\r\n    */\r\n    function claim(address _funder, uint256 _claimAmount) public allowedToClaim returns(uint256) {\r\n        uint256 amountClaimable;\r\n\r\n        amountClaimable = calculateClaim(_funder);\r\n        require(amountClaimable > 0, \"Seed: amount claimable is 0\");\r\n        require(amountClaimable >= _claimAmount, \"Seed: request is greater than claimable amount\");\r\n        uint256 feeAmountOnClaim = (_claimAmount * fee) / 100;\r\n\r\n        FunderPortfolio memory tokenFunder = funders[_funder];\r\n\r\n        tokenFunder.totalClaimed    += _claimAmount;\r\n        tokenFunder.feeClaimed      += feeAmountOnClaim;\r\n        funders[_funder] = tokenFunder;\r\n\r\n        seedClaimed += _claimAmount;\r\n        feeClaimed  += feeAmountOnClaim;\r\n        require(seedToken.transfer(beneficiary, feeAmountOnClaim), \"Seed: cannot transfer to beneficiary\");\r\n        require(seedToken.transfer(_funder, _claimAmount), \"Seed: no tokens\");\r\n\r\n        emit TokensClaimed(_funder, _claimAmount, beneficiary, feeAmountOnClaim);\r\n\r\n        // fee on the distributed reward collected from admin\r\n        return (feeAmountOnClaim);\r\n    }\r\n\r\n    /**\r\n      * @dev         Returns funding tokens to user.\r\n    */\r\n    function retrieveFundingTokens() public allowedToRetrieve returns(uint256) {\r\n        require(funders[msg.sender].fundingAmount > 0, \"Seed: zero funding amount\");\r\n        FunderPortfolio memory tokenFunder = funders[msg.sender];\r\n        uint256 fundingAmount = tokenFunder.fundingAmount;\r\n        seedRemainder += tokenFunder.seedAmount;\r\n        feeRemainder += tokenFunder.fee;\r\n        tokenFunder.seedAmount    = 0;\r\n        tokenFunder.fee           = 0;\r\n        tokenFunder.fundingAmount = 0;\r\n        funders[msg.sender]  = tokenFunder;\r\n        fundingCollected -= fundingAmount;\r\n        require(\r\n            fundingToken.transfer(msg.sender, fundingAmount),\r\n            \"Seed: cannot return funding tokens to msg.sender\"\r\n        );\r\n        emit FundingReclaimed(msg.sender, fundingAmount);\r\n\r\n        return fundingAmount;\r\n    }\r\n\r\n    // ADMIN ACTIONS\r\n\r\n    /**\r\n      * @dev                     Pause distribution.\r\n    */\r\n    function pause() public onlyAdmin isActive {\r\n        paused = true;\r\n    }\r\n\r\n    /**\r\n      * @dev                     Unpause distribution.\r\n    */\r\n    function unpause() public onlyAdmin {\r\n        require(closed != true, \"Seed: should not be closed\");\r\n        require(paused == true, \"Seed: should be paused\");\r\n\r\n        paused = false;\r\n    }\r\n\r\n    /**\r\n      * @dev                     Close distribution.\r\n    */\r\n    function close() public onlyAdmin isActive {\r\n        // transfer seed tokens back to admin\r\n        if (minimumReached) {\r\n            // remaining seeds = seedRemainder + feeRemainder\r\n            uint256 seedToTransfer = seedRemainder+feeRemainder;\r\n            require(\r\n                seedToken.transfer(admin, seedToTransfer),\r\n                \"Seed: should transfer seed tokens to admin\"\r\n            );\r\n            paused = false;\r\n        } else {\r\n            require(\r\n                seedToken.transfer(admin, seedAmountRequired+feeAmountRequired),\r\n                \"Seed: should transfer seed tokens to admin\"\r\n            );\r\n            closed = true;\r\n            paused = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n      * @dev                     Add address to whitelist.\r\n      * @param _buyer            Address which needs to be whitelisted\r\n    */\r\n    function whitelist(address _buyer) public onlyAdmin isActive {\r\n        require(permissionedSeed == true, \"Seed: module is not whitelisted\");\r\n\r\n        whitelisted[_buyer] = true;\r\n    }\r\n\r\n    /**\r\n      * @dev                     Add multiple addresses to whitelist.\r\n      * @param _buyers           Array of addresses to whitelist addresses in batch\r\n    */\r\n    function whitelistBatch(address[] memory _buyers) public onlyAdmin isActive {\r\n        require(permissionedSeed == true, \"Seed: module is not whitelisted\");\r\n        for (uint256 i = 0; i < _buyers.length; i++) {\r\n            whitelisted[_buyers[i]] = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n      * @dev                     Remove address from whitelist.\r\n      * @param buyer             Address which needs to be unwhitelisted\r\n    */\r\n    function unwhitelist(address buyer) public onlyAdmin isActive {\r\n        require(permissionedSeed == true, \"Seed: module is not whitelisted\");\r\n\r\n        whitelisted[buyer] = false;\r\n    }\r\n\r\n    /**\r\n      * @dev                     Withdraw funds from the contract\r\n    */\r\n    function withdraw() public onlyAdmin allowedToWithdraw {\r\n        uint pendingFundingBalance = fundingCollected - fundingWithdrawn;\r\n        fundingWithdrawn = fundingCollected;\r\n        fundingToken.transfer(msg.sender, pendingFundingBalance);\r\n    }\r\n\r\n    /**\r\n      * @dev                     Updates metadata.\r\n      * @param _metadata         Seed contract metadata, that is IPFS Hash\r\n    */\r\n    function updateMetadata(bytes memory _metadata) public {\r\n        require(\r\n            initialized != true || msg.sender == admin,\r\n            \"Seed: contract should not be initialized or caller should be admin\"\r\n        );\r\n        metadata = _metadata;\r\n        emit MetadataUpdated(_metadata);\r\n    }\r\n\r\n    // GETTER FUNCTIONS\r\n    /**\r\n      * @dev                     Calculates the maximum claim\r\n      * @param _funder           Address of funder to find the maximum claim\r\n    */\r\n    function calculateClaim(address _funder) public view returns(uint256) {\r\n        FunderPortfolio memory tokenFunder = funders[_funder];\r\n\r\n        if (_currentTime() < vestingStartTime) {\r\n            return 0;\r\n        }\r\n\r\n        // Check cliff was reached\r\n        uint256 elapsedSeconds = _currentTime() - vestingStartTime;\r\n\r\n        if (elapsedSeconds < vestingCliff) {\r\n            return 0;\r\n        }\r\n\r\n        // If over vesting duration, all tokens vested\r\n        if (elapsedSeconds >= vestingDuration) {\r\n            return tokenFunder.seedAmount - tokenFunder.totalClaimed;\r\n        } else {\r\n            uint256 amountVested = (elapsedSeconds*tokenFunder.seedAmount) / vestingDuration;\r\n            return amountVested - tokenFunder.totalClaimed;\r\n        }\r\n    }\r\n\r\n    /**\r\n      * @dev                     check whitelist status of a buyer\r\n      * @param _buyer            address of buyer to check status\r\n    */\r\n    function checkWhitelisted(address _buyer) public view returns(bool) {\r\n        return whitelisted[_buyer];\r\n    }\r\n\r\n    // INTERNAL FUNCTIONS\r\n    /**\r\n      * @dev                      get current time or block.timestamp\r\n    */\r\n    function _currentTime() internal view returns(uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    /**\r\n      * @dev                      add/update funder portfolio\r\n      * @param _recipient         Address of funder recipient\r\n      * @param _seedAmount        seed amount of the funder\r\n      * @param _fundingAmount     funding amount contributed\r\n      * @param _totalClaimed      total seed token amount claimed\r\n      * @param _fee               fee on seed amount bought\r\n    */\r\n    function _addFunder(\r\n        address _recipient,\r\n        uint256 _seedAmount,\r\n        uint256 _fundingAmount,\r\n        uint256 _totalClaimed,\r\n        uint256 _fee,\r\n        uint256 _feeClaimed\r\n    )\r\n    internal\r\n    {\r\n\r\n        require(_seedAmount >= vestingDuration, \"Seed: amountVestedPerSecond > 0\");\r\n\r\n        funders[_recipient] = FunderPortfolio({\r\n            seedAmount: _seedAmount,\r\n            totalClaimed: _totalClaimed,\r\n            fundingAmount: _fundingAmount,\r\n            fee: _fee,\r\n            feeClaimed: _feeClaimed\r\n        });\r\n        totalFunderCount++;\r\n    }\r\n}\r\n"
      },
      "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "contracts/seed/SeedFactory.sol": {
        "content": "/*\r\n\r\n██████╗░██████╗░██╗███╗░░░███╗███████╗██████╗░░█████╗░░█████╗░\r\n██╔══██╗██╔══██╗██║████╗░████║██╔════╝██╔══██╗██╔══██╗██╔══██╗\r\n██████╔╝██████╔╝██║██╔████╔██║█████╗░░██║░░██║███████║██║░░██║\r\n██╔═══╝░██╔══██╗██║██║╚██╔╝██║██╔══╝░░██║░░██║██╔══██║██║░░██║\r\n██║░░░░░██║░░██║██║██║░╚═╝░██║███████╗██████╔╝██║░░██║╚█████╔╝\r\n╚═╝░░░░░╚═╝░░╚═╝╚═╝╚═╝░░░░░╚═╝╚══════╝╚═════╝░╚═╝░░╚═╝░╚════╝░\r\n\r\n*/\r\n\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n// solium-disable linebreak-style\r\n/* solhint-disable space-after-comma */\r\n\r\npragma solidity 0.8.4;\r\n\r\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\r\nimport \"openzeppelin-solidity/contracts/access/Ownable.sol\";\r\nimport \"./Seed.sol\";\r\nimport \"../utils/CloneFactory.sol\";\r\n\r\n\r\n/**\r\n * @title PrimeDAO Seed Factory\r\n * @dev   Enable PrimeDAO governance to create new Seed contracts.\r\n */\r\ncontract SeedFactory is CloneFactory, Ownable {\r\n\r\n    Seed public masterCopy;\r\n\r\n    event SeedCreated(address indexed newSeed, address indexed beneficiary);\r\n\r\n    /**\r\n     * @dev               Set Seed contract which works as a base for clones.\r\n     * @param _masterCopy The address of the new Seed basis.\r\n     */\r\n    function setMasterCopy(Seed _masterCopy) public onlyOwner {\r\n        require(address(_masterCopy) != address(0), \"SeedFactory: new mastercopy cannot be zero address\");\r\n        masterCopy = _masterCopy;\r\n    }\r\n\r\n    /**\r\n      * @dev                                Deploys Seed contract.\r\n      * @param _beneficiary                 The address that recieves fees.\r\n      * @param _admin                       The address of the admin of this contract. Funds contract\r\n                                            and has permissions to whitelist users, pause and close contract.\r\n      * @param _tokens                      Array containing two params:\r\n                                                - The address of the seed token being distributed.\r\n      *                                         - The address of the funding token being exchanged for seed token.\r\n      * @param _softHardThresholds          Array containing two params:\r\n                                                - the minimum funding token collection threshold in wei denomination.\r\n                                                - the highest possible funding token amount to be raised in wei denomination.\r\n      * @param _price                       1 Funding Token = _price amount of Seed Token.\r\n      * @param _startTime                   Distribution start time in unix timecode.\r\n      * @param _endTime                     Distribution end time in unix timecode.\r\n      * @param _vestingDurationAndCliff       Array containing two params:\r\n                                                - Vesting period duration in days.\r\n                                                - Cliff duration in days.\r\n      * @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\r\n      * @param _fee                   Success fee expressed in Wei as a % (e.g. 2 = 2% fee)\r\n      * @param _metadata              Seed contract metadata, that is IPFS URI\r\n    */\r\n    function deploySeed(\r\n        address _beneficiary,\r\n        address _admin,\r\n        address[] memory _tokens,\r\n        uint256[] memory _softHardThresholds,\r\n        uint256 _price,\r\n        uint256 _startTime,\r\n        uint256 _endTime,\r\n        uint32[] memory _vestingDurationAndCliff,\r\n        bool  _permissionedSeed,\r\n        uint8 _fee,\r\n        bytes memory _metadata\r\n    ) public onlyOwner returns (address)\r\n    {\r\n        {\r\n            require(address(masterCopy) != address(0), \"SeedFactory: mastercopy cannot be zero address\");\r\n            require(_vestingDurationAndCliff.length == 2, \"SeedFactory: Hasn't provided both vesting duration and cliff\");\r\n        }\r\n\r\n        // deploy clone\r\n        address _newSeed = createClone(address(masterCopy));\r\n\r\n        Seed(_newSeed).updateMetadata(_metadata);\r\n\r\n        // initialize\r\n        Seed(_newSeed).initialize(\r\n            _beneficiary,\r\n            _admin,\r\n            _tokens,\r\n            _softHardThresholds,\r\n            _price,\r\n            _startTime,\r\n            _endTime,\r\n            _vestingDurationAndCliff[0],\r\n            _vestingDurationAndCliff[1],\r\n            _permissionedSeed,\r\n            _fee\r\n        );\r\n\r\n        emit SeedCreated(address(_newSeed), msg.sender);\r\n\r\n        return _newSeed;\r\n    }\r\n}\r\n"
      },
      "openzeppelin-solidity/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
      },
      "contracts/utils/CloneFactory.sol": {
        "content": "/*\r\n\r\n██████╗░██████╗░██╗███╗░░░███╗███████╗██████╗░░█████╗░░█████╗░\r\n██╔══██╗██╔══██╗██║████╗░████║██╔════╝██╔══██╗██╔══██╗██╔══██╗\r\n██████╔╝██████╔╝██║██╔████╔██║█████╗░░██║░░██║███████║██║░░██║\r\n██╔═══╝░██╔══██╗██║██║╚██╔╝██║██╔══╝░░██║░░██║██╔══██║██║░░██║\r\n██║░░░░░██║░░██║██║██║░╚═╝░██║███████╗██████╔╝██║░░██║╚█████╔╝\r\n╚═╝░░░░░╚═╝░░╚═╝╚═╝╚═╝░░░░░╚═╝╚══════╝╚═════╝░╚═╝░░╚═╝░╚════╝░\r\n\r\n* ===========\r\n*\r\n* CloneFactory.sol was originally published under MIT license.\r\n* Republished by PrimeDAO under GNU General Public License v3.0.\r\n*\r\n*/\r\n\r\n// SPDX-License-Identifier: GPL-3.0-or-later\r\n// solium-disable linebreak-style\r\n// solhint-disable max-line-length\r\n// solhint-disable no-inline-assembly\r\n\r\npragma solidity 0.8.4;\r\n\r\ncontract CloneFactory {\r\n\r\n    function createClone(address target) internal returns (address result) {\r\n        bytes20 targetBytes = bytes20(target);\r\n        assembly {\r\n            let clone := mload(0x40)\r\n            mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\r\n            mstore(add(clone, 0x14), targetBytes)\r\n            mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\r\n            result := create(0, clone, 0x37)\r\n        }\r\n    }\r\n\r\n    function isClone(address target, address query) internal view returns (bool result) {\r\n        bytes20 targetBytes = bytes20(target);\r\n        assembly {\r\n            let clone := mload(0x40)\r\n            mstore(clone, 0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000)\r\n            mstore(add(clone, 0xa), targetBytes)\r\n            mstore(add(clone, 0x1e), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\r\n\r\n            let other := add(clone, 0x40)\r\n            extcodecopy(query, other, 0, 0x2d)\r\n            result := and(\r\n            eq(mload(clone), mload(other)),\r\n            eq(mload(add(clone, 0xd)), mload(add(other, 0xd)))\r\n            )\r\n        }\r\n    }\r\n}\r\n"
      },
      "openzeppelin-solidity/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/seed/Seed.sol": {
        "Seed": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountReclaimed",
                  "type": "uint256"
                }
              ],
              "name": "FundingReclaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes",
                  "name": "metadata",
                  "type": "bytes"
                }
              ],
              "name": "MetadataUpdated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountPurchased",
                  "type": "uint256"
                }
              ],
              "name": "SeedsPurchased",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "beneficiary",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "feeAmount",
                  "type": "uint256"
                }
              ],
              "name": "TokensClaimed",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "beneficiary",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_fundingAmount",
                  "type": "uint256"
                }
              ],
              "name": "buy",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_funder",
                  "type": "address"
                }
              ],
              "name": "calculateClaim",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_buyer",
                  "type": "address"
                }
              ],
              "name": "checkWhitelisted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_funder",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_claimAmount",
                  "type": "uint256"
                }
              ],
              "name": "claim",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "close",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "closed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "endTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fee",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeAmountRequired",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeClaimed",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeRemainder",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "funders",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "seedAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "totalClaimed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fundingAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "fee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "feeClaimed",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fundingCollected",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fundingToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "fundingWithdrawn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "hardCap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_beneficiary",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_admin",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "_tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_softHardThresholds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "_price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32",
                  "name": "_vestingDuration",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "_vestingCliff",
                  "type": "uint32"
                },
                {
                  "internalType": "bool",
                  "name": "_permissionedSeed",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "_fee",
                  "type": "uint8"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initialized",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "isFunded",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "maximumReached",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "metadata",
              "outputs": [
                {
                  "internalType": "bytes",
                  "name": "",
                  "type": "bytes"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minimumReached",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "permissionedSeed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "retrieveFundingTokens",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "seedAmountRequired",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "seedClaimed",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "seedRemainder",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "seedToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "softCap",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "startTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalFunderCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "buyer",
                  "type": "address"
                }
              ],
              "name": "unwhitelist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes",
                  "name": "_metadata",
                  "type": "bytes"
                }
              ],
              "name": "updateMetadata",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "vestingCliff",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "vestingDuration",
              "outputs": [
                {
                  "internalType": "uint32",
                  "name": "",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "vestingStartTime",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_buyer",
                  "type": "address"
                }
              ],
              "name": "whitelist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_buyers",
                  "type": "address[]"
                }
              ],
              "name": "whitelistBatch",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "whitelisted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Smart contract for seed phases of liquid launch.",
            "kind": "dev",
            "methods": {
              "buy(uint256)": {
                "details": "Buy seed tokens.",
                "params": {
                  "_fundingAmount": "The amount of funding tokens to contribute."
                }
              },
              "calculateClaim(address)": {
                "details": "Calculates the maximum claim",
                "params": {
                  "_funder": "Address of funder to find the maximum claim"
                }
              },
              "checkWhitelisted(address)": {
                "details": "check whitelist status of a buyer",
                "params": {
                  "_buyer": "address of buyer to check status"
                }
              },
              "claim(address,uint256)": {
                "details": "Claim vested seed tokens.",
                "params": {
                  "_claimAmount": "The amount of seed token a users wants to claim.",
                  "_funder": "Address of funder to calculate seconds and amount claimable"
                }
              },
              "close()": {
                "details": "Close distribution."
              },
              "initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint8)": {
                "details": "Initialize Seed.",
                "params": {
                  "_admin": "The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.",
                  "_beneficiary": "The address that recieves fees.",
                  "_endTime": "Distribution end time in unix timecode.",
                  "_fee": "Success fee expressed as a % (e.g. 2 = 2% fee)",
                  "_permissionedSeed": "Set to true if only whitelisted adresses are allowed to participate.",
                  "_price": "The price in wei of fundingTokens when exchanged for seedTokens.",
                  "_softHardThresholds": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
                  "_startTime": "Distribution start time in unix timecode.",
                  "_tokens": "Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.",
                  "_vestingCliff": "Cliff duration in seconds.",
                  "_vestingDuration": "Vesting period duration in seconds."
                }
              },
              "pause()": {
                "details": "Pause distribution."
              },
              "retrieveFundingTokens()": {
                "details": "Returns funding tokens to user."
              },
              "unpause()": {
                "details": "Unpause distribution."
              },
              "unwhitelist(address)": {
                "details": "Remove address from whitelist.",
                "params": {
                  "buyer": "Address which needs to be unwhitelisted"
                }
              },
              "updateMetadata(bytes)": {
                "details": "Updates metadata.",
                "params": {
                  "_metadata": "Seed contract metadata, that is IPFS Hash"
                }
              },
              "whitelist(address)": {
                "details": "Add address to whitelist.",
                "params": {
                  "_buyer": "Address which needs to be whitelisted"
                }
              },
              "whitelistBatch(address[])": {
                "details": "Add multiple addresses to whitelist.",
                "params": {
                  "_buyers": "Array of addresses to whitelist addresses in batch"
                }
              },
              "withdraw()": {
                "details": "Withdraw funds from the contract"
              }
            },
            "title": "PrimeDAO Seed contract",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50612a98806100206000396000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c806383d59e001161015c578063d8039364116100ce578063ea34554011610087578063ea345540146105bb578063eaa53523146105ce578063f3640e74146105e1578063f851a440146105f8578063fb86a4041461060b578063fc582d411461061457600080fd5b8063d803936414610519578063d936547e1461052c578063d96a094a1461054f578063ddca3f4314610577578063e565eb4c1461059d578063e6e36ebb146105b257600080fd5b80639b19251a116101205780639b19251a146104cf578063a035b1fe146104e2578063a8660a78146104eb578063aad3ec96146104f4578063b774682f14610507578063bc0f5f841461051057600080fd5b806383d59e001461049a5780638456cb59146104a35780638a2448aa146104ab578063906a26e0146104b35780639a590427146104bc57600080fd5b80633ccfd60b116102005780635c975abb116101b95780635c975abb146104475780635e9777e81461045957806371f4b8e81461046257806378065f271461046b57806378e979251461047e5780637c6543031461048757600080fd5b80633ccfd60b1461040a5780633dba9e41146104145780633f4ba83a1461042157806343d726d61461042957806347d02f1b14610431578063597e1fb51461043a57600080fd5b80631cfe562e116102525780631cfe562e1461037257806320d8dad01461037b578063311f8483146103a75780633197cbb6146103d957806338af3eed146103e2578063392f37e9146103f557600080fd5b8063031b36771461028f5780630826d2c7146102f9578063117a36d1146103105780631514617e14610334578063158ef93e1461035e575b600080fd5b6102cc61029d3660046124e5565b601660205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b610302600f5481565b6040519081526020016102f0565b600c5461032490600160281b900460ff1681565b60405190151581526020016102f0565b60095461034990610100900463ffffffff1681565b60405163ffffffff90911681526020016102f0565b600c54610324906301000000900460ff1681565b61030260135481565b6103246103893660046124e5565b6001600160a01b031660009081526015602052604090205460ff1690565b6009546103c190600160481b90046001600160a01b031681565b6040516001600160a01b0390911681526020016102f0565b61030260085481565b6000546103c1906001600160a01b031681565b6103fd610627565b6040516102f0919061273f565b6104126106b5565b005b6009546103249060ff1681565b6104126107db565b610412610890565b61030260105481565b600c546103249060ff1681565b600c5461032490610100900460ff1681565b610302600e5481565b61030260125481565b600a546103c1906001600160a01b031681565b61030260075481565b600c546103249062010000900460ff1681565b61030260145481565b610412610ac0565b610302610b46565b61030260025481565b6104126104ca3660046124e5565b610e8b565b6104126104dd3660046124e5565b610f48565b61030260065481565b610302600d5481565b6103026105023660046125ee565b611008565b61030260115481565b61030260045481565b610412610527366004612506565b611495565b61032461053a3660046124e5565b60156020526000908152604090205460ff1681565b61056261055d3660046126f3565b61196c565b604080519283526020830191909152016102f0565b600a5461058b90600160a01b900460ff1681565b60405160ff90911681526020016102f0565b600c5461032490640100000000900460ff1681565b61030260055481565b6103026105c93660046124e5565b611f3b565b6104126105dc366004612617565b61204a565b60095461034990600160281b900463ffffffff1681565b6001546103c1906001600160a01b031681565b61030260035481565b610412610622366004612666565b61215c565b600b8054610634906129cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610660906129cf565b80156106ad5780601f10610682576101008083540402835291602001916106ad565b820191906000526020600020905b81548152906001019060200180831161069057829003601f168201915b505050505081565b6001546001600160a01b031633146106e85760405162461bcd60e51b81526004016106df90612772565b60405180910390fd5b600c54610100900460ff16156107105760405162461bcd60e51b81526004016106df9061282a565b600c54640100000000900460ff1661073a5760405162461bcd60e51b81526004016106df90612898565b600060145460135461074c9190612988565b601354601455600a5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561079f57600080fd5b505af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d7919061264a565b5050565b6001546001600160a01b031633146108055760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615156001141561082d5760405162461bcd60e51b81526004016106df906127a9565b600c5460ff6101009091041615156001146108835760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b60448201526064016106df565b600c805461ff0019169055565b6001546001600160a01b031633146108ba5760405162461bcd60e51b81526004016106df90612772565b600c5460ff16156108dd5760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff16156109055760405162461bcd60e51b81526004016106df9061282a565b600c54640100000000900460ff16156109e6576000601154600f5461092a9190612931565b60095460015460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350600160481b909104169063a9059cbb90604401602060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc919061264a565b6109d85760405162461bcd60e51b81526004016106df906127e0565b50600c805461ff0019169055565b6009546001546005546004546001600160a01b03600160481b90940484169363a9059cbb931691610a1691612931565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610a5c57600080fd5b505af1158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a94919061264a565b610ab05760405162461bcd60e51b81526004016106df906127e0565b600c805461ffff19166001179055565b6001546001600160a01b03163314610aea5760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615610b0d5760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff1615610b355760405162461bcd60e51b81526004016106df9061282a565b600c805461ff001916610100179055565b600c54600090610100900460ff1615610b715760405162461bcd60e51b81526004016106df9061282a565b426007541115610bce5760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b60648201526084016106df565b600c54640100000000900460ff1615610c295760405162461bcd60e51b815260206004820152601960248201527f536565643a206d696e696d756d20616c7265616479206d65740000000000000060448201526064016106df565b33600090815260166020526040902060020154610c885760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e740000000000000060448201526064016106df565b336000908152601660209081526040808320815160a08101835281548082526001830154948201949094526002820154928101839052600382015460608201526004909101546080820152600f805491949293929091610ce9908490612931565b9091555050606082015160118054600090610d05908490612931565b90915550506000808352606083018181526040808501838152338452601660209081529184208651815591860151600183015551600282015590516003820155608084015160049091015560138054839290610d62908490612988565b9091555050600a5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610db357600080fd5b505af1158015610dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610deb919061264a565b610e505760405162461bcd60e51b815260206004820152603060248201527f536565643a2063616e6e6f742072657475726e2066756e64696e6720746f6b6560448201526f3739903a379036b9b39739b2b73232b960811b60648201526084016106df565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a291505090565b6001546001600160a01b03163314610eb55760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615610ed85760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff1615610f005760405162461bcd60e51b81526004016106df9061282a565b60095460ff161515600114610f275760405162461bcd60e51b81526004016106df90612861565b6001600160a01b03166000908152601560205260409020805460ff19169055565b6001546001600160a01b03163314610f725760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615610f955760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff1615610fbd5760405162461bcd60e51b81526004016106df9061282a565b60095460ff161515600114610fe45760405162461bcd60e51b81526004016106df90612861565b6001600160a01b03166000908152601560205260409020805460ff19166001179055565b600c54600090640100000000900460ff166110355760405162461bcd60e51b81526004016106df90612898565b4260085411158061104f5750600c54600160281b900460ff165b6110af5760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b60648201526084016106df565b60006110ba84611f3b565b90506000811161110c5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c652069732030000000000060448201526064016106df565b828110156111735760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b60648201526084016106df565b600a5460009060649061119090600160a01b900460ff1686612969565b61119a9190612949565b6001600160a01b038616600090815260166020908152604091829020825160a0810184528154815260018201549281018381526002830154948201949094526003820154606082015260049091015460808201529293508691906111ff908390612931565b905250608081018051839190611216908390612931565b9052506001600160a01b038616600090815260166020908152604080832084518155918401516001830155830151600282015560608301516003820155608083015160049091015560108054879290611270908490612931565b9250508190555081601260008282546112899190612931565b909155505060095460005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101859052600160481b909204169063a9059cbb90604401602060405180830381600087803b1580156112e557600080fd5b505af11580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131d919061264a565b6113755760405162461bcd60e51b8152602060048201526024808201527f536565643a2063616e6e6f74207472616e7366657220746f2062656e656669636044820152636961727960e01b60648201526084016106df565b60095460405163a9059cbb60e01b81526001600160a01b03888116600483015260248201889052600160481b9092049091169063a9059cbb90604401602060405180830381600087803b1580156113cb57600080fd5b505af11580156113df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611403919061264a565b6114415760405162461bcd60e51b815260206004820152600f60248201526e536565643a206e6f20746f6b656e7360881b60448201526064016106df565b60005460408051878152602081018590526001600160a01b03928316928916917f9bd10be98695714f5cb43cefb59ba6417808b354710acafafe05e81b26492231910160405180910390a350949350505050565b600c546301000000900460ff16156114fa5760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b60648201526084016106df565b600c805463ff0000001916630100000017905588518990600190811061153057634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03168960008151811061156257634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614156115d75760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b60648201526084016106df565b876000815181106115f857634e487b7160e01b600052603260045260246000fd5b60200260200101518860018151811061162157634e487b7160e01b600052603260045260246000fd5b602002602001015110156116905760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b60648201526084016106df565b8263ffffffff168463ffffffff1610156117125760405162461bcd60e51b815260206004820152603d60248201527f53656564466163746f72793a2076657374696e674475726174696f6e2063616e60448201527f6e6f74206265206c657373207468616e2076657374696e67436c69666600000060648201526084016106df565b8585116117875760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d65000000000060648201526084016106df565b600080546001600160a01b03808e166001600160a01b031992831617835560018054918e169190921617905588518991906117d257634e487b7160e01b600052603260045260246000fd5b60200260200101516002819055508760018151811061180157634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600355600687905560078690556008859055600d8590556009805468ffffffffffffffff00191661010063ffffffff8781169190910268ffffffff0000000000191691909117600160281b918616919091021760ff19168315151790558851899060009061188a57634e487b7160e01b600052603260045260246000fd5b60200260200101516009806101000a8154816001600160a01b0302191690836001600160a01b03160217905550886001815181106118d857634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600a80546001600160a01b039092166001600160a81b031990921691909117600160a01b60ff841602179055600354879061192790670de0b6b3a764000090612969565b6119319190612949565b60048190556064906119479060ff841690612969565b6119519190612949565b6005819055600454600f556011555050505050505050505050565b600c54600090819060ff16156119945760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff16156119bc5760405162461bcd60e51b81526004016106df9061282a565b600c54600160281b900460ff1615611a165760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e67207265616368656400000060448201526064016106df565b60095460ff161580611a3757503360009081526015602052604090205460ff165b611a835760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f2072696768747300000000000060448201526064016106df565b4260085410158015611a9757504260075411155b611af95760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b60648201526084016106df565b600c5462010000900460ff16611c0657600554600454611b199190612931565b6009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b0316906370a082319060240160206040518083038186803b158015611b6257600080fd5b505afa158015611b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9a919061270b565b1015611bf45760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b60648201526084016106df565b600c805462ff00001916620100001790555b600654600090611c1e670de0b6b3a764000086612969565b611c289190612949565b601354600a5491925090600090606490611c4c90600160a01b900460ff1685612969565b611c569190612949565b600354909150611c668784612931565b1115611cc75760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b60648201526084016106df565b82600f541015611d2b5760405162461bcd60e51b815260206004820152602960248201527f536565643a207365656420646973747269627574696f6e20776f756c6420626560448201526808195e18d95959195960ba1b60648201526084016106df565b611d358683612931565b60138190555082600f6000828254611d4d9190612988565b925050819055508060116000828254611d669190612988565b9091555050600a546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611dbd57600080fd5b505af1158015611dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df5919061264a565b611e335760405162461bcd60e51b815260206004820152600f60248201526e536565643a206e6f20746f6b656e7360881b60448201526064016106df565b60025460135410611e5457600c805464ff0000000019166401000000001790555b60035460135410611e7f57600c805465ff00000000001916600160281b179055611e7b4290565b600d555b33600081815260166020526040902054611efa9190611e9f908690612931565b33600090815260166020526040902060020154611ebd908a90612931565b3360009081526016602052604090206001810154600390910154611ee2908790612931565b33600090815260166020526040902060040154612256565b60405183815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a291935090915050915091565b6001600160a01b0381166000908152601660209081526040808320815160a0810183528154815260018201549381019390935260028101549183019190915260038101546060830152600401546080820152600d54421015611fa05750600092915050565b6000600d54611fac4290565b611fb69190612988565b600954909150600160281b900463ffffffff16811015611fda575060009392505050565b600954610100900463ffffffff1681106120075760208201518251611fff9190612988565b949350505050565b6009548251600091610100900463ffffffff16906120259084612969565b61202f9190612949565b90508260200151816120419190612988565b95945050505050565b6001546001600160a01b031633146120745760405162461bcd60e51b81526004016106df90612772565b600c5460ff16156120975760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff16156120bf5760405162461bcd60e51b81526004016106df9061282a565b60095460ff1615156001146120e65760405162461bcd60e51b81526004016106df90612861565b60005b81518110156107d75760016015600084848151811061211857634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061215481612a0a565b9150506120e9565b600c546301000000900460ff161515600114158061218457506001546001600160a01b031633145b6122015760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a4016106df565b805161221490600b90602084019061232d565b50806040516122239190612723565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b600954610100900463ffffffff168510156122b35760405162461bcd60e51b815260206004820152601f60248201527f536565643a20616d6f756e745665737465645065725365636f6e64203e20300060448201526064016106df565b6040805160a081018252868152602080820186815282840188815260608401878152608085018781526001600160a01b038d166000908152601690955295842094518555915160018501555160028401555160038301559151600490910155600e80549161232083612a0a565b9190505550505050505050565b828054612339906129cf565b90600052602060002090601f01602090048101928261235b57600085556123a1565b82601f1061237457805160ff19168380011785556123a1565b828001600101855582156123a1579182015b828111156123a1578251825591602001919060010190612386565b506123ad9291506123b1565b5090565b5b808211156123ad57600081556001016123b2565b80356001600160a01b03811681146123dd57600080fd5b919050565b600082601f8301126123f2578081fd5b813560206124076124028361290d565b6128dc565b80838252828201915082860187848660051b8901011115612426578586fd5b855b8581101561244b57612439826123c6565b84529284019290840190600101612428565b5090979650505050505050565b600082601f830112612468578081fd5b813560206124786124028361290d565b80838252828201915082860187848660051b8901011115612497578586fd5b855b8581101561244b57813584529284019290840190600101612499565b80356123dd81612a51565b803563ffffffff811681146123dd57600080fd5b803560ff811681146123dd57600080fd5b6000602082840312156124f6578081fd5b6124ff826123c6565b9392505050565b60008060008060008060008060008060006101608c8e031215612527578687fd5b6125308c6123c6565b9a5061253e60208d016123c6565b995067ffffffffffffffff8060408e01351115612559578788fd5b6125698e60408f01358f016123e2565b99508060608e0135111561257b578788fd5b5061258c8d60608e01358e01612458565b975060808c0135965060a08c0135955060c08c013594506125af60e08d016124c0565b93506125be6101008d016124c0565b92506125cd6101208d016124b5565b91506125dc6101408d016124d4565b90509295989b509295989b9093969950565b60008060408385031215612600578182fd5b612609836123c6565b946020939093013593505050565b600060208284031215612628578081fd5b813567ffffffffffffffff81111561263e578182fd5b611fff848285016123e2565b60006020828403121561265b578081fd5b81516124ff81612a51565b60006020808385031215612678578182fd5b823567ffffffffffffffff8082111561268f578384fd5b818501915085601f8301126126a2578384fd5b8135818111156126b4576126b4612a3b565b6126c6601f8201601f191685016128dc565b915080825286848285010111156126db578485fd5b80848401858401378101909201929092529392505050565b600060208284031215612704578081fd5b5035919050565b60006020828403121561271c578081fd5b5051919050565b6000825161273581846020870161299f565b9190910192915050565b602081526000825180602084015261275e81604085016020870161299f565b601f01601f19169190910160400192915050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6020808252602a908201527f536565643a2073686f756c64207472616e73666572207365656420746f6b656e60408201526939903a379030b236b4b760b11b606082015260800190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604082015260600190565b6020808252601f908201527f536565643a206d6f64756c65206973206e6f742077686974656c697374656400604082015260600190565b60208082526024908201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604082015263081b595d60e21b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561290557612905612a3b565b604052919050565b600067ffffffffffffffff82111561292757612927612a3b565b5060051b60200190565b6000821982111561294457612944612a25565b500190565b60008261296457634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561298357612983612a25565b500290565b60008282101561299a5761299a612a25565b500390565b60005b838110156129ba5781810151838201526020016129a2565b838111156129c9576000848401525b50505050565b600181811c908216806129e357607f821691505b60208210811415612a0457634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612a1e57612a1e612a25565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114612a5f57600080fd5b5056fea26469706673582212201c8a1b8103d068fdee8abb5a994a62c1e31dddd9f82854db7af6a1cd4415a7ae64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A98 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83D59E00 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xD8039364 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xEA345540 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xEA345540 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xEAA53523 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xF3640E74 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0xFB86A404 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xFC582D41 EQ PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8039364 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xE565EB4C EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xE6E36EBB EQ PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B19251A GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xA8660A78 EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xAAD3EC96 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xB774682F EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0xBC0F5F84 EQ PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x83D59E00 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x8A2448AA EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x906A26E0 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x9A590427 EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x200 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x5E9777E8 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x71F4B8E8 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x78065F27 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x7C654303 EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x3DBA9E41 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x47D02F1B EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x597E1FB5 EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CFE562E GT PUSH2 0x252 JUMPI DUP1 PUSH4 0x1CFE562E EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x20D8DAD0 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x311F8483 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x392F37E9 EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31B3677 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x826D2C7 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x117A36D1 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x35E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CC PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x349 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x324 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x3C1 SWAP1 PUSH1 0x1 PUSH1 0x48 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x3C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH2 0x412 PUSH2 0x6B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x324 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x412 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x3C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x302 PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x412 PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH2 0x502 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x2506 JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x324 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x562 PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x58B SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH2 0x5C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x412 PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x204A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x349 SWAP1 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x3C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x622 CALLDATASIZE PUSH1 0x4 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x215C JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x634 SWAP1 PUSH2 0x29CF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x660 SWAP1 PUSH2 0x29CF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x682 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x690 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SLOAD PUSH1 0x13 SLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x14 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D959590E881CDA1BDD5B19081899481C185D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 PUSH1 0x11 SLOAD PUSH1 0xF SLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP2 DIV AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x998 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27E0 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP5 DIV DUP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 AND SWAP2 PUSH2 0xA16 SWAP2 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST TIMESTAMP PUSH1 0x7 SLOAD GT ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20646973747269627574696F6E20686176656E2774207374617274 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A206D696E696D756D20616C7265616479206D657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A207A65726F2066756E64696E6720616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xF DUP1 SLOAD SWAP2 SWAP5 SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 PUSH2 0xCE9 SWAP1 DUP5 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x11 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xD05 SWAP1 DUP5 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x60 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP4 DUP2 MSTORE CALLER DUP5 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP5 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP2 DUP7 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x13 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD62 SWAP1 DUP5 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0xE50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A2063616E6E6F742072657475726E2066756E64696E6720746F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3739903A379036B9B39739B2B73232B9 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1A689B1A62E3BB77F9C98D8759C04F341A67DEB5CC63CF53BE8324B691064950 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2898 JUMP JUMPDEST TIMESTAMP PUSH1 0x8 SLOAD GT ISZERO DUP1 PUSH2 0x104F JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A2074686520646973747269627574696F6E20686173206E6F742079 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x195D08199A5B9A5CDA1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BA DUP5 PUSH2 0x1F3B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x110C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20616D6F756E7420636C61696D61626C6520697320300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20726571756573742069732067726561746572207468616E20636C PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x185A5B58589B1948185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1190 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP7 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x119A SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP3 SWAP4 POP DUP7 SWAP2 SWAP1 PUSH2 0x11FF SWAP1 DUP4 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x80 DUP2 ADD DUP1 MLOAD DUP4 SWAP2 SWAP1 PUSH2 0x1216 SWAP1 DUP4 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x10 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1270 SWAP1 DUP5 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x12 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP3 DIV AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x536565643A2063616E6E6F74207472616E7366657220746F2062656E65666963 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x69617279 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x1441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x536565643A206E6F20746F6B656E73 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP10 AND SWAP2 PUSH32 0x9BD10BE98695714F5CB43CEFB59BA6417808B354710ACAFAFE05E81B26492231 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20636F6E747261637420616C726561647920696E697469616C697A PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR SWAP1 SSTORE DUP9 MLOAD DUP10 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1530 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1562 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x15D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A2073656564546F6B656E2063616E6E6F74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x10333AB73234B733AA37B5B2B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1621 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x1690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A20686172644361702063616E6E6F74206265206C PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x657373207468616E20736F667443617 PUSH1 0x84 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A2076657374696E674475726174696F6E2063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6F74206265206C657373207468616E2076657374696E67436C696666000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST DUP6 DUP6 GT PUSH2 0x1787 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A20656E6454696D652063616E6E6F74206265206C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657373207468616E20657175616C20746F20737461727454696D650000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 DUP15 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE DUP9 MLOAD DUP10 SWAP2 SWAP1 PUSH2 0x17D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1801 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x3 SSTORE PUSH1 0x6 DUP8 SWAP1 SSTORE PUSH1 0x7 DUP7 SWAP1 SSTORE PUSH1 0x8 DUP6 SWAP1 SSTORE PUSH1 0xD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH9 0xFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH4 0xFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH9 0xFFFFFFFF0000000000 NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x28 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE DUP9 MLOAD DUP10 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x188A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x9 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x18D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF DUP5 AND MUL OR SWAP1 SSTORE PUSH1 0x3 SLOAD DUP8 SWAP1 PUSH2 0x1927 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x1931 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x1947 SWAP1 PUSH1 0xFF DUP5 AND SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x1951 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0xF SSTORE PUSH1 0x11 SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1994 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A206D6178696D756D2066756E64696E672072656163686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x1A37 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1A83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A2073656E64657220686173206E6F20726967687473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST TIMESTAMP PUSH1 0x8 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x1A97 JUMPI POP TIMESTAMP PUSH1 0x7 SLOAD GT ISZERO JUMPDEST PUSH2 0x1AF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A206F6E6C7920616C6C6F77656420647572696E6720646973747269 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x189D5D1A5BDB881C195C9A5BD9 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C06 JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x1B19 SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9A SWAP2 SWAP1 PUSH2 0x270B JUMP JUMPDEST LT ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A2073756666696369656E74207365656473206E6F742070726F7669 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x191959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1C1E PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x1C28 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xA SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1C4C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP6 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x1C56 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x1C66 DUP8 DUP5 PUSH2 0x2931 JUMP JUMPDEST GT ISZERO PUSH2 0x1CC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20616D6F756E74206578636565647320636F6E7472616374207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6C65206861726443617 PUSH1 0xB4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 PUSH1 0xF SLOAD LT ISZERO PUSH2 0x1D2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A207365656420646973747269627574696F6E20776F756C64206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8195E18D959591959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x1D35 DUP7 DUP4 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x13 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D4D SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D66 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF5 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x1E33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x536565643A206E6F20746F6B656E73 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x13 SLOAD LT PUSH2 0x1E54 JUMPI PUSH1 0xC DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH5 0x100000000 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x13 SLOAD LT PUSH2 0x1E7F JUMPI PUSH1 0xC DUP1 SLOAD PUSH6 0xFF0000000000 NOT AND PUSH1 0x1 PUSH1 0x28 SHL OR SWAP1 SSTORE PUSH2 0x1E7B TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0xD SSTORE JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1EFA SWAP2 SWAP1 PUSH2 0x1E9F SWAP1 DUP7 SWAP1 PUSH2 0x2931 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1EBD SWAP1 DUP11 SWAP1 PUSH2 0x2931 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1EE2 SWAP1 DUP8 SWAP1 PUSH2 0x2931 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xCF5EF2B227E797B567F0DF4C49CC8B6207CFB60054EB899E5608DE08E5DCB1EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1FA0 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x1FAC TIMESTAMP SWAP1 JUMP JUMPDEST PUSH2 0x1FB6 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x1FDA JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 LT PUSH2 0x2007 JUMPI PUSH1 0x20 DUP3 ADD MLOAD DUP3 MLOAD PUSH2 0x1FFF SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH2 0x2025 SWAP1 DUP5 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x202F SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 ADD MLOAD DUP2 PUSH2 0x2041 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2074 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x20BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x20E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2118 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x2154 DUP2 PUSH2 0x2A0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO DUP1 PUSH2 0x2184 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20636F6E74726163742073686F756C64206E6F7420626520696E69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7469616C697A6564206F722063616C6C65722073686F756C642062652061646D PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x34B7 PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6DF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2214 SWAP1 PUSH1 0xB SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x232D JUMP JUMPDEST POP DUP1 PUSH1 0x40 MLOAD PUSH2 0x2223 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x9F579B21815D3F81581D32E97736CCBA1CC89D1918E48DA28E6E206ACD96864 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP6 LT ISZERO PUSH2 0x22B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20616D6F756E745665737465645065725365636F6E64203E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 DUP2 MSTORE DUP3 DUP5 ADD DUP9 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x80 DUP6 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 SWAP1 SWAP6 MSTORE SWAP6 DUP5 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0xE DUP1 SLOAD SWAP2 PUSH2 0x2320 DUP4 PUSH2 0x2A0A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2339 SWAP1 PUSH2 0x29CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x235B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x23A1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2374 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x23A1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x23A1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23A1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2386 JUMP JUMPDEST POP PUSH2 0x23AD SWAP3 SWAP2 POP PUSH2 0x23B1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23AD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23B2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x23DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23F2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2407 PUSH2 0x2402 DUP4 PUSH2 0x290D JUMP JUMPDEST PUSH2 0x28DC JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x2426 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x244B JUMPI PUSH2 0x2439 DUP3 PUSH2 0x23C6 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2428 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2468 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2478 PUSH2 0x2402 DUP4 PUSH2 0x290D JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x2497 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x244B JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2499 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x23DD DUP2 PUSH2 0x2A51 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x23DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x23DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x24FF DUP3 PUSH2 0x23C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x2527 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x2530 DUP13 PUSH2 0x23C6 JUMP JUMPDEST SWAP11 POP PUSH2 0x253E PUSH1 0x20 DUP14 ADD PUSH2 0x23C6 JUMP JUMPDEST SWAP10 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x40 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x2559 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x2569 DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x23E2 JUMP JUMPDEST SWAP10 POP DUP1 PUSH1 0x60 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x257B JUMPI DUP8 DUP9 REVERT JUMPDEST POP PUSH2 0x258C DUP14 PUSH1 0x60 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x2458 JUMP JUMPDEST SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP7 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP6 POP PUSH1 0xC0 DUP13 ADD CALLDATALOAD SWAP5 POP PUSH2 0x25AF PUSH1 0xE0 DUP14 ADD PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x25BE PUSH2 0x100 DUP14 ADD PUSH2 0x24C0 JUMP JUMPDEST SWAP3 POP PUSH2 0x25CD PUSH2 0x120 DUP14 ADD PUSH2 0x24B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x25DC PUSH2 0x140 DUP14 ADD PUSH2 0x24D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2600 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2609 DUP4 PUSH2 0x23C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2628 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x263E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1FFF DUP5 DUP3 DUP6 ADD PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x24FF DUP2 PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2678 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x268F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26A2 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x26B4 JUMPI PUSH2 0x26B4 PUSH2 0x2A3B JUMP JUMPDEST PUSH2 0x26C6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x28DC JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP7 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x26DB JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2704 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x271C JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2735 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x299F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x275E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x299F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A2063616C6C65722073686F756C642062652061646D696E00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A2073686F756C64206E6F7420626520636C6F736564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A2073686F756C64207472616E73666572207365656420746F6B656E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39903A379030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A2073686F756C64206E6F7420626520706175736564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A206D6F64756C65206973206E6F742077686974656C697374656400 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A206D696E696D756D2066756E64696E6720616D6F756E74206E6F74 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x81B595D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2905 JUMPI PUSH2 0x2905 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2927 JUMPI PUSH2 0x2927 PUSH2 0x2A3B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2944 JUMPI PUSH2 0x2944 PUSH2 0x2A25 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2964 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2983 JUMPI PUSH2 0x2983 PUSH2 0x2A25 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x299A JUMPI PUSH2 0x299A PUSH2 0x2A25 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x29A2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29C9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x29E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2A04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2A1E JUMPI PUSH2 0x2A1E PUSH2 0x2A25 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DUP11 SHL DUP2 SUB 0xD0 PUSH9 0xFDEE8ABB5A994A62C1 0xE3 SAR 0xDD 0xD9 0xF8 0x28 SLOAD 0xDB PUSH27 0xF6A1CD4415A7AE64736F6C63430008040033000000000000000000 ",
              "sourceMap": "1504:18604:0:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:22495:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:124:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "150:3:6",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "155:1:6",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "146:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "146:11:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "142:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "142:19:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:31:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:42:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:50:6"
                              },
                              "nodeType": "YulIf",
                              "src": "111:2:6"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:6",
                            "type": ""
                          }
                        ],
                        "src": "14:173:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "256:635:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "305:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "314:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "321:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "307:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "307:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "307:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "284:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "292:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "280:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "280:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "299:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "276:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "276:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "269:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "269:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "266:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "338:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "361:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "348:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "348:20:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "342:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "377:14:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "387:4:6",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "381:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "400:71:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "467:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_address_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "427:39:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "427:43:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "411:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "411:60:6"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "404:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "480:16:6",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "493:3:6"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "484:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "512:3:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "517:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "505:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "505:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "505:15:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "529:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "540:3:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "545:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "536:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "536:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "529:3:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "557:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "572:6:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "580:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "568:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "568:15:6"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "561:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "637:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "646:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "653:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "639:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "639:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "639:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "606:6:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "618:1:6",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "621:2:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "614:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "614:10:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "602:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "602:23:6"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "627:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "598:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "598:32:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "632:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "595:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "595:41:6"
                              },
                              "nodeType": "YulIf",
                              "src": "592:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "670:14:6",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "679:5:6"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "674:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "738:124:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "759:3:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "783:3:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_address",
                                            "nodeType": "YulIdentifier",
                                            "src": "764:18:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "764:23:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "752:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "752:36:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "752:36:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "801:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "812:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "817:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "808:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "808:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "801:3:6"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "833:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "844:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "849:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "840:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "840:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "833:3:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "704:1:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "707:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "701:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "701:9:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "711:18:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "713:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "722:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "725:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "718:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "718:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "713:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "697:3:6",
                                "statements": []
                              },
                              "src": "693:169:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "871:14:6",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "880:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "871:5:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_address_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "230:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "238:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "246:5:6",
                            "type": ""
                          }
                        ],
                        "src": "192:699:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "960:629:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1009:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1018:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1025:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1011:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1011:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1011:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "988:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "996:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "984:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "984:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1003:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "980:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "980:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "973:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "973:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "970:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1042:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1065:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1052:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1052:20:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1046:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1081:14:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1091:4:6",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1085:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1104:71:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1171:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_address_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "1131:39:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1131:43:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1115:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1115:60:6"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "1108:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1184:16:6",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "1197:3:6"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1188:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1216:3:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1221:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1209:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1209:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1209:15:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1233:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1244:3:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1249:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1240:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1240:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1233:3:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1261:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1276:6:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1284:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1272:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1272:15:6"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "1265:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1341:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1350:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1357:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1343:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1343:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1343:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1310:6:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1322:1:6",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "1325:2:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "1318:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1318:10:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1306:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1306:23:6"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1331:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1302:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1302:32:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1336:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1299:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1299:41:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1296:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1374:14:6",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "1383:5:6"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1378:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1442:118:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1463:3:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "1481:3:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1468:12:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1468:17:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1456:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1456:30:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1456:30:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1499:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1510:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1515:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1506:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1506:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "1499:3:6"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1531:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "1542:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1547:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1538:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1538:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1531:3:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1408:1:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1411:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1405:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1405:9:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1415:18:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1417:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1426:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1429:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1422:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1422:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1417:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1401:3:6",
                                "statements": []
                              },
                              "src": "1397:163:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1569:14:6",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "1578:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1569:5:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_uint256_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "934:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "942:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "950:5:6",
                            "type": ""
                          }
                        ],
                        "src": "896:693:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1640:82:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1650:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1672:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1659:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1659:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1650:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1710:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "1688:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1688:28:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1688:28:6"
                            }
                          ]
                        },
                        "name": "abi_decode_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1619:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1630:5:6",
                            "type": ""
                          }
                        ],
                        "src": "1594:128:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1775:115:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1785:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1807:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1794:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1794:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1785:5:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1868:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1877:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1880:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1870:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1870:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1870:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1836:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "1847:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1854:10:6",
                                            "type": "",
                                            "value": "0xffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1843:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1843:22:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "1833:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1833:33:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1826:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1826:41:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1823:2:6"
                            }
                          ]
                        },
                        "name": "abi_decode_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1754:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1765:5:6",
                            "type": ""
                          }
                        ],
                        "src": "1727:163:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1942:109:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1952:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1974:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1961:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1961:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1952:5:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2029:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2038:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2041:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2031:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2031:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2031:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2003:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "2014:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2021:4:6",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2010:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2010:16:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2000:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2000:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1993:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1993:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1990:2:6"
                            }
                          ]
                        },
                        "name": "abi_decode_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1921:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1932:5:6",
                            "type": ""
                          }
                        ],
                        "src": "1895:156:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2126:126:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2172:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2181:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2189:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2174:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2174:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2174:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2147:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2156:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2143:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2143:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2168:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2139:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2139:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2136:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2207:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2236:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2217:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2217:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2207:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2092:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2103:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2115:6:6",
                            "type": ""
                          }
                        ],
                        "src": "2056:196:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2541:973:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2588:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2597:6:6"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2605:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2590:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2590:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2590:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2562:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2571:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2558:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2558:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2583:3:6",
                                    "type": "",
                                    "value": "352"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2554:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2554:33:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2551:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2623:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2652:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2633:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2633:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2623:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2671:48:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2704:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2715:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2700:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2700:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2681:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2681:38:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2671:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2728:28:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2738:18:6",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2732:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2809:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2818:6:6"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "2826:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2811:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2811:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2811:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2788:9:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2799:2:6",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2784:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2784:18:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2771:12:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2771:32:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2805:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2768:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2768:40:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2765:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2844:97:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2887:9:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "2915:9:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2926:2:6",
                                                "type": "",
                                                "value": "64"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2911:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2911:18:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "calldataload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2898:12:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2898:32:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2883:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2883:48:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2933:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "2854:28:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2854:87:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "2844:6:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2994:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3003:6:6"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3011:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2996:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2996:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2996:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2973:9:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2984:2:6",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2969:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2969:18:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2956:12:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2956:32:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2990:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2953:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2953:40:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2950:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3029:97:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3072:9:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "3100:9:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3111:2:6",
                                                "type": "",
                                                "value": "96"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "3096:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3096:18:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "calldataload",
                                          "nodeType": "YulIdentifier",
                                          "src": "3083:12:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3083:32:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3068:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3068:48:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3118:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "3039:28:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3039:87:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "3029:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3135:43:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3162:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3173:3:6",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3158:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3158:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3145:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3145:33:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "3135:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3187:43:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3214:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3225:3:6",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3210:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3210:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3197:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3197:33:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "3187:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3239:43:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3266:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3277:3:6",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3262:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3262:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3249:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3249:33:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nodeType": "YulIdentifier",
                                  "src": "3239:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3291:48:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3323:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3334:3:6",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3319:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3319:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "3301:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3301:38:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value7",
                                  "nodeType": "YulIdentifier",
                                  "src": "3291:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3348:48:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3380:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3391:3:6",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3376:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3376:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "3358:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3358:38:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3348:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3405:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3435:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3446:3:6",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3431:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3431:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "3415:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3415:36:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value9",
                                  "nodeType": "YulIdentifier",
                                  "src": "3405:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3460:48:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3492:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3503:3:6",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3488:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3488:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "3471:16:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3471:37:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value10",
                                  "nodeType": "YulIdentifier",
                                  "src": "3460:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256t_uint256t_uint32t_uint32t_boolt_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2426:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2437:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2449:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2457:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2465:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2473:6:6",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "2481:6:6",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "2489:6:6",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "2497:6:6",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "2505:6:6",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "2513:6:6",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "2521:6:6",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "2529:7:6",
                            "type": ""
                          }
                        ],
                        "src": "2257:1257:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3606:177:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3652:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3661:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3669:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3654:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3654:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3654:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3627:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3636:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3623:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3623:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3648:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3619:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3619:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3616:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3687:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3716:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3697:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3697:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3687:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3735:42:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3762:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3773:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3758:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3758:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3745:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3745:32:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3735:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3564:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3575:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3587:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3595:6:6",
                            "type": ""
                          }
                        ],
                        "src": "3519:264:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3883:273:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3929:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3938:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3946:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3931:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3931:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3931:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3904:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3913:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3900:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3900:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3925:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3896:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3896:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3893:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3964:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3991:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3978:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3978:23:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3968:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4044:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4053:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4061:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4046:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4046:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4046:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4016:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4024:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4013:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4013:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4010:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4079:71:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4122:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4133:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4118:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4118:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4142:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "4089:28:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4089:61:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4079:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3849:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3860:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3872:6:6",
                            "type": ""
                          }
                        ],
                        "src": "3788:368:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4239:177:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4285:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4294:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4302:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4287:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4287:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4287:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4260:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4269:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4256:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4256:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4281:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4252:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4252:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4249:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4320:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4339:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4333:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4333:16:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "4324:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4380:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "4358:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4358:28:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4358:28:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4395:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4405:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4395:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4205:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4216:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4228:6:6",
                            "type": ""
                          }
                        ],
                        "src": "4161:255:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4500:729:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4510:12:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4520:2:6",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4514:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4567:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4576:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4584:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4569:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4569:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4569:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4542:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4551:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4538:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4538:23:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4563:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4534:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4534:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4531:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4602:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4629:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4616:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4616:23:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4606:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4648:28:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4658:18:6",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "4652:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4703:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4712:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4720:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4705:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4705:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4705:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4691:6:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4699:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4688:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4688:14:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4685:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4738:32:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4752:9:6"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4763:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4748:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4748:22:6"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "4742:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4818:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4827:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4835:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4820:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4820:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4820:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "4797:2:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4801:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4793:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4793:13:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4808:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4789:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4789:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4782:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4782:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4779:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4853:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "4876:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4863:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4863:16:6"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "4857:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4902:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "4904:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4904:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4904:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "4894:2:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4898:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4891:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4891:10:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4888:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4933:66:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "_4",
                                                "nodeType": "YulIdentifier",
                                                "src": "4974:2:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4978:4:6",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4970:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4970:13:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4989:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "4985:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4985:7:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "4966:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4966:27:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4995:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4962:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4962:36:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "4946:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4946:53:6"
                              },
                              "variables": [
                                {
                                  "name": "array",
                                  "nodeType": "YulTypedName",
                                  "src": "4937:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "5015:5:6"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5022:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5008:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5008:17:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5008:17:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5071:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5080:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5088:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5073:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5073:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5073:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "5048:2:6"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "5052:2:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5044:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5044:11:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5057:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5040:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5040:20:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5062:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5037:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5037:33:6"
                              },
                              "nodeType": "YulIf",
                              "src": "5034:2:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "array",
                                        "nodeType": "YulIdentifier",
                                        "src": "5123:5:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5130:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5119:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5119:14:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "5139:2:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5143:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5135:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5135:11:6"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "5148:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "5106:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5106:45:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5106:45:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "array",
                                            "nodeType": "YulIdentifier",
                                            "src": "5175:5:6"
                                          },
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "5182:2:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5171:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5171:14:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5187:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5167:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5167:23:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5192:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5160:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5160:39:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5160:39:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5208:15:6",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "5218:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5208:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4466:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4477:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4489:6:6",
                            "type": ""
                          }
                        ],
                        "src": "4421:808:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5304:120:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5350:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5359:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5367:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5352:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5352:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5352:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5325:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5334:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5321:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5321:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5346:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5317:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5317:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "5314:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5385:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5408:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5395:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5395:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5385:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5270:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5281:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5293:6:6",
                            "type": ""
                          }
                        ],
                        "src": "5234:190:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5510:113:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5556:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5565:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5573:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5558:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5558:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5558:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5531:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5540:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5527:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5527:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5552:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5523:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5523:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "5520:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5591:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5607:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5601:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5601:16:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5591:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5476:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5487:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5499:6:6",
                            "type": ""
                          }
                        ],
                        "src": "5429:194:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5765:137:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5775:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5795:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5789:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5789:13:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5779:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5837:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5845:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5833:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5833:17:6"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5852:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5857:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5811:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5811:53:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5811:53:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5873:23:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5884:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5889:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5880:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5880:16:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5873:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5741:3:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5746:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5757:3:6",
                            "type": ""
                          }
                        ],
                        "src": "5628:274:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6008:102:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6018:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6030:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6041:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6026:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6026:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6018:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6060:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6075:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6091:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6096:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "6087:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6087:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6100:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "6083:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6083:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6071:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6071:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6053:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6053:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6053:51:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5977:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5988:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5999:4:6",
                            "type": ""
                          }
                        ],
                        "src": "5907:203:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6272:218:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6282:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6294:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6305:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6290:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6290:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6282:4:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6317:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6335:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6340:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6331:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6331:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6344:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6327:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6327:19:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6321:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6362:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6377:6:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6385:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6373:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6373:15:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6355:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6355:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6355:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6409:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6420:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6405:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6405:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6429:6:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6437:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6425:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6425:15:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6398:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6398:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6398:43:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6461:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6472:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6457:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6457:18:6"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6477:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6450:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6450:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6450:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6225:9:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6236:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6244:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6252:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6263:4:6",
                            "type": ""
                          }
                        ],
                        "src": "6115:375:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6624:145:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6634:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6646:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6657:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6642:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6642:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6634:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6676:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6691:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6707:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6712:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "6703:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6703:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6716:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "6699:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6699:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6687:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6687:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6669:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6669:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6669:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6740:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6751:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6736:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6736:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6756:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6729:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6729:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6729:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6585:9:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6596:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6604:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6615:4:6",
                            "type": ""
                          }
                        ],
                        "src": "6495:274:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6869:92:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6879:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6891:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6902:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6887:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6887:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6879:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6921:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "6946:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6939:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6939:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6932:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6932:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6914:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6914:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6914:41:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6838:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6849:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6860:4:6",
                            "type": ""
                          }
                        ],
                        "src": "6774:187:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7085:262:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7102:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7113:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7095:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7095:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7095:21:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7125:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7145:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7139:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7139:13:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7129:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7172:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7183:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7168:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7168:18:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7188:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7161:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7161:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7161:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7230:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7238:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7226:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7226:15:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7247:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7258:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7243:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7243:18:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7263:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "7204:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7204:66:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7204:66:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7279:62:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7295:9:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "7314:6:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7322:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "7310:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7310:15:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7331:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "7327:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7327:7:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "7306:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7306:29:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7291:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7291:45:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7338:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7287:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7287:54:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7279:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7054:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7065:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7076:4:6",
                            "type": ""
                          }
                        ],
                        "src": "6966:381:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7468:102:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7478:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7490:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7501:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7486:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7486:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7478:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7520:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7535:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7551:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7556:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "7547:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7547:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "7560:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "7543:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7543:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7531:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7531:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7513:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7513:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7513:51:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$1519__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7437:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7448:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7459:4:6",
                            "type": ""
                          }
                        ],
                        "src": "7352:218:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7749:179:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7766:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7777:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7759:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7759:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7759:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7800:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7811:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7796:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7796:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7816:2:6",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7789:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7789:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7789:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7839:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7850:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7835:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7835:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7855:31:6",
                                    "type": "",
                                    "value": "Seed: maximum funding reached"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7828:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7828:59:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7828:59:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7896:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7908:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7919:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7904:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7904:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7896:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_15e7076c546be0ca4dc2af373bce4ad6640ff7f46c24f66ca25610dd1b8916ac__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7726:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7740:4:6",
                            "type": ""
                          }
                        ],
                        "src": "7575:353:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8107:236:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8124:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8135:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8117:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8117:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8117:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8158:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8169:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8154:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8154:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8174:2:6",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8147:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8147:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8147:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8197:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8208:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8193:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8193:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8213:34:6",
                                    "type": "",
                                    "value": "Seed: request is greater than cl"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8186:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8186:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8186:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8268:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8279:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8264:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8264:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8284:16:6",
                                    "type": "",
                                    "value": "aimable amount"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8257:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8257:44:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8257:44:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8310:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8322:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8333:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8318:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8318:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8310:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1bddfa32fa0b2e8e2af236a05fb0f44ec6b69708e8234aab487a02912862eb44__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8084:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8098:4:6",
                            "type": ""
                          }
                        ],
                        "src": "7933:410:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8522:238:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8539:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8550:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8532:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8532:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8532:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8573:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8584:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8569:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8569:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8589:2:6",
                                    "type": "",
                                    "value": "48"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8562:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8562:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8562:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8612:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8623:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8608:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8608:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8628:34:6",
                                    "type": "",
                                    "value": "SeedFactory: hardCap cannot be l"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8601:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8601:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8601:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8683:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8694:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8679:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8679:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8699:18:6",
                                    "type": "",
                                    "value": "ess than softCap"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8672:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8672:46:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8672:46:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8727:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8739:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8750:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8735:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8735:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8727:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1cce6066f0bd4aeb730ae5a1e283264d607d1f38279f5820ec128b47fd6559de__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8499:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8513:4:6",
                            "type": ""
                          }
                        ],
                        "src": "8348:412:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8939:232:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8956:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8967:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8949:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8949:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8949:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8990:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9001:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8986:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8986:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9006:2:6",
                                    "type": "",
                                    "value": "42"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8979:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8979:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8979:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9029:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9040:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9025:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9025:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9045:34:6",
                                    "type": "",
                                    "value": "Seed: amount exceeds contract sa"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9018:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9018:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9018:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9100:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9111:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9096:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9096:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9116:12:6",
                                    "type": "",
                                    "value": "le hardCap"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9089:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9089:40:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9089:40:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9138:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9150:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9161:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9146:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9146:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9138:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_20e0acef2a6370d241b67cb40da819b5af23cd4715cdceab16f790f16d7e5265__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8916:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8930:4:6",
                            "type": ""
                          }
                        ],
                        "src": "8765:406:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9350:296:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9367:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9378:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9360:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9360:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9360:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9401:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9412:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9397:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9397:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9417:2:6",
                                    "type": "",
                                    "value": "66"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9390:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9390:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9390:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9440:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9451:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9436:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9436:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9456:34:6",
                                    "type": "",
                                    "value": "Seed: contract should not be ini"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9429:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9429:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9429:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9511:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9522:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9507:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9507:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9527:34:6",
                                    "type": "",
                                    "value": "tialized or caller should be adm"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9500:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9500:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9500:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9582:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9593:3:6",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9578:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9578:19:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9599:4:6",
                                    "type": "",
                                    "value": "in"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9571:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9571:33:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9571:33:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9613:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9625:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9636:3:6",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9621:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9621:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9613:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_315453a72fd0f7a238326fbbf97017f2713bae124ce5971c36e174242348b575__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9327:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9341:4:6",
                            "type": ""
                          }
                        ],
                        "src": "9176:470:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9825:233:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9842:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9853:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9835:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9835:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9835:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9876:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9887:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9872:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9872:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9892:2:6",
                                    "type": "",
                                    "value": "43"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9865:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9865:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9865:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9915:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9926:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9911:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9911:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9931:34:6",
                                    "type": "",
                                    "value": "Seed: the distribution has not y"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9904:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9904:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9904:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9986:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9997:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9982:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9982:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10002:13:6",
                                    "type": "",
                                    "value": "et finished"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9975:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9975:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9975:41:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10025:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10037:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10048:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10033:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10033:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10025:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_32503fa127f946621f32e26bea9db9e0bdbdafece51707b1ec06d4bffa13dc2b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9802:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9816:4:6",
                            "type": ""
                          }
                        ],
                        "src": "9651:407:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10237:235:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10254:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10265:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10247:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10247:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10247:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10288:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10299:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10284:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10284:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10304:2:6",
                                    "type": "",
                                    "value": "45"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10277:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10277:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10277:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10327:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10338:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10323:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10323:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10343:34:6",
                                    "type": "",
                                    "value": "SeedFactory: seedToken cannot be"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10316:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10316:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10316:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10398:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10409:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10394:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10394:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10414:15:6",
                                    "type": "",
                                    "value": " fundingToken"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10387:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10387:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10387:43:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10439:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10451:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10462:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10447:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10447:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10439:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3c2f328bad54867c58ab6068866920653ae1fbd279562e938df3f7ef04e90e43__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10214:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10228:4:6",
                            "type": ""
                          }
                        ],
                        "src": "10063:409:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10651:249:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10668:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10679:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10661:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10661:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10661:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10702:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10713:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10698:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10698:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10718:2:6",
                                    "type": "",
                                    "value": "59"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10691:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10691:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10691:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10741:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10752:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10737:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10737:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10757:34:6",
                                    "type": "",
                                    "value": "SeedFactory: endTime cannot be l"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10730:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10730:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10730:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10812:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10823:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10808:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10808:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10828:29:6",
                                    "type": "",
                                    "value": "ess than equal to startTime"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10801:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10801:57:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10801:57:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10867:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10879:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10890:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10875:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10875:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10867:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_45b6d46e7f4bbf195001bffdfc00bdc86e3217f69fc1268b5f1ecfa0a6c7ea90__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10628:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10642:4:6",
                            "type": ""
                          }
                        ],
                        "src": "10477:423:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11079:181:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11096:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11107:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11089:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11089:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11089:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11130:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11141:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11126:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11126:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11146:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11119:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11119:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11119:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11169:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11180:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11165:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11165:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11185:33:6",
                                    "type": "",
                                    "value": "Seed: amountVestedPerSecond > 0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11158:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11158:61:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11158:61:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11228:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11240:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11251:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11236:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11236:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11228:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_50b1ee67bf17b7a96efbb51141e32cd12ded03300adf63badf99c0051e2b4f4e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11056:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11070:4:6",
                            "type": ""
                          }
                        ],
                        "src": "10905:355:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11439:238:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11456:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11467:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11449:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11449:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11449:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11490:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11501:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11486:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11486:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11506:2:6",
                                    "type": "",
                                    "value": "48"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11479:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11479:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11479:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11529:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11540:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11525:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11525:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11545:34:6",
                                    "type": "",
                                    "value": "Seed: cannot return funding toke"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11518:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11518:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11518:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11600:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11611:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11596:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11596:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11616:18:6",
                                    "type": "",
                                    "value": "ns to msg.sender"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11589:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11589:46:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11589:46:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11644:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11656:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11667:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11652:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11652:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11644:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6cb63436ed2c012e3e5e63503379bd6676b0608abf76cc13af246b5cf14d3cd4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11416:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11430:4:6",
                            "type": ""
                          }
                        ],
                        "src": "11265:412:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11856:176:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11873:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11884:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11866:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11866:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11866:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11907:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11918:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11903:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11903:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11923:2:6",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11896:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11896:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11896:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11946:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11957:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11942:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11942:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11962:28:6",
                                    "type": "",
                                    "value": "Seed: sender has no rights"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11935:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11935:56:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11935:56:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12000:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12012:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12023:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12008:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12008:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12000:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_6eb12f0b416b7cc2c84b7fe88d95ab7bd528df6a2f41a0e3588bdf49ba77a203__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11833:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11847:4:6",
                            "type": ""
                          }
                        ],
                        "src": "11682:350:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12211:251:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12228:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12239:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12221:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12221:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12221:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12262:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12273:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12258:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12258:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12278:2:6",
                                    "type": "",
                                    "value": "61"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12251:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12251:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12251:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12301:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12312:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12297:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12297:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12317:34:6",
                                    "type": "",
                                    "value": "SeedFactory: vestingDuration can"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12290:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12290:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12290:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12372:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12383:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12368:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12368:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12388:31:6",
                                    "type": "",
                                    "value": "not be less than vestingCliff"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12361:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12361:59:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12361:59:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12429:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12441:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12452:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12437:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12437:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12429:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_73ba4871f70fabb19406955e457a3974226273a196427c3f2e8175668060ef2d__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12188:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12202:4:6",
                            "type": ""
                          }
                        ],
                        "src": "12037:425:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12641:172:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12658:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12669:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12651:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12651:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12651:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12692:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12703:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12688:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12688:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12708:2:6",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12681:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12681:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12681:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12731:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12742:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12727:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12727:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12747:24:6",
                                    "type": "",
                                    "value": "Seed: should be paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12720:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12720:52:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12720:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12781:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12793:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12804:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12789:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12789:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12781:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_76af53b280841b4a5776a80a2070325d6baf122ccbfa842ef1a7ee360e9c43f7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12618:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12632:4:6",
                            "type": ""
                          }
                        ],
                        "src": "12467:346:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12992:231:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13009:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13020:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13002:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13002:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13002:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13043:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13054:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13039:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13039:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13059:2:6",
                                    "type": "",
                                    "value": "41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13032:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13032:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13032:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13082:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13093:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13078:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13078:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13098:34:6",
                                    "type": "",
                                    "value": "Seed: seed distribution would be"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13071:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13071:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13071:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13153:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13164:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13149:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13149:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13169:11:6",
                                    "type": "",
                                    "value": " exceeded"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13142:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13142:39:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13142:39:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13190:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13202:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13213:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13198:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13198:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13190:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7adf7eb97637e21704a264094ca0e4f99defabca846e0ecfbb17a13995cec547__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12969:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12983:4:6",
                            "type": ""
                          }
                        ],
                        "src": "12818:405:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13402:178:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13419:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13430:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13412:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13412:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13412:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13453:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13464:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13449:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13449:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13469:2:6",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13442:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13442:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13442:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13492:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13503:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13488:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13488:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13508:30:6",
                                    "type": "",
                                    "value": "Seed: caller should be admin"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13481:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13481:58:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13481:58:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13548:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13560:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13571:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13556:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13556:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13548:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8425246c8860d660fb55cdef4d1a144dcc62c1cee77ed8aedb230ea46c2c2b14__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13379:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13393:4:6",
                            "type": ""
                          }
                        ],
                        "src": "13228:352:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13759:176:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13776:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13787:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13769:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13769:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13769:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13810:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13821:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13806:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13806:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13826:2:6",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13799:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13799:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13799:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13849:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13860:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13845:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13845:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13865:28:6",
                                    "type": "",
                                    "value": "Seed: should not be closed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13838:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13838:56:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13838:56:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13903:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13915:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13926:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13911:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13911:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13903:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_86c223e4d678e1a7f2304b5148c636c8382b870e6b2125728763308d866b327b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13736:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13750:4:6",
                            "type": ""
                          }
                        ],
                        "src": "13585:350:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14114:235:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14131:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14142:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14124:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14124:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14124:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14165:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14176:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14161:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14161:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14181:2:6",
                                    "type": "",
                                    "value": "45"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14154:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14154:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14154:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14204:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14215:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14200:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14200:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14220:34:6",
                                    "type": "",
                                    "value": "Seed: only allowed during distri"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14193:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14193:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14193:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14275:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14286:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14271:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14271:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14291:15:6",
                                    "type": "",
                                    "value": "bution period"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14264:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14264:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14264:43:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14316:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14328:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14339:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14324:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14324:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14316:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_8d88b9bb77ee9d216d5b2a6ad0a5e14bcbdc1adf81a450e41caaf1bcc0b37968__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14091:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14105:4:6",
                            "type": ""
                          }
                        ],
                        "src": "13940:409:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14528:232:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14545:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14556:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14538:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14538:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14538:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14579:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14590:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14575:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14575:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14595:2:6",
                                    "type": "",
                                    "value": "42"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14568:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14568:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14568:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14618:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14629:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14614:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14614:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14634:34:6",
                                    "type": "",
                                    "value": "Seed: should transfer seed token"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14607:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14607:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14607:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14689:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14700:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14685:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14685:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14705:12:6",
                                    "type": "",
                                    "value": "s to admin"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14678:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14678:40:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14678:40:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14727:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14739:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14750:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14735:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14735:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14727:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_944fa369c19ec21b5af152d2bed7bb2fec462f03494354b38dfd9e54e02d5eb1__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14505:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14519:4:6",
                            "type": ""
                          }
                        ],
                        "src": "14354:406:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14939:165:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14956:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14967:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14949:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14949:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14949:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14990:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15001:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14986:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14986:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15006:2:6",
                                    "type": "",
                                    "value": "15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14979:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14979:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14979:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15029:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15040:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15025:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15025:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15045:17:6",
                                    "type": "",
                                    "value": "Seed: no tokens"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15018:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15018:45:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15018:45:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15072:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15084:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15095:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15080:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15080:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15072:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9b05eb0df5e87a3e2fb5b77f5dc8aeb2610f2470b51da808081f9d80b49571fa__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14916:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14930:4:6",
                            "type": ""
                          }
                        ],
                        "src": "14765:339:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15283:224:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15300:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15311:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15293:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15293:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15293:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15334:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15345:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15330:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15330:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15350:2:6",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15323:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15323:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15323:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15373:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15384:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15369:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15369:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15389:34:6",
                                    "type": "",
                                    "value": "Seed: contract already initializ"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15362:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15362:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15362:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15444:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15455:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15440:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15440:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15460:4:6",
                                    "type": "",
                                    "value": "ed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15433:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15433:32:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15433:32:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15474:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15486:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15497:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15482:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15482:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15474:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9feb8d1289c2fb4c117422b00150d454c681aa03173d1e5e9c08711ea591c21c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15260:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15274:4:6",
                            "type": ""
                          }
                        ],
                        "src": "15109:398:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15686:176:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15703:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15714:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15696:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15696:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15696:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15737:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15748:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15733:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15733:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15753:2:6",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15726:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15726:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15726:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15776:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15787:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15772:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15772:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15792:28:6",
                                    "type": "",
                                    "value": "Seed: should not be paused"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15765:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15765:56:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15765:56:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15830:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15842:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15853:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15838:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15838:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15830:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a23a57fe88069c51bc08c12fd26b2eebeb52db529302bad9b0964903d450e4af__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15663:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15677:4:6",
                            "type": ""
                          }
                        ],
                        "src": "15512:350:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16041:224:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16058:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16069:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16051:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16051:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16051:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16092:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16103:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16088:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16088:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16108:2:6",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16081:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16081:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16081:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16131:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16142:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16127:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16127:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16147:34:6",
                                    "type": "",
                                    "value": "Seed: distribution haven't start"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16120:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16120:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16120:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16202:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16213:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16198:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16198:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16218:4:6",
                                    "type": "",
                                    "value": "ed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16191:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16191:32:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16191:32:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16232:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16244:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16255:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16240:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16240:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16232:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b2f72f9ec81f0ebeefd4775bd3fc6040aafa12f06a22fcfdd01144f383dda52a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16018:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16032:4:6",
                            "type": ""
                          }
                        ],
                        "src": "15867:398:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16444:225:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16461:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16472:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16454:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16454:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16454:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16495:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16506:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16491:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16491:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16511:2:6",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16484:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16484:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16484:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16534:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16545:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16530:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16530:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16550:34:6",
                                    "type": "",
                                    "value": "Seed: sufficient seeds not provi"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16523:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16523:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16523:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16605:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16616:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16601:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16601:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16621:5:6",
                                    "type": "",
                                    "value": "ded"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16594:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16594:33:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16594:33:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16636:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16648:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16659:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16644:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16644:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16636:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c9494f463e237819baf53c3c4a213e5892045b4750e358c413fde0f19cad1cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16421:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16435:4:6",
                            "type": ""
                          }
                        ],
                        "src": "16270:399:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16848:175:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16865:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16876:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16858:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16858:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16858:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16899:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16910:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16895:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16895:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16915:2:6",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16888:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16888:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16888:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16938:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16949:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16934:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16934:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16954:27:6",
                                    "type": "",
                                    "value": "Seed: minimum already met"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16927:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16927:55:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16927:55:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16991:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17003:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17014:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16999:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16999:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16991:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d9e99c433f7148732f6a6e64e7968595f08274c6b3f328e88bc3aba1b137572e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16825:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16839:4:6",
                            "type": ""
                          }
                        ],
                        "src": "16674:349:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17202:181:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17219:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17230:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17212:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17212:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17212:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17253:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17264:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17249:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17249:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17269:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17242:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17242:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17242:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17292:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17303:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17288:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17288:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17308:33:6",
                                    "type": "",
                                    "value": "Seed: module is not whitelisted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17281:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17281:61:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17281:61:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17351:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17363:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17374:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17359:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17359:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17351:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e8f8f9ff1e0ebb6b35e95bbf18b180dbd00b13990c4d202a134dcc92c3161589__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17179:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17193:4:6",
                            "type": ""
                          }
                        ],
                        "src": "17028:355:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17562:226:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17579:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17590:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17572:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17572:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17572:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17613:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17624:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17609:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17609:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17629:2:6",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17602:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17602:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17602:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17652:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17663:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17648:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17648:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17668:34:6",
                                    "type": "",
                                    "value": "Seed: minimum funding amount not"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17641:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17641:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17641:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17723:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17734:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17719:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17719:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17739:6:6",
                                    "type": "",
                                    "value": " met"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17712:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17712:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17712:34:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17755:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17767:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17778:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17763:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17763:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17755:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ea0587534d65c13c5e11e9be3f22728929996356d14971fc52207eed3f266be9__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17539:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17553:4:6",
                            "type": ""
                          }
                        ],
                        "src": "17388:400:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17967:177:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17984:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17995:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17977:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17977:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17977:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18018:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18029:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18014:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18014:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18034:2:6",
                                    "type": "",
                                    "value": "27"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18007:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18007:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18007:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18057:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18068:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18053:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18053:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18073:29:6",
                                    "type": "",
                                    "value": "Seed: amount claimable is 0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18046:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18046:57:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18046:57:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18112:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18124:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18135:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18120:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18120:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18112:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f1b8448054190aa0ef3da617dffb2bc089590a0eaeef83ccf0b57e502985cc9a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17944:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17958:4:6",
                            "type": ""
                          }
                        ],
                        "src": "17793:351:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18323:175:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18340:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18351:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18333:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18333:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18333:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18374:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18385:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18370:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18370:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18390:2:6",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18363:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18363:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18363:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18413:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18424:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18409:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18409:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18429:27:6",
                                    "type": "",
                                    "value": "Seed: zero funding amount"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18402:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18402:55:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18402:55:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18466:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18478:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18489:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18474:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18474:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18466:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f2ca9e11358b1d32b639d33ff3722add87022e1b36fa5c6977a66a7546dde75c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18300:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18314:4:6",
                            "type": ""
                          }
                        ],
                        "src": "18149:349:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18677:226:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18694:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18705:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18687:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18687:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18687:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18728:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18739:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18724:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18724:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18744:2:6",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18717:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18717:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18717:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18767:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18778:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18763:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18763:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18783:34:6",
                                    "type": "",
                                    "value": "Seed: cannot transfer to benefic"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18756:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18756:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18756:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18838:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18849:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18834:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18834:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18854:6:6",
                                    "type": "",
                                    "value": "iary"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18827:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18827:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18827:34:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18870:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18882:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18893:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18878:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18878:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18870:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fe89ce1ef99a5d6714f309a8d01d9e520903bcfd255cf4241ce42b3145d7fd6f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18654:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18668:4:6",
                            "type": ""
                          }
                        ],
                        "src": "18503:400:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19009:76:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19019:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19031:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19042:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19027:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19027:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19019:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19061:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19072:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19054:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19054:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19054:25:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18978:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18989:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19000:4:6",
                            "type": ""
                          }
                        ],
                        "src": "18908:177:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19219:119:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19229:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19241:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19252:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19237:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19237:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19229:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19271:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19282:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19264:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19264:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19264:25:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19309:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19320:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19305:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19305:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19325:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19298:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19298:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19298:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19180:9:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "19191:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19199:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19210:4:6",
                            "type": ""
                          }
                        ],
                        "src": "19090:248:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19556:250:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19566:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19578:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19589:3:6",
                                    "type": "",
                                    "value": "160"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19574:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19574:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19566:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19609:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19620:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19602:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19602:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19602:25:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19647:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19658:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19643:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19643:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19663:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19636:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19636:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19636:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19690:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19701:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19686:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19686:18:6"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "19706:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19679:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19679:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19679:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19733:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19744:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19729:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19729:18:6"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "19749:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19722:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19722:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19722:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19776:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19787:3:6",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19772:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19772:19:6"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "19793:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19765:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19765:35:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19765:35:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19493:9:6",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "19504:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "19512:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "19520:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "19528:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19536:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19547:4:6",
                            "type": ""
                          }
                        ],
                        "src": "19343:463:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19910:93:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19920:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19932:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19943:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19928:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19928:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19920:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19962:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "19977:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19985:10:6",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "19973:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19973:23:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19955:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19955:42:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19955:42:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19879:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19890:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19901:4:6",
                            "type": ""
                          }
                        ],
                        "src": "19811:192:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20105:87:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20115:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20127:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20138:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20123:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20123:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20115:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20157:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "20172:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20180:4:6",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "20168:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20168:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20150:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20150:36:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20150:36:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20074:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20085:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20096:4:6",
                            "type": ""
                          }
                        ],
                        "src": "20008:184:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20242:230:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20252:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20268:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "20262:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20262:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "20252:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20280:58:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "20302:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "size",
                                            "nodeType": "YulIdentifier",
                                            "src": "20318:4:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "20324:2:6",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "20314:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20314:13:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "20333:2:6",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "20329:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20329:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "20310:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20310:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20298:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20298:40:6"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "20284:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20413:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "20415:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20415:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20415:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "20356:10:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20368:18:6",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "20353:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20353:34:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "20392:10:6"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "20404:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "20389:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20389:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "20350:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20350:62:6"
                              },
                              "nodeType": "YulIf",
                              "src": "20347:2:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20451:2:6",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "20455:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20444:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20444:22:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20444:22:6"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "20222:4:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "20231:6:6",
                            "type": ""
                          }
                        ],
                        "src": "20197:275:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20546:114:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20590:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "20592:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20592:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20592:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "20562:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20570:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20559:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20559:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "20556:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20621:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20637:1:6",
                                        "type": "",
                                        "value": "5"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "20640:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "20633:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20633:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20649:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20629:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20629:25:6"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "20621:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_array_address_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "20526:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "20537:4:6",
                            "type": ""
                          }
                        ],
                        "src": "20477:183:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20713:80:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20740:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "20742:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20742:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20742:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "20729:1:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "20736:1:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "20732:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20732:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20726:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20726:13:6"
                              },
                              "nodeType": "YulIf",
                              "src": "20723:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20771:16:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "20782:1:6"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20785:1:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20778:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20778:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "20771:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "20696:1:6",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "20699:1:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "20705:3:6",
                            "type": ""
                          }
                        ],
                        "src": "20665:128:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20844:171:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20875:111:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "20896:1:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "20903:3:6",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "20908:10:6",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "20899:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "20899:20:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "20889:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20889:31:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20889:31:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20940:1:6",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20943:4:6",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "20933:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20933:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20933:15:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "20968:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20971:4:6",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "20961:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20961:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20961:15:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20864:1:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "20857:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20857:9:6"
                              },
                              "nodeType": "YulIf",
                              "src": "20854:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20995:14:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "21004:1:6"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "21007:1:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "21000:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21000:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "20995:1:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "20829:1:6",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "20832:1:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "20838:1:6",
                            "type": ""
                          }
                        ],
                        "src": "20798:217:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21072:116:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21131:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "21133:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21133:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21133:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "21103:1:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "21096:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "21096:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "21089:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21089:17:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "21111:1:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "21122:1:6",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "21118:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "21118:6:6"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "21126:1:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "21114:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "21114:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "21108:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21108:21:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21085:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21085:45:6"
                              },
                              "nodeType": "YulIf",
                              "src": "21082:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21162:20:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "21177:1:6"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "21180:1:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "21173:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21173:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "21162:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "21051:1:6",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "21054:1:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "21060:7:6",
                            "type": ""
                          }
                        ],
                        "src": "21020:168:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21242:76:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21264:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "21266:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21266:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21266:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "21258:1:6"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "21261:1:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "21255:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21255:8:6"
                              },
                              "nodeType": "YulIf",
                              "src": "21252:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21295:17:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "21307:1:6"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "21310:1:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "21303:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21303:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "21295:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "21224:1:6",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "21227:1:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "21233:4:6",
                            "type": ""
                          }
                        ],
                        "src": "21193:125:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21376:205:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "21386:10:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21395:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "21390:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21455:63:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "21480:3:6"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "21485:1:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "21476:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21476:11:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21499:3:6"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "21504:1:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "21495:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "21495:11:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "21489:5:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21489:18:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21469:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21469:39:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21469:39:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "21416:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21419:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "21413:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21413:13:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "21427:19:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "21429:15:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "21438:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21441:2:6",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "21434:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21434:10:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "21429:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "21409:3:6",
                                "statements": []
                              },
                              "src": "21405:113:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21544:31:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "21557:3:6"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "21562:6:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "21553:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21553:16:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21571:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21546:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21546:27:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21546:27:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "21533:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "21536:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "21530:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21530:13:6"
                              },
                              "nodeType": "YulIf",
                              "src": "21527:2:6"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "21354:3:6",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "21359:3:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21364:6:6",
                            "type": ""
                          }
                        ],
                        "src": "21323:258:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21641:325:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21651:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21665:1:6",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "21668:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "21661:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21661:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "21651:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "21682:38:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "21712:4:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21718:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21708:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21708:12:6"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "21686:18:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21759:31:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "21761:27:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "21775:6:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21783:4:6",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "21771:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21771:17:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "21761:6:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "21739:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "21732:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21732:26:6"
                              },
                              "nodeType": "YulIf",
                              "src": "21729:2:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "21849:111:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21870:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "21877:3:6",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "21882:10:6",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "21873:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21873:20:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21863:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21863:31:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21863:31:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21914:1:6",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21917:4:6",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "21907:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21907:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21907:15:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21942:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "21945:4:6",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "21935:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21935:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21935:15:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "21805:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "21828:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21836:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "21825:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21825:14:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "21802:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21802:38:6"
                              },
                              "nodeType": "YulIf",
                              "src": "21799:2:6"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "21621:4:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "21630:6:6",
                            "type": ""
                          }
                        ],
                        "src": "21586:380:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22018:88:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22049:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "22051:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22051:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22051:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22034:5:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22045:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "22041:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22041:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "22031:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22031:17:6"
                              },
                              "nodeType": "YulIf",
                              "src": "22028:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "22080:20:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22091:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22098:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22087:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22087:13:6"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "22080:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22000:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "22010:3:6",
                            "type": ""
                          }
                        ],
                        "src": "21971:135:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22143:95:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22160:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22167:3:6",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22172:10:6",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "22163:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22163:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22153:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22153:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22153:31:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22200:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22203:4:6",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22193:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22193:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22193:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22224:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22227:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "22217:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22217:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22217:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "22111:127:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22275:95:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22292:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22299:3:6",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22304:10:6",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "22295:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22295:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22285:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22285:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22285:31:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22332:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22335:4:6",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22325:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22325:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22325:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22356:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22359:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "22349:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22349:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22349:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "22243:127:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22417:76:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22471:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22480:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "22483:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "22473:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22473:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22473:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "22440:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "22461:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "22454:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "22454:13:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "22447:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "22447:21:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "22437:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22437:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "22430:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22430:40:6"
                              },
                              "nodeType": "YulIf",
                              "src": "22427:2:6"
                            }
                          ]
                        },
                        "name": "validator_revert_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22406:5:6",
                            "type": ""
                          }
                        ],
                        "src": "22375:118:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_bool(value)\n    }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256t_uint256t_uint32t_uint32t_boolt_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 352) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(calldataload(add(headStart, 64)), _1) { revert(value4, value4) }\n        value2 := abi_decode_array_address_dyn(add(headStart, calldataload(add(headStart, 64))), dataEnd)\n        if gt(calldataload(add(headStart, 96)), _1) { revert(value4, value4) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, calldataload(add(headStart, 96))), dataEnd)\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        value7 := abi_decode_uint32(add(headStart, 224))\n        value8 := abi_decode_uint32(add(headStart, 256))\n        value9 := abi_decode_bool(add(headStart, 288))\n        value10 := abi_decode_uint8(add(headStart, 320))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(_4, 0x1f), not(31)), _1))\n        mstore(array, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value0, value0) }\n        calldatacopy(add(array, _1), add(_3, _1), _4)\n        mstore(add(add(array, _4), _1), value0)\n        value0 := array\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1519__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_15e7076c546be0ca4dc2af373bce4ad6640ff7f46c24f66ca25610dd1b8916ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Seed: maximum funding reached\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1bddfa32fa0b2e8e2af236a05fb0f44ec6b69708e8234aab487a02912862eb44__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Seed: request is greater than cl\")\n        mstore(add(headStart, 96), \"aimable amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1cce6066f0bd4aeb730ae5a1e283264d607d1f38279f5820ec128b47fd6559de__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"SeedFactory: hardCap cannot be l\")\n        mstore(add(headStart, 96), \"ess than softCap\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_20e0acef2a6370d241b67cb40da819b5af23cd4715cdceab16f790f16d7e5265__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Seed: amount exceeds contract sa\")\n        mstore(add(headStart, 96), \"le hardCap\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_315453a72fd0f7a238326fbbf97017f2713bae124ce5971c36e174242348b575__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"Seed: contract should not be ini\")\n        mstore(add(headStart, 96), \"tialized or caller should be adm\")\n        mstore(add(headStart, 128), \"in\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_32503fa127f946621f32e26bea9db9e0bdbdafece51707b1ec06d4bffa13dc2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Seed: the distribution has not y\")\n        mstore(add(headStart, 96), \"et finished\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3c2f328bad54867c58ab6068866920653ae1fbd279562e938df3f7ef04e90e43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"SeedFactory: seedToken cannot be\")\n        mstore(add(headStart, 96), \" fundingToken\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45b6d46e7f4bbf195001bffdfc00bdc86e3217f69fc1268b5f1ecfa0a6c7ea90__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"SeedFactory: endTime cannot be l\")\n        mstore(add(headStart, 96), \"ess than equal to startTime\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_50b1ee67bf17b7a96efbb51141e32cd12ded03300adf63badf99c0051e2b4f4e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Seed: amountVestedPerSecond > 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6cb63436ed2c012e3e5e63503379bd6676b0608abf76cc13af246b5cf14d3cd4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"Seed: cannot return funding toke\")\n        mstore(add(headStart, 96), \"ns to msg.sender\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6eb12f0b416b7cc2c84b7fe88d95ab7bd528df6a2f41a0e3588bdf49ba77a203__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Seed: sender has no rights\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_73ba4871f70fabb19406955e457a3974226273a196427c3f2e8175668060ef2d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"SeedFactory: vestingDuration can\")\n        mstore(add(headStart, 96), \"not be less than vestingCliff\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76af53b280841b4a5776a80a2070325d6baf122ccbfa842ef1a7ee360e9c43f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Seed: should be paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7adf7eb97637e21704a264094ca0e4f99defabca846e0ecfbb17a13995cec547__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Seed: seed distribution would be\")\n        mstore(add(headStart, 96), \" exceeded\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8425246c8860d660fb55cdef4d1a144dcc62c1cee77ed8aedb230ea46c2c2b14__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Seed: caller should be admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_86c223e4d678e1a7f2304b5148c636c8382b870e6b2125728763308d866b327b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Seed: should not be closed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8d88b9bb77ee9d216d5b2a6ad0a5e14bcbdc1adf81a450e41caaf1bcc0b37968__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Seed: only allowed during distri\")\n        mstore(add(headStart, 96), \"bution period\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_944fa369c19ec21b5af152d2bed7bb2fec462f03494354b38dfd9e54e02d5eb1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Seed: should transfer seed token\")\n        mstore(add(headStart, 96), \"s to admin\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9b05eb0df5e87a3e2fb5b77f5dc8aeb2610f2470b51da808081f9d80b49571fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Seed: no tokens\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9feb8d1289c2fb4c117422b00150d454c681aa03173d1e5e9c08711ea591c21c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Seed: contract already initializ\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a23a57fe88069c51bc08c12fd26b2eebeb52db529302bad9b0964903d450e4af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Seed: should not be paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b2f72f9ec81f0ebeefd4775bd3fc6040aafa12f06a22fcfdd01144f383dda52a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Seed: distribution haven't start\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c9494f463e237819baf53c3c4a213e5892045b4750e358c413fde0f19cad1cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Seed: sufficient seeds not provi\")\n        mstore(add(headStart, 96), \"ded\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d9e99c433f7148732f6a6e64e7968595f08274c6b3f328e88bc3aba1b137572e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Seed: minimum already met\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e8f8f9ff1e0ebb6b35e95bbf18b180dbd00b13990c4d202a134dcc92c3161589__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Seed: module is not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ea0587534d65c13c5e11e9be3f22728929996356d14971fc52207eed3f266be9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Seed: minimum funding amount not\")\n        mstore(add(headStart, 96), \" met\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f1b8448054190aa0ef3da617dffb2bc089590a0eaeef83ccf0b57e502985cc9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Seed: amount claimable is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f2ca9e11358b1d32b639d33ff3722add87022e1b36fa5c6977a66a7546dde75c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Seed: zero funding amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fe89ce1ef99a5d6714f309a8d01d9e520903bcfd255cf4241ce42b3145d7fd6f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Seed: cannot transfer to benefic\")\n        mstore(add(headStart, 96), \"iary\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b506004361061028a5760003560e01c806383d59e001161015c578063d8039364116100ce578063ea34554011610087578063ea345540146105bb578063eaa53523146105ce578063f3640e74146105e1578063f851a440146105f8578063fb86a4041461060b578063fc582d411461061457600080fd5b8063d803936414610519578063d936547e1461052c578063d96a094a1461054f578063ddca3f4314610577578063e565eb4c1461059d578063e6e36ebb146105b257600080fd5b80639b19251a116101205780639b19251a146104cf578063a035b1fe146104e2578063a8660a78146104eb578063aad3ec96146104f4578063b774682f14610507578063bc0f5f841461051057600080fd5b806383d59e001461049a5780638456cb59146104a35780638a2448aa146104ab578063906a26e0146104b35780639a590427146104bc57600080fd5b80633ccfd60b116102005780635c975abb116101b95780635c975abb146104475780635e9777e81461045957806371f4b8e81461046257806378065f271461046b57806378e979251461047e5780637c6543031461048757600080fd5b80633ccfd60b1461040a5780633dba9e41146104145780633f4ba83a1461042157806343d726d61461042957806347d02f1b14610431578063597e1fb51461043a57600080fd5b80631cfe562e116102525780631cfe562e1461037257806320d8dad01461037b578063311f8483146103a75780633197cbb6146103d957806338af3eed146103e2578063392f37e9146103f557600080fd5b8063031b36771461028f5780630826d2c7146102f9578063117a36d1146103105780631514617e14610334578063158ef93e1461035e575b600080fd5b6102cc61029d3660046124e5565b601660205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b610302600f5481565b6040519081526020016102f0565b600c5461032490600160281b900460ff1681565b60405190151581526020016102f0565b60095461034990610100900463ffffffff1681565b60405163ffffffff90911681526020016102f0565b600c54610324906301000000900460ff1681565b61030260135481565b6103246103893660046124e5565b6001600160a01b031660009081526015602052604090205460ff1690565b6009546103c190600160481b90046001600160a01b031681565b6040516001600160a01b0390911681526020016102f0565b61030260085481565b6000546103c1906001600160a01b031681565b6103fd610627565b6040516102f0919061273f565b6104126106b5565b005b6009546103249060ff1681565b6104126107db565b610412610890565b61030260105481565b600c546103249060ff1681565b600c5461032490610100900460ff1681565b610302600e5481565b61030260125481565b600a546103c1906001600160a01b031681565b61030260075481565b600c546103249062010000900460ff1681565b61030260145481565b610412610ac0565b610302610b46565b61030260025481565b6104126104ca3660046124e5565b610e8b565b6104126104dd3660046124e5565b610f48565b61030260065481565b610302600d5481565b6103026105023660046125ee565b611008565b61030260115481565b61030260045481565b610412610527366004612506565b611495565b61032461053a3660046124e5565b60156020526000908152604090205460ff1681565b61056261055d3660046126f3565b61196c565b604080519283526020830191909152016102f0565b600a5461058b90600160a01b900460ff1681565b60405160ff90911681526020016102f0565b600c5461032490640100000000900460ff1681565b61030260055481565b6103026105c93660046124e5565b611f3b565b6104126105dc366004612617565b61204a565b60095461034990600160281b900463ffffffff1681565b6001546103c1906001600160a01b031681565b61030260035481565b610412610622366004612666565b61215c565b600b8054610634906129cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610660906129cf565b80156106ad5780601f10610682576101008083540402835291602001916106ad565b820191906000526020600020905b81548152906001019060200180831161069057829003601f168201915b505050505081565b6001546001600160a01b031633146106e85760405162461bcd60e51b81526004016106df90612772565b60405180910390fd5b600c54610100900460ff16156107105760405162461bcd60e51b81526004016106df9061282a565b600c54640100000000900460ff1661073a5760405162461bcd60e51b81526004016106df90612898565b600060145460135461074c9190612988565b601354601455600a5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561079f57600080fd5b505af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d7919061264a565b5050565b6001546001600160a01b031633146108055760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615156001141561082d5760405162461bcd60e51b81526004016106df906127a9565b600c5460ff6101009091041615156001146108835760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b60448201526064016106df565b600c805461ff0019169055565b6001546001600160a01b031633146108ba5760405162461bcd60e51b81526004016106df90612772565b600c5460ff16156108dd5760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff16156109055760405162461bcd60e51b81526004016106df9061282a565b600c54640100000000900460ff16156109e6576000601154600f5461092a9190612931565b60095460015460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350600160481b909104169063a9059cbb90604401602060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc919061264a565b6109d85760405162461bcd60e51b81526004016106df906127e0565b50600c805461ff0019169055565b6009546001546005546004546001600160a01b03600160481b90940484169363a9059cbb931691610a1691612931565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610a5c57600080fd5b505af1158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a94919061264a565b610ab05760405162461bcd60e51b81526004016106df906127e0565b600c805461ffff19166001179055565b6001546001600160a01b03163314610aea5760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615610b0d5760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff1615610b355760405162461bcd60e51b81526004016106df9061282a565b600c805461ff001916610100179055565b600c54600090610100900460ff1615610b715760405162461bcd60e51b81526004016106df9061282a565b426007541115610bce5760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b60648201526084016106df565b600c54640100000000900460ff1615610c295760405162461bcd60e51b815260206004820152601960248201527f536565643a206d696e696d756d20616c7265616479206d65740000000000000060448201526064016106df565b33600090815260166020526040902060020154610c885760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e740000000000000060448201526064016106df565b336000908152601660209081526040808320815160a08101835281548082526001830154948201949094526002820154928101839052600382015460608201526004909101546080820152600f805491949293929091610ce9908490612931565b9091555050606082015160118054600090610d05908490612931565b90915550506000808352606083018181526040808501838152338452601660209081529184208651815591860151600183015551600282015590516003820155608084015160049091015560138054839290610d62908490612988565b9091555050600a5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610db357600080fd5b505af1158015610dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610deb919061264a565b610e505760405162461bcd60e51b815260206004820152603060248201527f536565643a2063616e6e6f742072657475726e2066756e64696e6720746f6b6560448201526f3739903a379036b9b39739b2b73232b960811b60648201526084016106df565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a291505090565b6001546001600160a01b03163314610eb55760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615610ed85760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff1615610f005760405162461bcd60e51b81526004016106df9061282a565b60095460ff161515600114610f275760405162461bcd60e51b81526004016106df90612861565b6001600160a01b03166000908152601560205260409020805460ff19169055565b6001546001600160a01b03163314610f725760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615610f955760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff1615610fbd5760405162461bcd60e51b81526004016106df9061282a565b60095460ff161515600114610fe45760405162461bcd60e51b81526004016106df90612861565b6001600160a01b03166000908152601560205260409020805460ff19166001179055565b600c54600090640100000000900460ff166110355760405162461bcd60e51b81526004016106df90612898565b4260085411158061104f5750600c54600160281b900460ff165b6110af5760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b60648201526084016106df565b60006110ba84611f3b565b90506000811161110c5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c652069732030000000000060448201526064016106df565b828110156111735760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b60648201526084016106df565b600a5460009060649061119090600160a01b900460ff1686612969565b61119a9190612949565b6001600160a01b038616600090815260166020908152604091829020825160a0810184528154815260018201549281018381526002830154948201949094526003820154606082015260049091015460808201529293508691906111ff908390612931565b905250608081018051839190611216908390612931565b9052506001600160a01b038616600090815260166020908152604080832084518155918401516001830155830151600282015560608301516003820155608083015160049091015560108054879290611270908490612931565b9250508190555081601260008282546112899190612931565b909155505060095460005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101859052600160481b909204169063a9059cbb90604401602060405180830381600087803b1580156112e557600080fd5b505af11580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131d919061264a565b6113755760405162461bcd60e51b8152602060048201526024808201527f536565643a2063616e6e6f74207472616e7366657220746f2062656e656669636044820152636961727960e01b60648201526084016106df565b60095460405163a9059cbb60e01b81526001600160a01b03888116600483015260248201889052600160481b9092049091169063a9059cbb90604401602060405180830381600087803b1580156113cb57600080fd5b505af11580156113df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611403919061264a565b6114415760405162461bcd60e51b815260206004820152600f60248201526e536565643a206e6f20746f6b656e7360881b60448201526064016106df565b60005460408051878152602081018590526001600160a01b03928316928916917f9bd10be98695714f5cb43cefb59ba6417808b354710acafafe05e81b26492231910160405180910390a350949350505050565b600c546301000000900460ff16156114fa5760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b60648201526084016106df565b600c805463ff0000001916630100000017905588518990600190811061153057634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03168960008151811061156257634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614156115d75760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b60648201526084016106df565b876000815181106115f857634e487b7160e01b600052603260045260246000fd5b60200260200101518860018151811061162157634e487b7160e01b600052603260045260246000fd5b602002602001015110156116905760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b60648201526084016106df565b8263ffffffff168463ffffffff1610156117125760405162461bcd60e51b815260206004820152603d60248201527f53656564466163746f72793a2076657374696e674475726174696f6e2063616e60448201527f6e6f74206265206c657373207468616e2076657374696e67436c69666600000060648201526084016106df565b8585116117875760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d65000000000060648201526084016106df565b600080546001600160a01b03808e166001600160a01b031992831617835560018054918e169190921617905588518991906117d257634e487b7160e01b600052603260045260246000fd5b60200260200101516002819055508760018151811061180157634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600355600687905560078690556008859055600d8590556009805468ffffffffffffffff00191661010063ffffffff8781169190910268ffffffff0000000000191691909117600160281b918616919091021760ff19168315151790558851899060009061188a57634e487b7160e01b600052603260045260246000fd5b60200260200101516009806101000a8154816001600160a01b0302191690836001600160a01b03160217905550886001815181106118d857634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600a80546001600160a01b039092166001600160a81b031990921691909117600160a01b60ff841602179055600354879061192790670de0b6b3a764000090612969565b6119319190612949565b60048190556064906119479060ff841690612969565b6119519190612949565b6005819055600454600f556011555050505050505050505050565b600c54600090819060ff16156119945760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff16156119bc5760405162461bcd60e51b81526004016106df9061282a565b600c54600160281b900460ff1615611a165760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e67207265616368656400000060448201526064016106df565b60095460ff161580611a3757503360009081526015602052604090205460ff165b611a835760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f2072696768747300000000000060448201526064016106df565b4260085410158015611a9757504260075411155b611af95760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b60648201526084016106df565b600c5462010000900460ff16611c0657600554600454611b199190612931565b6009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b0316906370a082319060240160206040518083038186803b158015611b6257600080fd5b505afa158015611b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9a919061270b565b1015611bf45760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b60648201526084016106df565b600c805462ff00001916620100001790555b600654600090611c1e670de0b6b3a764000086612969565b611c289190612949565b601354600a5491925090600090606490611c4c90600160a01b900460ff1685612969565b611c569190612949565b600354909150611c668784612931565b1115611cc75760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b60648201526084016106df565b82600f541015611d2b5760405162461bcd60e51b815260206004820152602960248201527f536565643a207365656420646973747269627574696f6e20776f756c6420626560448201526808195e18d95959195960ba1b60648201526084016106df565b611d358683612931565b60138190555082600f6000828254611d4d9190612988565b925050819055508060116000828254611d669190612988565b9091555050600a546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611dbd57600080fd5b505af1158015611dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df5919061264a565b611e335760405162461bcd60e51b815260206004820152600f60248201526e536565643a206e6f20746f6b656e7360881b60448201526064016106df565b60025460135410611e5457600c805464ff0000000019166401000000001790555b60035460135410611e7f57600c805465ff00000000001916600160281b179055611e7b4290565b600d555b33600081815260166020526040902054611efa9190611e9f908690612931565b33600090815260166020526040902060020154611ebd908a90612931565b3360009081526016602052604090206001810154600390910154611ee2908790612931565b33600090815260166020526040902060040154612256565b60405183815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a291935090915050915091565b6001600160a01b0381166000908152601660209081526040808320815160a0810183528154815260018201549381019390935260028101549183019190915260038101546060830152600401546080820152600d54421015611fa05750600092915050565b6000600d54611fac4290565b611fb69190612988565b600954909150600160281b900463ffffffff16811015611fda575060009392505050565b600954610100900463ffffffff1681106120075760208201518251611fff9190612988565b949350505050565b6009548251600091610100900463ffffffff16906120259084612969565b61202f9190612949565b90508260200151816120419190612988565b95945050505050565b6001546001600160a01b031633146120745760405162461bcd60e51b81526004016106df90612772565b600c5460ff16156120975760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff16156120bf5760405162461bcd60e51b81526004016106df9061282a565b60095460ff1615156001146120e65760405162461bcd60e51b81526004016106df90612861565b60005b81518110156107d75760016015600084848151811061211857634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061215481612a0a565b9150506120e9565b600c546301000000900460ff161515600114158061218457506001546001600160a01b031633145b6122015760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a4016106df565b805161221490600b90602084019061232d565b50806040516122239190612723565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b600954610100900463ffffffff168510156122b35760405162461bcd60e51b815260206004820152601f60248201527f536565643a20616d6f756e745665737465645065725365636f6e64203e20300060448201526064016106df565b6040805160a081018252868152602080820186815282840188815260608401878152608085018781526001600160a01b038d166000908152601690955295842094518555915160018501555160028401555160038301559151600490910155600e80549161232083612a0a565b9190505550505050505050565b828054612339906129cf565b90600052602060002090601f01602090048101928261235b57600085556123a1565b82601f1061237457805160ff19168380011785556123a1565b828001600101855582156123a1579182015b828111156123a1578251825591602001919060010190612386565b506123ad9291506123b1565b5090565b5b808211156123ad57600081556001016123b2565b80356001600160a01b03811681146123dd57600080fd5b919050565b600082601f8301126123f2578081fd5b813560206124076124028361290d565b6128dc565b80838252828201915082860187848660051b8901011115612426578586fd5b855b8581101561244b57612439826123c6565b84529284019290840190600101612428565b5090979650505050505050565b600082601f830112612468578081fd5b813560206124786124028361290d565b80838252828201915082860187848660051b8901011115612497578586fd5b855b8581101561244b57813584529284019290840190600101612499565b80356123dd81612a51565b803563ffffffff811681146123dd57600080fd5b803560ff811681146123dd57600080fd5b6000602082840312156124f6578081fd5b6124ff826123c6565b9392505050565b60008060008060008060008060008060006101608c8e031215612527578687fd5b6125308c6123c6565b9a5061253e60208d016123c6565b995067ffffffffffffffff8060408e01351115612559578788fd5b6125698e60408f01358f016123e2565b99508060608e0135111561257b578788fd5b5061258c8d60608e01358e01612458565b975060808c0135965060a08c0135955060c08c013594506125af60e08d016124c0565b93506125be6101008d016124c0565b92506125cd6101208d016124b5565b91506125dc6101408d016124d4565b90509295989b509295989b9093969950565b60008060408385031215612600578182fd5b612609836123c6565b946020939093013593505050565b600060208284031215612628578081fd5b813567ffffffffffffffff81111561263e578182fd5b611fff848285016123e2565b60006020828403121561265b578081fd5b81516124ff81612a51565b60006020808385031215612678578182fd5b823567ffffffffffffffff8082111561268f578384fd5b818501915085601f8301126126a2578384fd5b8135818111156126b4576126b4612a3b565b6126c6601f8201601f191685016128dc565b915080825286848285010111156126db578485fd5b80848401858401378101909201929092529392505050565b600060208284031215612704578081fd5b5035919050565b60006020828403121561271c578081fd5b5051919050565b6000825161273581846020870161299f565b9190910192915050565b602081526000825180602084015261275e81604085016020870161299f565b601f01601f19169190910160400192915050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6020808252602a908201527f536565643a2073686f756c64207472616e73666572207365656420746f6b656e60408201526939903a379030b236b4b760b11b606082015260800190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604082015260600190565b6020808252601f908201527f536565643a206d6f64756c65206973206e6f742077686974656c697374656400604082015260600190565b60208082526024908201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604082015263081b595d60e21b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561290557612905612a3b565b604052919050565b600067ffffffffffffffff82111561292757612927612a3b565b5060051b60200190565b6000821982111561294457612944612a25565b500190565b60008261296457634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561298357612983612a25565b500290565b60008282101561299a5761299a612a25565b500390565b60005b838110156129ba5781810151838201526020016129a2565b838111156129c9576000848401525b50505050565b600181811c908216806129e357607f821691505b60208210811415612a0457634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612a1e57612a1e612a25565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114612a5f57600080fd5b5056fea26469706673582212201c8a1b8103d068fdee8abb5a994a62c1e31dddd9f82854db7af6a1cd4415a7ae64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x83D59E00 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xD8039364 GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xEA345540 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xEA345540 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xEAA53523 EQ PUSH2 0x5CE JUMPI DUP1 PUSH4 0xF3640E74 EQ PUSH2 0x5E1 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x5F8 JUMPI DUP1 PUSH4 0xFB86A404 EQ PUSH2 0x60B JUMPI DUP1 PUSH4 0xFC582D41 EQ PUSH2 0x614 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD8039364 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0xD936547E EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x54F JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x577 JUMPI DUP1 PUSH4 0xE565EB4C EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xE6E36EBB EQ PUSH2 0x5B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9B19251A GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x4E2 JUMPI DUP1 PUSH4 0xA8660A78 EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xAAD3EC96 EQ PUSH2 0x4F4 JUMPI DUP1 PUSH4 0xB774682F EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0xBC0F5F84 EQ PUSH2 0x510 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x83D59E00 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0x8A2448AA EQ PUSH2 0x4AB JUMPI DUP1 PUSH4 0x906A26E0 EQ PUSH2 0x4B3 JUMPI DUP1 PUSH4 0x9A590427 EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B GT PUSH2 0x200 JUMPI DUP1 PUSH4 0x5C975ABB GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x5E9777E8 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0x71F4B8E8 EQ PUSH2 0x462 JUMPI DUP1 PUSH4 0x78065F27 EQ PUSH2 0x46B JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0x7C654303 EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x3DBA9E41 EQ PUSH2 0x414 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x421 JUMPI DUP1 PUSH4 0x43D726D6 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x47D02F1B EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0x597E1FB5 EQ PUSH2 0x43A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1CFE562E GT PUSH2 0x252 JUMPI DUP1 PUSH4 0x1CFE562E EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0x20D8DAD0 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x311F8483 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x3197CBB6 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0x392F37E9 EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x31B3677 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x826D2C7 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x117A36D1 EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x35E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CC PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x302 PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x349 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x13 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x324 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x3C1 SWAP1 PUSH1 0x1 PUSH1 0x48 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x3C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x3FD PUSH2 0x627 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH2 0x412 PUSH2 0x6B5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x324 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x412 PUSH2 0x890 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x12 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x3C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x14 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0xAC0 JUMP JUMPDEST PUSH2 0x302 PUSH2 0xB46 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0xE8B JUMP JUMPDEST PUSH2 0x412 PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0xF48 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH2 0x502 CALLDATASIZE PUSH1 0x4 PUSH2 0x25EE JUMP JUMPDEST PUSH2 0x1008 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x2506 JUMP JUMPDEST PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x324 PUSH2 0x53A CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x562 PUSH2 0x55D CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x58B SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2F0 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x324 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH2 0x5C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x24E5 JUMP JUMPDEST PUSH2 0x1F3B JUMP JUMPDEST PUSH2 0x412 PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x2617 JUMP JUMPDEST PUSH2 0x204A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x349 SWAP1 PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x3C1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x302 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x412 PUSH2 0x622 CALLDATASIZE PUSH1 0x4 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x215C JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH2 0x634 SWAP1 PUSH2 0x29CF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x660 SWAP1 PUSH2 0x29CF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x682 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x690 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2898 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SLOAD PUSH1 0x13 SLOAD PUSH2 0x74C SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0x14 SSTORE PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x79F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7B3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7D7 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x14D959590E881CDA1BDD5B19081899481C185D5CD959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 PUSH1 0x11 SLOAD PUSH1 0xF SLOAD PUSH2 0x92A SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP2 DIV AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x984 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x998 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9BC SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x9D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27E0 JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 SLOAD PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP5 DIV DUP5 AND SWAP4 PUSH4 0xA9059CBB SWAP4 AND SWAP2 PUSH2 0xA16 SWAP2 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA70 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST TIMESTAMP PUSH1 0x7 SLOAD GT ISZERO PUSH2 0xBCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20646973747269627574696F6E20686176656E2774207374617274 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A206D696E696D756D20616C7265616479206D657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A207A65726F2066756E64696E6720616D6F756E7400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP1 DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xF DUP1 SLOAD SWAP2 SWAP5 SWAP3 SWAP4 SWAP3 SWAP1 SWAP2 PUSH2 0xCE9 SWAP1 DUP5 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x11 DUP1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xD05 SWAP1 DUP5 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x60 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 ADD DUP4 DUP2 MSTORE CALLER DUP5 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE SWAP2 DUP5 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP2 DUP7 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x13 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xD62 SWAP1 DUP5 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDEB SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0xE50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A2063616E6E6F742072657475726E2066756E64696E6720746F6B65 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x3739903A379036B9B39739B2B73232B9 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x1A689B1A62E3BB77F9C98D8759C04F341A67DEB5CC63CF53BE8324B691064950 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xED8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xF27 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xF95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xFBD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0xFE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2898 JUMP JUMPDEST TIMESTAMP PUSH1 0x8 SLOAD GT ISZERO DUP1 PUSH2 0x104F JUMPI POP PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x10AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A2074686520646973747269627574696F6E20686173206E6F742079 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x195D08199A5B9A5CDA1959 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BA DUP5 PUSH2 0x1F3B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x110C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20616D6F756E7420636C61696D61626C6520697320300000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1173 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20726571756573742069732067726561746572207468616E20636C PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x185A5B58589B1948185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1190 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP7 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x119A SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 DUP2 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP3 SWAP4 POP DUP7 SWAP2 SWAP1 PUSH2 0x11FF SWAP1 DUP4 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x80 DUP2 ADD DUP1 MLOAD DUP4 SWAP2 SWAP1 PUSH2 0x1216 SWAP1 DUP4 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x10 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1270 SWAP1 DUP5 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x12 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1289 SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x9 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP3 DIV AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x131D SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x536565643A2063616E6E6F74207472616E7366657220746F2062656E65666963 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x69617279 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13DF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1403 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x1441 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x536565643A206E6F20746F6B656E73 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP10 AND SWAP2 PUSH32 0x9BD10BE98695714F5CB43CEFB59BA6417808B354710ACAFAFE05E81B26492231 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20636F6E747261637420616C726561647920696E697469616C697A PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR SWAP1 SSTORE DUP9 MLOAD DUP10 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0x1530 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1562 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x15D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A2073656564546F6B656E2063616E6E6F74206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x10333AB73234B733AA37B5B2B7 PUSH1 0x99 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x15F8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1621 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD LT ISZERO PUSH2 0x1690 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A20686172644361702063616E6E6F74206265206C PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x657373207468616E20736F667443617 PUSH1 0x84 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x1712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A2076657374696E674475726174696F6E2063616E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6F74206265206C657373207468616E2076657374696E67436C696666000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST DUP6 DUP6 GT PUSH2 0x1787 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A20656E6454696D652063616E6E6F74206265206C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657373207468616E20657175616C20746F20737461727454696D650000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP15 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR DUP4 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP2 DUP15 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE DUP9 MLOAD DUP10 SWAP2 SWAP1 PUSH2 0x17D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1801 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x3 SSTORE PUSH1 0x6 DUP8 SWAP1 SSTORE PUSH1 0x7 DUP7 SWAP1 SSTORE PUSH1 0x8 DUP6 SWAP1 SSTORE PUSH1 0xD DUP6 SWAP1 SSTORE PUSH1 0x9 DUP1 SLOAD PUSH9 0xFFFFFFFFFFFFFFFF00 NOT AND PUSH2 0x100 PUSH4 0xFFFFFFFF DUP8 DUP2 AND SWAP2 SWAP1 SWAP2 MUL PUSH9 0xFFFFFFFF0000000000 NOT AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0x28 SHL SWAP2 DUP7 AND SWAP2 SWAP1 SWAP2 MUL OR PUSH1 0xFF NOT AND DUP4 ISZERO ISZERO OR SWAP1 SSTORE DUP9 MLOAD DUP10 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x188A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x9 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP9 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x18D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0xFF DUP5 AND MUL OR SWAP1 SSTORE PUSH1 0x3 SLOAD DUP8 SWAP1 PUSH2 0x1927 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x1931 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x64 SWAP1 PUSH2 0x1947 SWAP1 PUSH1 0xFF DUP5 AND SWAP1 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x1951 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x4 SLOAD PUSH1 0xF SSTORE PUSH1 0x11 SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1994 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x19BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A206D6178696D756D2066756E64696E672072656163686564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO DUP1 PUSH2 0x1A37 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST PUSH2 0x1A83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A2073656E64657220686173206E6F20726967687473000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST TIMESTAMP PUSH1 0x8 SLOAD LT ISZERO DUP1 ISZERO PUSH2 0x1A97 JUMPI POP TIMESTAMP PUSH1 0x7 SLOAD GT ISZERO JUMPDEST PUSH2 0x1AF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A206F6E6C7920616C6C6F77656420647572696E6720646973747269 PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x189D5D1A5BDB881C195C9A5BD9 PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC SLOAD PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1C06 JUMPI PUSH1 0x5 SLOAD PUSH1 0x4 SLOAD PUSH2 0x1B19 SWAP2 SWAP1 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x48 SHL SWAP1 SWAP2 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B9A SWAP2 SWAP1 PUSH2 0x270B JUMP JUMPDEST LT ISZERO PUSH2 0x1BF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A2073756666696369656E74207365656473206E6F742070726F7669 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x191959 PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1C1E PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x1C28 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xA SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1C4C SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP6 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x1C56 SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x1C66 DUP8 DUP5 PUSH2 0x2931 JUMP JUMPDEST GT ISZERO PUSH2 0x1CC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20616D6F756E74206578636565647320636F6E7472616374207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x6C65206861726443617 PUSH1 0xB4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST DUP3 PUSH1 0xF SLOAD LT ISZERO PUSH2 0x1D2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A207365656420646973747269627574696F6E20776F756C64206265 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8195E18D959591959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x1D35 DUP7 DUP4 PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x13 DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xF PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D4D SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x11 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D66 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DD1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DF5 SWAP2 SWAP1 PUSH2 0x264A JUMP JUMPDEST PUSH2 0x1E33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x536565643A206E6F20746F6B656E73 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x13 SLOAD LT PUSH2 0x1E54 JUMPI PUSH1 0xC DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH5 0x100000000 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x13 SLOAD LT PUSH2 0x1E7F JUMPI PUSH1 0xC DUP1 SLOAD PUSH6 0xFF0000000000 NOT AND PUSH1 0x1 PUSH1 0x28 SHL OR SWAP1 SSTORE PUSH2 0x1E7B TIMESTAMP SWAP1 JUMP JUMPDEST PUSH1 0xD SSTORE JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1EFA SWAP2 SWAP1 PUSH2 0x1E9F SWAP1 DUP7 SWAP1 PUSH2 0x2931 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1EBD SWAP1 DUP11 SWAP1 PUSH2 0x2931 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH2 0x1EE2 SWAP1 DUP8 SWAP1 PUSH2 0x2931 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x2256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0xCF5EF2B227E797B567F0DF4C49CC8B6207CFB60054EB899E5608DE08E5DCB1EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP2 SWAP4 POP SWAP1 SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1FA0 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x1FAC TIMESTAMP SWAP1 JUMP JUMPDEST PUSH2 0x1FB6 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x9 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x28 SHL SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x1FDA JUMPI POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP2 LT PUSH2 0x2007 JUMPI PUSH1 0x20 DUP3 ADD MLOAD DUP3 MLOAD PUSH2 0x1FFF SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 MLOAD PUSH1 0x0 SWAP2 PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH2 0x2025 SWAP1 DUP5 PUSH2 0x2969 JUMP JUMPDEST PUSH2 0x202F SWAP2 SWAP1 PUSH2 0x2949 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 ADD MLOAD DUP2 PUSH2 0x2041 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2074 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2772 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2097 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x20BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x20E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP1 PUSH2 0x2861 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x7D7 JUMPI PUSH1 0x1 PUSH1 0x15 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2118 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x2154 DUP2 PUSH2 0x2A0A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 EQ ISZERO DUP1 PUSH2 0x2184 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x2201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20636F6E74726163742073686F756C64206E6F7420626520696E69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7469616C697A6564206F722063616C6C65722073686F756C642062652061646D PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x34B7 PUSH1 0xF1 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x6DF JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2214 SWAP1 PUSH1 0xB SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x232D JUMP JUMPDEST POP DUP1 PUSH1 0x40 MLOAD PUSH2 0x2223 SWAP2 SWAP1 PUSH2 0x2723 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 SWAP1 PUSH32 0x9F579B21815D3F81581D32E97736CCBA1CC89D1918E48DA28E6E206ACD96864 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x100 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP6 LT ISZERO PUSH2 0x22B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536565643A20616D6F756E745665737465645065725365636F6E64203E203000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP7 DUP2 MSTORE DUP3 DUP5 ADD DUP9 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP8 DUP2 MSTORE PUSH1 0x80 DUP6 ADD DUP8 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x16 SWAP1 SWAP6 MSTORE SWAP6 DUP5 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP2 MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD PUSH1 0x3 DUP4 ADD SSTORE SWAP2 MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0xE DUP1 SLOAD SWAP2 PUSH2 0x2320 DUP4 PUSH2 0x2A0A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2339 SWAP1 PUSH2 0x29CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x235B JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x23A1 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2374 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x23A1 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x23A1 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x23A1 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2386 JUMP JUMPDEST POP PUSH2 0x23AD SWAP3 SWAP2 POP PUSH2 0x23B1 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x23AD JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x23B2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x23DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23F2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2407 PUSH2 0x2402 DUP4 PUSH2 0x290D JUMP JUMPDEST PUSH2 0x28DC JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x2426 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x244B JUMPI PUSH2 0x2439 DUP3 PUSH2 0x23C6 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2428 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2468 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2478 PUSH2 0x2402 DUP4 PUSH2 0x290D JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x2497 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x244B JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2499 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x23DD DUP2 PUSH2 0x2A51 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x23DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x23DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24F6 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x24FF DUP3 PUSH2 0x23C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x2527 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x2530 DUP13 PUSH2 0x23C6 JUMP JUMPDEST SWAP11 POP PUSH2 0x253E PUSH1 0x20 DUP14 ADD PUSH2 0x23C6 JUMP JUMPDEST SWAP10 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x40 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x2559 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x2569 DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x23E2 JUMP JUMPDEST SWAP10 POP DUP1 PUSH1 0x60 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x257B JUMPI DUP8 DUP9 REVERT JUMPDEST POP PUSH2 0x258C DUP14 PUSH1 0x60 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x2458 JUMP JUMPDEST SWAP8 POP PUSH1 0x80 DUP13 ADD CALLDATALOAD SWAP7 POP PUSH1 0xA0 DUP13 ADD CALLDATALOAD SWAP6 POP PUSH1 0xC0 DUP13 ADD CALLDATALOAD SWAP5 POP PUSH2 0x25AF PUSH1 0xE0 DUP14 ADD PUSH2 0x24C0 JUMP JUMPDEST SWAP4 POP PUSH2 0x25BE PUSH2 0x100 DUP14 ADD PUSH2 0x24C0 JUMP JUMPDEST SWAP3 POP PUSH2 0x25CD PUSH2 0x120 DUP14 ADD PUSH2 0x24B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x25DC PUSH2 0x140 DUP14 ADD PUSH2 0x24D4 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2600 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2609 DUP4 PUSH2 0x23C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2628 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x263E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1FFF DUP5 DUP3 DUP6 ADD PUSH2 0x23E2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x265B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x24FF DUP2 PUSH2 0x2A51 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2678 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x268F JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26A2 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x26B4 JUMPI PUSH2 0x26B4 PUSH2 0x2A3B JUMP JUMPDEST PUSH2 0x26C6 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP6 ADD PUSH2 0x28DC JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE DUP7 DUP5 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x26DB JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 DUP5 DUP5 ADD DUP6 DUP5 ADD CALLDATACOPY DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2704 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x271C JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2735 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x299F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x275E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x299F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A2063616C6C65722073686F756C642062652061646D696E00000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A2073686F756C64206E6F7420626520636C6F736564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A2073686F756C64207472616E73666572207365656420746F6B656E PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39903A379030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A2073686F756C64206E6F7420626520706175736564000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A206D6F64756C65206973206E6F742077686974656C697374656400 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x536565643A206D696E696D756D2066756E64696E6720616D6F756E74206E6F74 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x81B595D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2905 JUMPI PUSH2 0x2905 PUSH2 0x2A3B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2927 JUMPI PUSH2 0x2927 PUSH2 0x2A3B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2944 JUMPI PUSH2 0x2944 PUSH2 0x2A25 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2964 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2983 JUMPI PUSH2 0x2983 PUSH2 0x2A25 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x299A JUMPI PUSH2 0x299A PUSH2 0x2A25 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x29BA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x29A2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x29C9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x29E3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2A04 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2A1E JUMPI PUSH2 0x2A1E PUSH2 0x2A25 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR DUP11 SHL DUP2 SUB 0xD0 PUSH9 0xFDEE8ABB5A994A62C1 0xE3 SAR 0xDD 0xD9 0xF8 0x28 SLOAD 0xDB PUSH27 0xF6A1CD4415A7AE64736F6C63430008040033000000000000000000 ",
              "sourceMap": "1504:18604:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4046:51;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19602:25:6;;;19658:2;19643:18;;19636:34;;;;19686:18;;;19679:34;;;;19744:2;19729:18;;19722:34;19787:3;19772:19;;19765:35;19589:3;19574:19;4046:51:0;;;;;;;;3358:28;;;;;;;;;19054:25:6;;;19042:2;19027:18;3358:28:0;19009:76:6;2972:29:0;;;;;-1:-1:-1;;;2972:29:0;;;;;;;;;6939:14:6;;6932:22;6914:41;;6902:2;6887:18;2972:29:0;6869:92:6;2143:30:0;;;;;;;;;;;;;;;19985:10:6;19973:23;;;19955:42;;19943:2;19928:18;2143:30:0;19910:93:6;2757:26:0;;;;;;;;;;;;3719:31;;;;;;18775:113;;;;;;:::i;:::-;-1:-1:-1;;;;;18861:19:0;18837:4;18861:19;;;:11;:19;;;;;;;;;18775:113;2214:24;;;;;-1:-1:-1;;;2214:24:0;;-1:-1:-1;;;;;2214:24:0;;;;;;-1:-1:-1;;;;;6071:32:6;;;6053:51;;6041:2;6026:18;2214:24:0;6008:102:6;1892:22:0;;;;;;1551:26;;;;;-1:-1:-1;;;;;1551:26:0;;;2306:23;;;:::i;:::-;;;;;;;:::i;16934:251::-;;;:::i;:::-;;2105:31;;;;;;;;;14701:195;;;:::i;14975:715::-;;;:::i;3455:26::-;;;;;;2491:21;;;;;;;;;2565;;;;;;;;;;;;3274:31;;;;;;3635:25;;;;;;2245:27;;;;;-1:-1:-1;;;;;2245:27:0;;;1861:24;;;;;;2639:23;;;;;;;;;;;;3823:31;;;;;;14545:75;;;:::i;13596:846::-;;;:::i;1611:22::-;;;;;;16654:188;;;;;;:::i;:::-;;:::i;15847:187::-;;;;;;:::i;:::-;;:::i;1834:20::-;;;;;;3077:31;;;;;;12415:1102;;;;;;:::i;:::-;;:::i;3544:27::-;;;;;;1669:33;;;;;;7966:1706;;;;;;:::i;:::-;;:::i;3930:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9826:2327;;;;;;:::i;:::-;;:::i;:::-;;;;19264:25:6;;;19320:2;19305:18;;19298:34;;;;19237:18;9826:2327:0;19219:119:6;2279:18:0;;;;;-1:-1:-1;;;2279:18:0;;;;;;;;;20180:4:6;20168:17;;;20150:36;;20138:2;20123:18;2279::0;20105:87:6;2867:29:0;;;;;;;;;;;;1756:32;;;;;;17834:781;;;;;;:::i;:::-;;:::i;16215:275::-;;;;;;:::i;:::-;;:::i;2180:27::-;;;;;-1:-1:-1;;;2180:27:0;;;;;;1584:20;;;;;-1:-1:-1;;;;;1584:20:0;;;1640:22;;;;;;17338:305;;;;;;:::i;:::-;;:::i;2306:23::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;16934:251::-;5182:5;;-1:-1:-1;;;;;5182:5:0;5168:10;:19;5160:60;;;;-1:-1:-1;;;5160:60:0;;;;;;;:::i;:::-;;;;;;;;;6315:6:::1;::::0;::::1;::::0;::::1;;;6314:7;6306:46;;;;-1:-1:-1::0;;;6306:46:0::1;;;;;;;:::i;:::-;6371:14;::::0;;;::::1;;;6363:63;;;;-1:-1:-1::0;;;6363:63:0::1;;;;;;;:::i;:::-;17000:26:::2;17048:16;;17029;;:35;;;;:::i;:::-;17094:16;::::0;17075::::2;:35:::0;17121:12:::2;::::0;:56:::2;::::0;-1:-1:-1;;;17121:56:0;;17143:10:::2;17121:56;::::0;::::2;6669:51:6::0;6736:18;;;6729:34;;;17000:64:0;;-1:-1:-1;;;;;;17121:12:0::2;::::0;:21:::2;::::0;6642:18:6;;17121:56:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6437:1;16934:251::o:0;14701:195::-;5182:5;;-1:-1:-1;;;;;5182:5:0;5168:10;:19;5160:60;;;;-1:-1:-1;;;5160:60:0;;;;;;;:::i;:::-;14756:6:::1;::::0;::::1;;:14;;:6:::0;:14:::1;;14748:53;;;;-1:-1:-1::0;;;14748:53:0::1;;;;;;;:::i;:::-;14820:6;::::0;::::1;;::::0;;::::1;;:14;;:6;:14;14812:49;;;::::0;-1:-1:-1;;;14812:49:0;;12669:2:6;14812:49:0::1;::::0;::::1;12651:21:6::0;12708:2;12688:18;;;12681:30;-1:-1:-1;;;12727:18:6;;;12720:52;12789:18;;14812:49:0::1;12641:172:6::0;14812:49:0::1;14874:6;:14:::0;;-1:-1:-1;;14874:14:0::1;::::0;;14701:195::o;14975:715::-;5182:5;;-1:-1:-1;;;;;5182:5:0;5168:10;:19;5160:60;;;;-1:-1:-1;;;5160:60:0;;;;;;;:::i;:::-;5288:6:::1;::::0;::::1;;5287:7;5279:46;;;;-1:-1:-1::0;;;5279:46:0::1;;;;;;;:::i;:::-;5345:6;::::0;::::1;::::0;::::1;;;5344:7;5336:46;;;;-1:-1:-1::0;;;5336:46:0::1;;;;;;;:::i;:::-;15080:14:::2;::::0;;;::::2;;;15076:607;;;15174:22;15213:12;;15199:13;;:26;;;;:::i;:::-;15266:9;::::0;15285:5:::2;::::0;15266:41:::2;::::0;-1:-1:-1;;;15266:41:0;;-1:-1:-1;;;;;15285:5:0;;::::2;15266:41;::::0;::::2;6669:51:6::0;6736:18;;;6729:34;;;15174:51:0;;-1:-1:-1;;;;15266:9:0;;::::2;;::::0;:18:::2;::::0;6642::6;;15266:41:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15240:145;;;;-1:-1:-1::0;;;15240:145:0::2;;;;;;;:::i;:::-;-1:-1:-1::0;15400:6:0::2;:14:::0;;-1:-1:-1;;15400:14:0::2;::::0;;14975:715::o;15076:607::-:2;15473:9;::::0;15492:5:::2;::::0;15518:17:::2;::::0;15499:18:::2;::::0;-1:-1:-1;;;;;;;;15473:9:0;;::::2;::::0;::::2;::::0;:18:::2;::::0;15492:5:::2;::::0;15499:36:::2;::::0;::::2;:::i;:::-;15473:63;::::0;-1:-1:-1;;;;;;15473:63:0::2;::::0;;;;;;-1:-1:-1;;;;;6687:32:6;;;15473:63:0::2;::::0;::::2;6669:51:6::0;6736:18;;;6729:34;6642:18;;15473:63:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15447:167;;;;-1:-1:-1::0;;;15447:167:0::2;;;;;;;:::i;:::-;15629:6;:13:::0;;-1:-1:-1;;15657:14:0;15638:4:::2;15657:14:::0;;;14975:715::o;14545:75::-;5182:5;;-1:-1:-1;;;;;5182:5:0;5168:10;:19;5160:60;;;;-1:-1:-1;;;5160:60:0;;;;;;;:::i;:::-;5288:6:::1;::::0;::::1;;5287:7;5279:46;;;;-1:-1:-1::0;;;5279:46:0::1;;;;;;;:::i;:::-;5345:6;::::0;::::1;::::0;::::1;;;5344:7;5336:46;;;;-1:-1:-1::0;;;5336:46:0::1;;;;;;;:::i;:::-;14599:6:::2;:13:::0;;-1:-1:-1;;14599:13:0::2;;;::::0;;14545:75::o;13596:846::-;6051:6;;13662:7;;6051:6;;;;;6050:7;6042:46;;;;-1:-1:-1;;;6042:46:0;;;;;;;:::i;:::-;6120:15;6107:9;;:28;;6099:75;;;;-1:-1:-1;;;6099:75:0;;16069:2:6;6099:75:0;;;16051:21:6;16108:2;16088:18;;;16081:30;16147:34;16127:18;;;16120:62;-1:-1:-1;;;16198:18:6;;;16191:32;16240:19;;6099:75:0;16041:224:6;6099:75:0;6194:14;;;;;;;6193:15;6185:53;;;;-1:-1:-1;;;6185:53:0;;16876:2:6;6185:53:0;;;16858:21:6;16915:2;16895:18;;;16888:30;16954:27;16934:18;;;16927:55;16999:18;;6185:53:0;16848:175:6;6185:53:0;13698:10:::1;13726:1;13690:19:::0;;;:7:::1;:19;::::0;;;;:33:::1;;::::0;13682:75:::1;;;::::0;-1:-1:-1;;;13682:75:0;;18351:2:6;13682:75:0::1;::::0;::::1;18333:21:6::0;18390:2;18370:18;;;18363:30;18429:27;18409:18;;;18402:55;18474:18;;13682:75:0::1;18323:175:6::0;13682:75:0::1;13813:10;13768:34;13805:19:::0;;;:7:::1;:19;::::0;;;;;;;13768:56;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;13895:13:::1;:39:::0;;13768:56;;;;;13895:13;;:39:::1;::::0;13768:56;;13895:39:::1;:::i;:::-;::::0;;;-1:-1:-1;;13961:15:0::1;::::0;::::1;::::0;13945:12:::1;:31:::0;;:12:::1;::::0;:31:::1;::::0;13961:15;;13945:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;14015:1:0::1;13987:29:::0;;;14027:15:::1;::::0;::::1;:29:::0;;;14067:25:::1;::::0;;::::1;:29:::0;;;14115:10:::1;14107:19:::0;;:7:::1;-1:-1:-1::0;14107:19:0;;;;;;:34;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;14152:16:::1;:33:::0;;14172:13;;14015:1;14152:33:::1;::::0;14172:13;;14152:33:::1;:::i;:::-;::::0;;;-1:-1:-1;;14218:12:0::1;::::0;:48:::1;::::0;-1:-1:-1;;;14218:48:0;;14240:10:::1;14218:48;::::0;::::1;6669:51:6::0;6736:18;;;6729:34;;;-1:-1:-1;;;;;14218:12:0;;::::1;::::0;:21:::1;::::0;6642:18:6;;14218:48:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14196:146;;;::::0;-1:-1:-1;;;14196:146:0;;11467:2:6;14196:146:0::1;::::0;::::1;11449:21:6::0;11506:2;11486:18;;;11479:30;11545:34;11525:18;;;11518:62;-1:-1:-1;;;11596:18:6;;;11589:46;11652:19;;14196:146:0::1;11439:238:6::0;14196:146:0::1;14358:43;::::0;19054:25:6;;;14375:10:0::1;::::0;14358:43:::1;::::0;19042:2:6;19027:18;14358:43:0::1;;;;;;;14421:13:::0;-1:-1:-1;;13596:846:0;:::o;16654:188::-;5182:5;;-1:-1:-1;;;;;5182:5:0;5168:10;:19;5160:60;;;;-1:-1:-1;;;5160:60:0;;;;;;;:::i;:::-;5288:6:::1;::::0;::::1;;5287:7;5279:46;;;;-1:-1:-1::0;;;5279:46:0::1;;;;;;;:::i;:::-;5345:6;::::0;::::1;::::0;::::1;;;5344:7;5336:46;;;;-1:-1:-1::0;;;5336:46:0::1;;;;;;;:::i;:::-;16735:16:::2;::::0;::::2;;:24;;:16:::0;:24:::2;16727:68;;;;-1:-1:-1::0;;;16727:68:0::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;16808:18:0::2;16829:5;16808:18:::0;;;:11:::2;:18;::::0;;;;:26;;-1:-1:-1;;16808:26:0::2;::::0;;16654:188::o;15847:187::-;5182:5;;-1:-1:-1;;;;;5182:5:0;5168:10;:19;5160:60;;;;-1:-1:-1;;;5160:60:0;;;;;;;:::i;:::-;5288:6:::1;::::0;::::1;;5287:7;5279:46;;;;-1:-1:-1::0;;;5279:46:0::1;;;;;;;:::i;:::-;5345:6;::::0;::::1;::::0;::::1;;;5344:7;5336:46;;;;-1:-1:-1::0;;;5336:46:0::1;;;;;;;:::i;:::-;15927:16:::2;::::0;::::2;;:24;;:16:::0;:24:::2;15919:68;;;;-1:-1:-1::0;;;15919:68:0::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;16000:19:0::2;;::::0;;;:11:::2;:19;::::0;;;;:26;;-1:-1:-1;;16000:26:0::2;16022:4;16000:26;::::0;;15847:187::o;12415:1102::-;5809:14;;12499:7;;5809:14;;;;;5801:63;;;;-1:-1:-1;;;5801:63:0;;;;;;;:::i;:::-;5894:15;5883:7;;:26;;:44;;;-1:-1:-1;5913:14:0;;-1:-1:-1;;;5913:14:0;;;;5883:44;5875:99;;;;-1:-1:-1;;;5875:99:0;;9853:2:6;5875:99:0;;;9835:21:6;9892:2;9872:18;;;9865:30;9931:34;9911:18;;;9904:62;-1:-1:-1;;;9982:18:6;;;9975:41;10033:19;;5875:99:0;9825:233:6;5875:99:0;12519:23:::1;12573;12588:7;12573:14;:23::i;:::-;12555:41;;12633:1;12615:15;:19;12607:59;;;::::0;-1:-1:-1;;;12607:59:0;;17995:2:6;12607:59:0::1;::::0;::::1;17977:21:6::0;18034:2;18014:18;;;18007:30;18073:29;18053:18;;;18046:57;18120:18;;12607:59:0::1;17967:177:6::0;12607:59:0::1;12704:12;12685:15;:31;;12677:90;;;::::0;-1:-1:-1;;;12677:90:0;;8135:2:6;12677:90:0::1;::::0;::::1;8117:21:6::0;8174:2;8154:18;;;8147:30;8213:34;8193:18;;;8186:62;-1:-1:-1;;;8264:18:6;;;8257:44;8318:19;;12677:90:0::1;8107:236:6::0;12677:90:0::1;12821:3;::::0;12778:24:::1;::::0;12828:3:::1;::::0;12806:18:::1;::::0;-1:-1:-1;;;12821:3:0;::::1;;;12806:12:::0;:18:::1;:::i;:::-;12805:26;;;;:::i;:::-;-1:-1:-1::0;;;;;12881:16:0;::::1;12844:34;12881:16:::0;;;:7:::1;:16;::::0;;;;;;;;12844:53;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;12778;;-1:-1:-1;12941:12:0;;12844:53;12910:43:::1;::::0;12941:12;;12910:43:::1;:::i;:::-;::::0;;-1:-1:-1;12964:22:0::1;::::0;::::1;:47:::0;;12995:16;;12964:22;:47:::1;::::0;12995:16;;12964:47:::1;:::i;:::-;::::0;;-1:-1:-1;;;;;;13022:16:0;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:30;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;13065:11:::1;:27:::0;;13080:12;;13022:16;13065:27:::1;::::0;13080:12;;13065:27:::1;:::i;:::-;;;;;;;;13118:16;13103:10;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;13153:9:0::1;::::0;13172:11:::1;::::0;13153:49:::1;::::0;-1:-1:-1;;;13153:49:0;;-1:-1:-1;;;;;13172:11:0;;::::1;13153:49;::::0;::::1;6669:51:6::0;6736:18;;;6729:34;;;-1:-1:-1;;;13153:9:0;;::::1;;::::0;:18:::1;::::0;6642::6;;13153:49:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13145:98;;;::::0;-1:-1:-1;;;13145:98:0;;18705:2:6;13145:98:0::1;::::0;::::1;18687:21:6::0;18744:2;18724:18;;;18717:30;18783:34;18763:18;;;18756:62;-1:-1:-1;;;18834:18:6;;;18827:34;18878:19;;13145:98:0::1;18677:226:6::0;13145:98:0::1;13262:9;::::0;:41:::1;::::0;-1:-1:-1;;;13262:41:0;;-1:-1:-1;;;;;6687:32:6;;;13262:41:0::1;::::0;::::1;6669:51:6::0;6736:18;;;6729:34;;;-1:-1:-1;;;13262:9:0;;::::1;::::0;;::::1;::::0;:18:::1;::::0;6642::6;;13262:41:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13254:69;;;::::0;-1:-1:-1;;;13254:69:0;;14967:2:6;13254:69:0::1;::::0;::::1;14949:21:6::0;15006:2;14986:18;;;14979:30;-1:-1:-1;;;15025:18:6;;;15018:45;15080:18;;13254:69:0::1;14939:165:6::0;13254:69:0::1;13378:11;::::0;13341:67:::1;::::0;;19264:25:6;;;19320:2;19305:18;;19298:34;;;-1:-1:-1;;;;;13378:11:0;;::::1;::::0;13341:67;::::1;::::0;::::1;::::0;19237:18:6;13341:67:0::1;;;;;;;-1:-1:-1::0;13492:16:0;12415:1102;-1:-1:-1;;;;12415:1102:0:o;7966:1706::-;5021:11;;;;;;;5020:12;5012:59;;;;-1:-1:-1;;;5012:59:0;;15311:2:6;5012:59:0;;;15293:21:6;15350:2;15330:18;;;15323:30;15389:34;15369:18;;;15362:62;-1:-1:-1;;;15440:18:6;;;15433:32;15482:19;;5012:59:0;15283:224:6;5012:59:0;5082:11;:18;;-1:-1:-1;;5082:18:0;;;;;8425:10;;:7;;5096:4;;8425:10;::::1;;;-1:-1:-1::0;;;8425:10:0::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8411:24:0::1;:7;8419:1;8411:10;;;;;;-1:-1:-1::0;;;8411:10:0::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;8411:24:0::1;;;8403:82;;;::::0;-1:-1:-1;;;8403:82:0;;10265:2:6;8403:82:0::1;::::0;::::1;10247:21:6::0;10304:2;10284:18;;;10277:30;10343:34;10323:18;;;10316:62;-1:-1:-1;;;10394:18:6;;;10387:43;10447:19;;8403:82:0::1;10237:235:6::0;8403:82:0::1;8530:19;8550:1;8530:22;;;;;;-1:-1:-1::0;;;8530:22:0::1;;;;;;;;;;;;;;;8504:19;8524:1;8504:22;;;;;;-1:-1:-1::0;;;8504:22:0::1;;;;;;;;;;;;;;;:48;;8496:108;;;::::0;-1:-1:-1;;;8496:108:0;;8550:2:6;8496:108:0::1;::::0;::::1;8532:21:6::0;8589:2;8569:18;;;8562:30;8628:34;8608:18;;;8601:62;-1:-1:-1;;;8679:18:6;;;8672:46;8735:19;;8496:108:0::1;8522:238:6::0;8496:108:0::1;8643:13;8623:33;;:16;:33;;;;8615:107;;;::::0;-1:-1:-1;;;8615:107:0;;12239:2:6;8615:107:0::1;::::0;::::1;12221:21:6::0;12278:2;12258:18;;;12251:30;12317:34;12297:18;;;12290:62;12388:31;12368:18;;;12361:59;12437:19;;8615:107:0::1;12211:251:6::0;8615:107:0::1;8752:10;8741:8;:21;8733:93;;;::::0;-1:-1:-1;;;8733:93:0;;10679:2:6;8733:93:0::1;::::0;::::1;10661:21:6::0;10718:2;10698:18;;;10691:30;10757:34;10737:18;;;10730:62;10828:29;10808:18;;;10801:57;10875:19;;8733:93:0::1;10651:249:6::0;8733:93:0::1;8839:11;:32:::0;;-1:-1:-1;;;;;8839:32:0;;::::1;-1:-1:-1::0;;;;;;8839:32:0;;::::1;;::::0;;;8882:26;;;;::::1;::::0;;;::::1;;::::0;;8939:22;;:19;;8839:11;8939:22:::1;;-1:-1:-1::0;;;8939:22:0::1;;;;;;;;;;;;;;;8919:7;:42;;;;8992:19;9012:1;8992:22;;;;;;-1:-1:-1::0;;;8992:22:0::1;;;;;;;;;;::::0;;::::1;::::0;;;;;;8972:7:::1;:42:::0;9025:5:::1;:26:::0;;;9062:9:::1;:30:::0;;;9103:7:::1;:28:::0;;;9142:16:::1;:27:::0;;;9180:15:::1;:36:::0;;-1:-1:-1;;9227:33:0;9180:36:::1;;::::0;;::::1;::::0;;;::::1;-1:-1:-1::0;;9227:33:0;;;;;-1:-1:-1;;;9227:33:0;;::::1;::::0;;;::::1;;-1:-1:-1::0;;9271:37:0::1;::::0;::::1;;;::::0;;9346:10;;;;-1:-1:-1;;9346:10:0::1;;-1:-1:-1::0;;;9346:10:0::1;;;;;;;;;;;;;;;9319:9;::::0;:38:::1;;;;;-1:-1:-1::0;;;;;9319:38:0::1;;;;;-1:-1:-1::0;;;;;9319:38:0::1;;;;;;9395:7;9403:1;9395:10;;;;;;-1:-1:-1::0;;;9395:10:0::1;;;;;;;;;;::::0;;::::1;::::0;;;;;;9368:12:::1;:38:::0;;-1:-1:-1;;;;;9368:38:0;;::::1;-1:-1:-1::0;;;;;;9417:24:0;;;;;;;-1:-1:-1;;;9417:24:0::1;::::0;::::1;;;::::0;;9476:7:::1;::::0;9496:6;;9476:16:::1;::::0;2405:8:::1;::::0;9476:16:::1;:::i;:::-;9475:27;;;;:::i;:::-;9454:18;:48:::0;;;9562:3:::1;::::0;9535:23:::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;9534:31;;;;:::i;:::-;9513:17;:52:::0;;;9597:18:::1;::::0;9576:13:::1;:39:::0;9626:12:::1;:38:::0;-1:-1:-1;;;;;;;;;;;7966:1706:0:o;9826:2327::-;5288:6;;9900:7;;;;5288:6;;5287:7;5279:46;;;;-1:-1:-1;;;5279:46:0;;;;;;;:::i;:::-;5345:6;;;;;;;5344:7;5336:46;;;;-1:-1:-1;;;5336:46:0;;;;;;;:::i;:::-;5454:14:::1;::::0;-1:-1:-1;;;5454:14:0;::::1;;;5453:15;5445:57;;;::::0;-1:-1:-1;;;5445:57:0;;7777:2:6;5445:57:0::1;::::0;::::1;7759:21:6::0;7816:2;7796:18;;;7789:30;7855:31;7835:18;;;7828:59;7904:18;;5445:57:0::1;7749:179:6::0;5445:57:0::1;5522:16;::::0;::::1;;5521:17;::::0;:44:::1;;-1:-1:-1::0;5554:10:0::1;5542:23;::::0;;;:11:::1;:23;::::0;;;;;::::1;;5521:44;5513:83;;;::::0;-1:-1:-1;;;5513:83:0;;11884:2:6;5513:83:0::1;::::0;::::1;11866:21:6::0;11923:2;11903:18;;;11896:30;11962:28;11942:18;;;11935:56;12008:18;;5513:83:0::1;11856:176:6::0;5513:83:0::1;5626:15;5615:7;;:26;;:58;;;;;5658:15;5645:9;;:28;;5615:58;5607:129;;;::::0;-1:-1:-1;;;5607:129:0;;14142:2:6;5607:129:0::1;::::0;::::1;14124:21:6::0;14181:2;14161:18;;;14154:30;14220:34;14200:18;;;14193:62;-1:-1:-1;;;14271:18:6;;;14264:43;14324:19;;5607:129:0::1;14114:235:6::0;5607:129:0::1;9934:8:::2;::::0;;;::::2;;;9929:213;;10026:17;;10005:18;;:38;;;;:::i;:::-;9967:9;::::0;:34:::2;::::0;-1:-1:-1;;;9967:34:0;;9995:4:::2;9967:34;::::0;::::2;6053:51:6::0;-1:-1:-1;;;9967:9:0;;::::2;-1:-1:-1::0;;;;;9967:9:0::2;::::0;:19:::2;::::0;6026:18:6;;9967:34:0::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:76;;9959:141;;;::::0;-1:-1:-1;;;9959:141:0;;16472:2:6;9959:141:0::2;::::0;::::2;16454:21:6::0;16511:2;16491:18;;;16484:30;16550:34;16530:18;;;16523:62;-1:-1:-1;;;16601:18:6;;;16594:33;16644:19;;9959:141:0::2;16444:225:6::0;9959:141:0::2;10115:8;:15:::0;;-1:-1:-1;;10115:15:0::2;::::0;::::2;::::0;;9929:213:::2;10297:5;::::0;10250:18:::2;::::0;10272:23:::2;2405:8;10272:14:::0;:23:::2;:::i;:::-;10271:31;;;;:::i;:::-;10392:16;::::0;10529:3:::2;::::0;10250:52;;-1:-1:-1;10392:16:0;10367:22:::2;::::0;10536:3:::2;::::0;10518:14:::2;::::0;-1:-1:-1;;;10529:3:0;::::2;;;10250:52:::0;10518:14:::2;:::i;:::-;10517:22;;;;:::i;:::-;10667:7;::::0;10497:42;;-1:-1:-1;10632:31:0::2;10649:14:::0;10632;:31:::2;:::i;:::-;:42;;10623:111;;;::::0;-1:-1:-1;;;10623:111:0;;8967:2:6;10623:111:0::2;::::0;::::2;8949:21:6::0;9006:2;8986:18;;;8979:30;9045:34;9025:18;;;9018:62;-1:-1:-1;;;9096:18:6;;;9089:40;9146:19;;10623:111:0::2;8939:232:6::0;10623:111:0::2;10773:10;10756:13;;:27;;10747:95;;;::::0;-1:-1:-1;;;10747:95:0;;13020:2:6;10747:95:0::2;::::0;::::2;13002:21:6::0;13059:2;13039:18;;;13032:30;13098:34;13078:18;;;13071:62;-1:-1:-1;;;13149:18:6;;;13142:39;13198:19;;10747:95:0::2;12992:231:6::0;10747:95:0::2;10874:31;10891:14:::0;10874;:31:::2;:::i;:::-;10855:16;:50;;;;10997:10;10980:13;;:27;;;;;;;:::i;:::-;;;;;;;;11035:9;11018:12;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;11149:12:0::2;::::0;:68:::2;::::0;-1:-1:-1;;;11149:68:0;;11175:10:::2;11149:68;::::0;::::2;6355:34:6::0;11195:4:0::2;6405:18:6::0;;;6398:43;6457:18;;;6450:34;;;-1:-1:-1;;;;;11149:12:0;;::::2;::::0;:25:::2;::::0;6290:18:6;;11149:68:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11141:96;;;::::0;-1:-1:-1;;;11141:96:0;;14967:2:6;11141:96:0::2;::::0;::::2;14949:21:6::0;15006:2;14986:18;;;14979:30;-1:-1:-1;;;15025:18:6;;;15018:45;15080:18;;11141:96:0::2;14939:165:6::0;11141:96:0::2;11274:7;;11254:16;;:27;11250:81;;11298:14;:21:::0;;-1:-1:-1;;11298:21:0::2;::::0;::::2;::::0;;11250:81:::2;11365:7;;11345:16;;:27;11341:129;;11389:14;:21:::0;;-1:-1:-1;;11389:21:0::2;-1:-1:-1::0;;;11389:21:0::2;::::0;;11444:14:::2;19084:15:::0;;19011:96;11444:14:::2;11425:16;:33:::0;11341:129:::2;11507:10;11533:19;::::0;;;:7:::2;:19;::::0;;;;:30;11482:463:::2;::::0;11507:10;11533:43:::2;::::0;11566:10;;11533:43:::2;:::i;:::-;11651:10;11643:19;::::0;;;:7:::2;:19;::::0;;;;:33:::2;;::::0;:50:::2;::::0;11679:14;;11643:50:::2;:::i;:::-;11766:10;11758:19;::::0;;;:7:::2;:19;::::0;;;;:32:::2;::::0;::::2;::::0;11806:23:::2;::::0;;::::2;::::0;:35:::2;::::0;11832:9;;11806:35:::2;:::i;:::-;11908:10;11900:19;::::0;;;:7:::2;:19;::::0;;;;:30:::2;;::::0;11482:10:::2;:463::i;:::-;12064:38;::::0;19054:25:6;;;12079:10:0::2;::::0;12064:38:::2;::::0;19042:2:6;19027:18;12064:38:0::2;;;;;;;12123:10:::0;;-1:-1:-1;12135:9:0;;-1:-1:-1;;9826:2327:0;;;:::o;17834:781::-;-1:-1:-1;;;;;17952:16:0;;17895:7;17952:16;;;:7;:16;;;;;;;;17915:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18002:16;;19084:15;17985:33;17981:74;;;-1:-1:-1;18042:1:0;;17834:781;-1:-1:-1;;17834:781:0:o;17981:74::-;18103:22;18145:16;;18128:14;19084:15;;19011:96;18128:14;:33;;;;:::i;:::-;18195:12;;18103:58;;-1:-1:-1;;;;18195:12:0;;;;18178:29;;18174:70;;;-1:-1:-1;18231:1:0;;17834:781;-1:-1:-1;;;17834:781:0:o;18174:70::-;18334:15;;;;;;;18316:33;;18312:296;;18398:24;;;;18373:22;;:49;;18398:24;18373:49;:::i;:::-;18366:56;17834:781;-1:-1:-1;;;;17834:781:0:o;18312:296::-;18520:15;;18494:22;;18455:20;;18520:15;;;;;;18479:37;;:14;:37;:::i;:::-;18478:57;;;;:::i;:::-;18455:80;;18572:11;:24;;;18557:12;:39;;;;:::i;:::-;18550:46;17834:781;-1:-1:-1;;;;;17834:781:0:o;16215:275::-;5182:5;;-1:-1:-1;;;;;5182:5:0;5168:10;:19;5160:60;;;;-1:-1:-1;;;5160:60:0;;;;;;;:::i;:::-;5288:6:::1;::::0;::::1;;5287:7;5279:46;;;;-1:-1:-1::0;;;5279:46:0::1;;;;;;;:::i;:::-;5345:6;::::0;::::1;::::0;::::1;;;5344:7;5336:46;;;;-1:-1:-1::0;;;5336:46:0::1;;;;;;;:::i;:::-;16310:16:::2;::::0;::::2;;:24;;:16:::0;:24:::2;16302:68;;;;-1:-1:-1::0;;;16302:68:0::2;;;;;;;:::i;:::-;16386:9;16381:102;16405:7;:14;16401:1;:18;16381:102;;;16467:4;16441:11;:23;16453:7;16461:1;16453:10;;;;;;-1:-1:-1::0;;;16453:10:0::2;;;;;;;;;;::::0;;::::2;::::0;;;;;;;-1:-1:-1;;;;;16441:23:0::2;::::0;;;::::2;::::0;;;;;;-1:-1:-1;16441:23:0;:30;;-1:-1:-1;;16441:30:0::2;::::0;::::2;;::::0;;;::::2;::::0;;16421:3;::::2;::::0;::::2;:::i;:::-;;;;16381:102;;17338:305:::0;17426:11;;;;;;;:19;;17441:4;17426:19;;;:42;;-1:-1:-1;17463:5:0;;-1:-1:-1;;;;;17463:5:0;17449:10;:19;17426:42;17404:158;;;;-1:-1:-1;;;17404:158:0;;9378:2:6;17404:158:0;;;9360:21:6;9417:2;9397:18;;;9390:30;9456:34;9436:18;;;9429:62;9527:34;9507:18;;;9500:62;-1:-1:-1;;;9578:19:6;;;9571:33;9621:19;;17404:158:0;9350:296:6;17404:158:0;17573:20;;;;:8;;:20;;;;;:::i;:::-;;17625:9;17609:26;;;;;;:::i;:::-;;;;;;;;;;;;;;;17338:305;:::o;19509:596::-;19768:15;;;;;;;19753:30;;;19745:74;;;;-1:-1:-1;;;19745:74:0;;11107:2:6;19745:74:0;;;11089:21:6;11146:2;11126:18;;;11119:30;11185:33;11165:18;;;11158:61;11236:18;;19745:74:0;11079:181:6;19745:74:0;19854:214;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19832:19:0;;-1:-1:-1;19832:19:0;;;:7;:19;;;;;;:236;;;;;;;;;;;;;;;;;;;;;;;;;;;20079:16;:18;;;;;;:::i;:::-;;;;;;19509:596;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:6;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:699::-;246:5;299:3;292:4;284:6;280:17;276:27;266:2;;321:5;314;307:20;266:2;361:6;348:20;387:4;411:60;427:43;467:2;427:43;:::i;:::-;411:60;:::i;:::-;493:3;517:2;512:3;505:15;545:2;540:3;536:12;529:19;;580:2;572:6;568:15;632:3;627:2;621;618:1;614:10;606:6;602:23;598:32;595:41;592:2;;;653:5;646;639:20;592:2;679:5;693:169;707:2;704:1;701:9;693:169;;;764:23;783:3;764:23;:::i;:::-;752:36;;808:12;;;;840;;;;725:1;718:9;693:169;;;-1:-1:-1;880:5:6;;256:635;-1:-1:-1;;;;;;;256:635:6:o;896:693::-;950:5;1003:3;996:4;988:6;984:17;980:27;970:2;;1025:5;1018;1011:20;970:2;1065:6;1052:20;1091:4;1115:60;1131:43;1171:2;1131:43;:::i;1115:60::-;1197:3;1221:2;1216:3;1209:15;1249:2;1244:3;1240:12;1233:19;;1284:2;1276:6;1272:15;1336:3;1331:2;1325;1322:1;1318:10;1310:6;1306:23;1302:32;1299:41;1296:2;;;1357:5;1350;1343:20;1296:2;1383:5;1397:163;1411:2;1408:1;1405:9;1397:163;;;1468:17;;1456:30;;1506:12;;;;1538;;;;1429:1;1422:9;1397:163;;1594:128;1659:20;;1688:28;1659:20;1688:28;:::i;1727:163::-;1794:20;;1854:10;1843:22;;1833:33;;1823:2;;1880:1;1877;1870:12;1895:156;1961:20;;2021:4;2010:16;;2000:27;;1990:2;;2041:1;2038;2031:12;2056:196;2115:6;2168:2;2156:9;2147:7;2143:23;2139:32;2136:2;;;2189:6;2181;2174:22;2136:2;2217:29;2236:9;2217:29;:::i;:::-;2207:39;2126:126;-1:-1:-1;;;2126:126:6:o;2257:1257::-;2449:6;2457;2465;2473;2481;2489;2497;2505;2513;2521;2529:7;2583:3;2571:9;2562:7;2558:23;2554:33;2551:2;;;2605:6;2597;2590:22;2551:2;2633:29;2652:9;2633:29;:::i;:::-;2623:39;;2681:38;2715:2;2704:9;2700:18;2681:38;:::i;:::-;2671:48;;2738:18;2805:2;2799;2788:9;2784:18;2771:32;2768:40;2765:2;;;2826:6;2818;2811:22;2765:2;2854:87;2933:7;2926:2;2915:9;2911:18;2898:32;2887:9;2883:48;2854:87;:::i;:::-;2844:97;;2990:2;2984;2973:9;2969:18;2956:32;2953:40;2950:2;;;3011:6;3003;2996:22;2950:2;;3039:87;3118:7;3111:2;3100:9;3096:18;3083:32;3072:9;3068:48;3039:87;:::i;:::-;3029:97;;3173:3;3162:9;3158:19;3145:33;3135:43;;3225:3;3214:9;3210:19;3197:33;3187:43;;3277:3;3266:9;3262:19;3249:33;3239:43;;3301:38;3334:3;3323:9;3319:19;3301:38;:::i;:::-;3291:48;;3358:38;3391:3;3380:9;3376:19;3358:38;:::i;:::-;3348:48;;3415:36;3446:3;3435:9;3431:19;3415:36;:::i;:::-;3405:46;;3471:37;3503:3;3492:9;3488:19;3471:37;:::i;:::-;3460:48;;2541:973;;;;;;;;;;;;;;:::o;3519:264::-;3587:6;3595;3648:2;3636:9;3627:7;3623:23;3619:32;3616:2;;;3669:6;3661;3654:22;3616:2;3697:29;3716:9;3697:29;:::i;:::-;3687:39;3773:2;3758:18;;;;3745:32;;-1:-1:-1;;;3606:177:6:o;3788:368::-;3872:6;3925:2;3913:9;3904:7;3900:23;3896:32;3893:2;;;3946:6;3938;3931:22;3893:2;3991:9;3978:23;4024:18;4016:6;4013:30;4010:2;;;4061:6;4053;4046:22;4010:2;4089:61;4142:7;4133:6;4122:9;4118:22;4089:61;:::i;4161:255::-;4228:6;4281:2;4269:9;4260:7;4256:23;4252:32;4249:2;;;4302:6;4294;4287:22;4249:2;4339:9;4333:16;4358:28;4380:5;4358:28;:::i;4421:808::-;4489:6;4520:2;4563;4551:9;4542:7;4538:23;4534:32;4531:2;;;4584:6;4576;4569:22;4531:2;4629:9;4616:23;4658:18;4699:2;4691:6;4688:14;4685:2;;;4720:6;4712;4705:22;4685:2;4763:6;4752:9;4748:22;4738:32;;4808:7;4801:4;4797:2;4793:13;4789:27;4779:2;;4835:6;4827;4820:22;4779:2;4876;4863:16;4898:2;4894;4891:10;4888:2;;;4904:18;;:::i;:::-;4946:53;4989:2;4970:13;;-1:-1:-1;;4966:27:6;4962:36;;4946:53;:::i;:::-;4933:66;;5022:2;5015:5;5008:17;5062:7;5057:2;5052;5048;5044:11;5040:20;5037:33;5034:2;;;5088:6;5080;5073:22;5034:2;5148;5143;5139;5135:11;5130:2;5123:5;5119:14;5106:45;5171:14;;5167:23;;;5160:39;;;;5175:5;4500:729;-1:-1:-1;;;4500:729:6:o;5234:190::-;5293:6;5346:2;5334:9;5325:7;5321:23;5317:32;5314:2;;;5367:6;5359;5352:22;5314:2;-1:-1:-1;5395:23:6;;5304:120;-1:-1:-1;5304:120:6:o;5429:194::-;5499:6;5552:2;5540:9;5531:7;5527:23;5523:32;5520:2;;;5573:6;5565;5558:22;5520:2;-1:-1:-1;5601:16:6;;5510:113;-1:-1:-1;5510:113:6:o;5628:274::-;5757:3;5795:6;5789:13;5811:53;5857:6;5852:3;5845:4;5837:6;5833:17;5811:53;:::i;:::-;5880:16;;;;;5765:137;-1:-1:-1;;5765:137:6:o;6966:381::-;7113:2;7102:9;7095:21;7076:4;7145:6;7139:13;7188:6;7183:2;7172:9;7168:18;7161:34;7204:66;7263:6;7258:2;7247:9;7243:18;7238:2;7230:6;7226:15;7204:66;:::i;:::-;7331:2;7310:15;-1:-1:-1;;7306:29:6;7291:45;;;;7338:2;7287:54;;7085:262;-1:-1:-1;;7085:262:6:o;13228:352::-;13430:2;13412:21;;;13469:2;13449:18;;;13442:30;13508;13503:2;13488:18;;13481:58;13571:2;13556:18;;13402:178::o;13585:350::-;13787:2;13769:21;;;13826:2;13806:18;;;13799:30;13865:28;13860:2;13845:18;;13838:56;13926:2;13911:18;;13759:176::o;14354:406::-;14556:2;14538:21;;;14595:2;14575:18;;;14568:30;14634:34;14629:2;14614:18;;14607:62;-1:-1:-1;;;14700:2:6;14685:18;;14678:40;14750:3;14735:19;;14528:232::o;15512:350::-;15714:2;15696:21;;;15753:2;15733:18;;;15726:30;15792:28;15787:2;15772:18;;15765:56;15853:2;15838:18;;15686:176::o;17028:355::-;17230:2;17212:21;;;17269:2;17249:18;;;17242:30;17308:33;17303:2;17288:18;;17281:61;17374:2;17359:18;;17202:181::o;17388:400::-;17590:2;17572:21;;;17629:2;17609:18;;;17602:30;17668:34;17663:2;17648:18;;17641:62;-1:-1:-1;;;17734:2:6;17719:18;;17712:34;17778:3;17763:19;;17562:226::o;20197:275::-;20268:2;20262:9;20333:2;20314:13;;-1:-1:-1;;20310:27:6;20298:40;;20368:18;20353:34;;20389:22;;;20350:62;20347:2;;;20415:18;;:::i;:::-;20451:2;20444:22;20242:230;;-1:-1:-1;20242:230:6:o;20477:183::-;20537:4;20570:18;20562:6;20559:30;20556:2;;;20592:18;;:::i;:::-;-1:-1:-1;20637:1:6;20633:14;20649:4;20629:25;;20546:114::o;20665:128::-;20705:3;20736:1;20732:6;20729:1;20726:13;20723:2;;;20742:18;;:::i;:::-;-1:-1:-1;20778:9:6;;20713:80::o;20798:217::-;20838:1;20864;20854:2;;-1:-1:-1;;;20889:31:6;;20943:4;20940:1;20933:15;20971:4;20896:1;20961:15;20854:2;-1:-1:-1;21000:9:6;;20844:171::o;21020:168::-;21060:7;21126:1;21122;21118:6;21114:14;21111:1;21108:21;21103:1;21096:9;21089:17;21085:45;21082:2;;;21133:18;;:::i;:::-;-1:-1:-1;21173:9:6;;21072:116::o;21193:125::-;21233:4;21261:1;21258;21255:8;21252:2;;;21266:18;;:::i;:::-;-1:-1:-1;21303:9:6;;21242:76::o;21323:258::-;21395:1;21405:113;21419:6;21416:1;21413:13;21405:113;;;21495:11;;;21489:18;21476:11;;;21469:39;21441:2;21434:10;21405:113;;;21536:6;21533:1;21530:13;21527:2;;;21571:1;21562:6;21557:3;21553:16;21546:27;21527:2;;21376:205;;;:::o;21586:380::-;21665:1;21661:12;;;;21708;;;21729:2;;21783:4;21775:6;21771:17;21761:27;;21729:2;21836;21828:6;21825:14;21805:18;21802:38;21799:2;;;21882:10;21877:3;21873:20;21870:1;21863:31;21917:4;21914:1;21907:15;21945:4;21942:1;21935:15;21799:2;;21641:325;;;:::o;21971:135::-;22010:3;-1:-1:-1;;22031:17:6;;22028:2;;;22051:18;;:::i;:::-;-1:-1:-1;22098:1:6;22087:13;;22018:88::o;22111:127::-;22172:10;22167:3;22163:20;22160:1;22153:31;22203:4;22200:1;22193:15;22227:4;22224:1;22217:15;22243:127;22304:10;22299:3;22295:20;22292:1;22285:31;22335:4;22332:1;22325:15;22359:4;22356:1;22349:15;22375:118;22461:5;22454:13;22447:21;22440:5;22437:32;22427:2;;22483:1;22480;22473:12;22427:2;22417:76;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2180800",
                "executionCost": "2324",
                "totalCost": "2183124"
              },
              "external": {
                "admin()": "1147",
                "beneficiary()": "1171",
                "buy(uint256)": "infinite",
                "calculateClaim(address)": "infinite",
                "checkWhitelisted(address)": "1317",
                "claim(address,uint256)": "infinite",
                "close()": "infinite",
                "closed()": "1166",
                "endTime()": "1107",
                "fee()": "1141",
                "feeAmountRequired()": "1150",
                "feeClaimed()": "1084",
                "feeRemainder()": "1128",
                "funders(address)": "4599",
                "fundingCollected()": "1041",
                "fundingToken()": "1148",
                "fundingWithdrawn()": "1041",
                "hardCap()": "1127",
                "initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint8)": "infinite",
                "initialized()": "1156",
                "isFunded()": "1176",
                "maximumReached()": "1118",
                "metadata()": "infinite",
                "minimumReached()": "1154",
                "pause()": "23539",
                "paused()": "1066",
                "permissionedSeed()": "1078",
                "price()": "1062",
                "retrieveFundingTokens()": "infinite",
                "seedAmountRequired()": "1150",
                "seedClaimed()": "1129",
                "seedRemainder()": "1064",
                "seedToken()": "1144",
                "softCap()": "1107",
                "startTime()": "1128",
                "totalFunderCount()": "1062",
                "unpause()": "23579",
                "unwhitelist(address)": "24676",
                "updateMetadata(bytes)": "infinite",
                "vestingCliff()": "1118",
                "vestingDuration()": "1137",
                "vestingStartTime()": "1084",
                "whitelist(address)": "24593",
                "whitelistBatch(address[])": "infinite",
                "whitelisted(address)": "1298",
                "withdraw()": "infinite"
              },
              "internal": {
                "_addFunder(address,uint256,uint256,uint256,uint256,uint256)": "infinite",
                "_currentTime()": "infinite"
              }
            },
            "methodIdentifiers": {
              "admin()": "f851a440",
              "beneficiary()": "38af3eed",
              "buy(uint256)": "d96a094a",
              "calculateClaim(address)": "ea345540",
              "checkWhitelisted(address)": "20d8dad0",
              "claim(address,uint256)": "aad3ec96",
              "close()": "43d726d6",
              "closed()": "597e1fb5",
              "endTime()": "3197cbb6",
              "fee()": "ddca3f43",
              "feeAmountRequired()": "e6e36ebb",
              "feeClaimed()": "71f4b8e8",
              "feeRemainder()": "b774682f",
              "funders(address)": "031b3677",
              "fundingCollected()": "1cfe562e",
              "fundingToken()": "78065f27",
              "fundingWithdrawn()": "83d59e00",
              "hardCap()": "fb86a404",
              "initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint8)": "d8039364",
              "initialized()": "158ef93e",
              "isFunded()": "7c654303",
              "maximumReached()": "117a36d1",
              "metadata()": "392f37e9",
              "minimumReached()": "e565eb4c",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "permissionedSeed()": "3dba9e41",
              "price()": "a035b1fe",
              "retrieveFundingTokens()": "8a2448aa",
              "seedAmountRequired()": "bc0f5f84",
              "seedClaimed()": "47d02f1b",
              "seedRemainder()": "0826d2c7",
              "seedToken()": "311f8483",
              "softCap()": "906a26e0",
              "startTime()": "78e97925",
              "totalFunderCount()": "5e9777e8",
              "unpause()": "3f4ba83a",
              "unwhitelist(address)": "9a590427",
              "updateMetadata(bytes)": "fc582d41",
              "vestingCliff()": "f3640e74",
              "vestingDuration()": "1514617e",
              "vestingStartTime()": "a8660a78",
              "whitelist(address)": "9b19251a",
              "whitelistBatch(address[])": "eaa53523",
              "whitelisted(address)": "d936547e",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReclaimed\",\"type\":\"uint256\"}],\"name\":\"FundingReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPurchased\",\"type\":\"uint256\"}],\"name\":\"SeedsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"calculateClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"checkWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_softHardThresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_vestingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_vestingCliff\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"_permissionedSeed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"_fee\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionedSeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveFundingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"unwhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCliff\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_buyers\",\"type\":\"address[]\"}],\"name\":\"whitelistBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for seed phases of liquid launch.\",\"kind\":\"dev\",\"methods\":{\"buy(uint256)\":{\"details\":\"Buy seed tokens.\",\"params\":{\"_fundingAmount\":\"The amount of funding tokens to contribute.\"}},\"calculateClaim(address)\":{\"details\":\"Calculates the maximum claim\",\"params\":{\"_funder\":\"Address of funder to find the maximum claim\"}},\"checkWhitelisted(address)\":{\"details\":\"check whitelist status of a buyer\",\"params\":{\"_buyer\":\"address of buyer to check status\"}},\"claim(address,uint256)\":{\"details\":\"Claim vested seed tokens.\",\"params\":{\"_claimAmount\":\"The amount of seed token a users wants to claim.\",\"_funder\":\"Address of funder to calculate seconds and amount claimable\"}},\"close()\":{\"details\":\"Close distribution.\"},\"initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint8)\":{\"details\":\"Initialize Seed.\",\"params\":{\"_admin\":\"The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.\",\"_beneficiary\":\"The address that recieves fees.\",\"_endTime\":\"Distribution end time in unix timecode.\",\"_fee\":\"Success fee expressed as a % (e.g. 2 = 2% fee)\",\"_permissionedSeed\":\"Set to true if only whitelisted adresses are allowed to participate.\",\"_price\":\"The price in wei of fundingTokens when exchanged for seedTokens.\",\"_softHardThresholds\":\"Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.\",\"_startTime\":\"Distribution start time in unix timecode.\",\"_tokens\":\"Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.\",\"_vestingCliff\":\"Cliff duration in seconds.\",\"_vestingDuration\":\"Vesting period duration in seconds.\"}},\"pause()\":{\"details\":\"Pause distribution.\"},\"retrieveFundingTokens()\":{\"details\":\"Returns funding tokens to user.\"},\"unpause()\":{\"details\":\"Unpause distribution.\"},\"unwhitelist(address)\":{\"details\":\"Remove address from whitelist.\",\"params\":{\"buyer\":\"Address which needs to be unwhitelisted\"}},\"updateMetadata(bytes)\":{\"details\":\"Updates metadata.\",\"params\":{\"_metadata\":\"Seed contract metadata, that is IPFS Hash\"}},\"whitelist(address)\":{\"details\":\"Add address to whitelist.\",\"params\":{\"_buyer\":\"Address which needs to be whitelisted\"}},\"whitelistBatch(address[])\":{\"details\":\"Add multiple addresses to whitelist.\",\"params\":{\"_buyers\":\"Array of addresses to whitelist addresses in batch\"}},\"withdraw()\":{\"details\":\"Withdraw funds from the contract\"}},\"title\":\"PrimeDAO Seed contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/seed/Seed.sol\":\"Seed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/seed/Seed.sol\":{\"content\":\"/*\\r\\n\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\r\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\r\\n\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n/* solhint-disable space-after-comma */\\r\\n/* solhint-disable max-states-count */\\r\\n// solium-disable linebreak-style\\r\\npragma solidity 0.8.4;\\r\\n\\r\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\n\\r\\n/**\\r\\n * @title PrimeDAO Seed contract\\r\\n * @dev   Smart contract for seed phases of liquid launch.\\r\\n */\\r\\ncontract Seed {\\r\\n    // Locked parameters\\r\\n    address public beneficiary;\\r\\n    address public admin;\\r\\n    uint256 public softCap;\\r\\n    uint256 public hardCap;\\r\\n    uint256 public seedAmountRequired;    // Amount of seed required for distribution\\r\\n    uint256 public feeAmountRequired;     // Amount of seed required for fee\\r\\n    uint256 public price;\\r\\n    uint256 public startTime;\\r\\n    uint256 public endTime;               // set by project admin, this is the last resort endTime to be applied when\\r\\n                                          //     maximumReached has not been reached by then\\r\\n    bool    public permissionedSeed;\\r\\n    uint32  public vestingDuration;\\r\\n    uint32  public vestingCliff;\\r\\n    IERC20  public seedToken;\\r\\n    IERC20  public fundingToken;\\r\\n    uint8   public fee;\\r\\n\\r\\n    bytes   public metadata;           // IPFS Hash\\r\\n\\r\\n    uint256 constant internal PCT_BASE        = 10 ** 18;  // // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\r\\n\\r\\n    // Contract logic\\r\\n    bool    public closed;                 // is the distribution closed\\r\\n    bool    public paused;                 // is the distribution paused\\r\\n    bool    public isFunded;               // distribution can only start when required seed tokens have been funded\\r\\n    bool    public initialized;            // is this contract initialized [not necessary that it is funded]\\r\\n    bool    public minimumReached;         // if the softCap[minimum limit of funding token] is reached\\r\\n    bool    public maximumReached;         // if the hardCap[maximum limit of funding token] is reached\\r\\n    uint256 public vestingStartTime;       // timestamp for when vesting starts, by default == endTime,\\r\\n                                           //     otherwise when maximumReached is reached\\r\\n    uint256 public totalFunderCount;       // Total funders that have contributed.\\r\\n    uint256 public seedRemainder;          // Amount of seed tokens remaining to be distributed\\r\\n    uint256 public seedClaimed;            // Amount of seed token claimed by the user.\\r\\n    uint256 public feeRemainder;           // Amount of seed tokens remaining for the fee\\r\\n    uint256 public feeClaimed;             // Amount of seed tokens claimed as fee\\r\\n    uint256 public fundingCollected;       // Amount of funding tokens collected by the seed contract.\\r\\n    uint256 public fundingWithdrawn;       // Amount of funding token withdrawn from the seed contract.\\r\\n\\r\\n    mapping (address => bool) public whitelisted;        // funders that are whitelisted and allowed to contribute\\r\\n    mapping (address => FunderPortfolio) public funders; // funder address to funder portfolio\\r\\n\\r\\n    event SeedsPurchased(address indexed recipient, uint256 amountPurchased);\\r\\n    event TokensClaimed(address indexed recipient,uint256 amount,address indexed beneficiary,uint256 feeAmount);\\r\\n    event FundingReclaimed(address indexed recipient, uint256 amountReclaimed);\\r\\n    event MetadataUpdated(bytes indexed metadata);\\r\\n\\r\\n    struct FunderPortfolio {\\r\\n        uint256 seedAmount;                 // Total amount of seed tokens bought\\r\\n        uint256 totalClaimed;               // Total amount of seed tokens claimed\\r\\n        uint256 fundingAmount;              // Total amount of funding tokens contributed\\r\\n        uint256 fee;                        // Total amount of fee in seed amount for this portfolio\\r\\n        uint256 feeClaimed;                 // Total amount of fee sent to beneficiary for this portfolio\\r\\n    }\\r\\n\\r\\n    modifier initializer() {\\r\\n        require(!initialized, \\\"Seed: contract already initialized\\\");\\r\\n        initialized = true;\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyAdmin() {\\r\\n        require(msg.sender == admin, \\\"Seed: caller should be admin\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isActive() {\\r\\n        require(!closed, \\\"Seed: should not be closed\\\");\\r\\n        require(!paused, \\\"Seed: should not be paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowedToBuy() {\\r\\n        require(!maximumReached, \\\"Seed: maximum funding reached\\\");\\r\\n        require(!permissionedSeed || whitelisted[msg.sender], \\\"Seed: sender has no rights\\\");\\r\\n        require(endTime >= block.timestamp && startTime <= block.timestamp,\\r\\n            \\\"Seed: only allowed during distribution period\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowedToClaim() {\\r\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\r\\n        require(endTime <= block.timestamp || maximumReached,\\\"Seed: the distribution has not yet finished\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowedToRetrieve() {\\r\\n        require(!paused, \\\"Seed: should not be paused\\\");\\r\\n        require(startTime <= block.timestamp, \\\"Seed: distribution haven't started\\\");\\r\\n        require(!minimumReached, \\\"Seed: minimum already met\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowedToWithdraw() {\\r\\n        require(!paused, \\\"Seed: should not be paused\\\");\\r\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                          Initialize Seed.\\r\\n      * @param _beneficiary           The address that recieves fees.\\r\\n      * @param _admin                 The address of the admin of this contract. Funds contract\\r\\n                                      and has permissions to whitelist users, pause and close contract.\\r\\n      * @param _tokens                Array containing two params:\\r\\n                                        - The address of the seed token being distributed.\\r\\n      *                                 - The address of the funding token being exchanged for seed token.\\r\\n      * @param _softHardThresholds     Array containing two params:\\r\\n                                        - the minimum funding token collection threshold in wei denomination.\\r\\n                                        - the highest possible funding token amount to be raised in wei denomination.\\r\\n      * @param _price                 The price in wei of fundingTokens when exchanged for seedTokens.\\r\\n      * @param _startTime             Distribution start time in unix timecode.\\r\\n      * @param _endTime               Distribution end time in unix timecode.\\r\\n      * @param _vestingDuration       Vesting period duration in seconds.\\r\\n      * @param _vestingCliff          Cliff duration in seconds.\\r\\n      * @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\\r\\n      * @param _fee                   Success fee expressed as a % (e.g. 2 = 2% fee)\\r\\n    */\\r\\n    function initialize(\\r\\n        address _beneficiary,\\r\\n        address _admin,\\r\\n        address[] memory _tokens,\\r\\n        uint256[] memory _softHardThresholds,\\r\\n        uint256 _price,\\r\\n        uint256 _startTime,\\r\\n        uint256 _endTime,\\r\\n        uint32  _vestingDuration,\\r\\n        uint32  _vestingCliff,\\r\\n        bool    _permissionedSeed,\\r\\n        uint8   _fee\\r\\n    ) public initializer\\r\\n    {\\r\\n\\r\\n        // parameter check\\r\\n        require(_tokens[0] != _tokens[1], \\\"SeedFactory: seedToken cannot be fundingToken\\\");\\r\\n        require(_softHardThresholds[1] >= _softHardThresholds[0],\\\"SeedFactory: hardCap cannot be less than softCap\\\");\\r\\n        require(_vestingDuration >= _vestingCliff, \\\"SeedFactory: vestingDuration cannot be less than vestingCliff\\\");\\r\\n        require(_endTime > _startTime, \\\"SeedFactory: endTime cannot be less than equal to startTime\\\");\\r\\n\\r\\n        beneficiary       = _beneficiary;\\r\\n        admin             = _admin;\\r\\n        softCap           = _softHardThresholds[0];\\r\\n        hardCap           = _softHardThresholds[1];\\r\\n        price             = _price;\\r\\n        startTime         = _startTime;\\r\\n        endTime           = _endTime;\\r\\n        vestingStartTime  = endTime;\\r\\n        vestingDuration   = _vestingDuration;\\r\\n        vestingCliff      = _vestingCliff;\\r\\n        permissionedSeed  = _permissionedSeed;\\r\\n        seedToken         = IERC20(_tokens[0]);\\r\\n        fundingToken      = IERC20(_tokens[1]);\\r\\n        fee               = _fee;\\r\\n\\r\\n        seedAmountRequired = (hardCap*PCT_BASE) / _price;\\r\\n        feeAmountRequired  = (seedAmountRequired*_fee) / 100;\\r\\n        seedRemainder      = seedAmountRequired;\\r\\n        feeRemainder       = feeAmountRequired;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Buy seed tokens.\\r\\n      * @param _fundingAmount    The amount of funding tokens to contribute.\\r\\n    */\\r\\n    function buy(uint256 _fundingAmount) public isActive allowedToBuy returns(uint256, uint256) {\\r\\n        if (!isFunded) {\\r\\n            require(seedToken.balanceOf(address(this)) >= seedAmountRequired + feeAmountRequired,\\r\\n                \\\"Seed: sufficient seeds not provided\\\");\\r\\n            isFunded = true;\\r\\n        }\\r\\n        // fundingAmount is an amount of fundingTokens required to buy _seedAmount of SeedTokens\\r\\n        uint256 seedAmount = (_fundingAmount*PCT_BASE)/price;\\r\\n\\r\\n        // Funding Token balance of this contract;\\r\\n        uint256 fundingBalance = fundingCollected;\\r\\n\\r\\n        // feeAmount is an amount of fee we are going to get in seedTokens\\r\\n        uint256 feeAmount = (seedAmount*fee) / 100;\\r\\n\\r\\n        // total fundingAmount should not be greater than the hardCap\\r\\n        require( fundingBalance + _fundingAmount <= hardCap,\\r\\n            \\\"Seed: amount exceeds contract sale hardCap\\\");\\r\\n\\r\\n        require( seedRemainder >= seedAmount,\\r\\n            \\\"Seed: seed distribution would be exceeded\\\");\\r\\n\\r\\n        fundingCollected = fundingBalance + _fundingAmount;\\r\\n\\r\\n        // the amount of seed tokens still to be distributed\\r\\n        seedRemainder -= seedAmount;\\r\\n        feeRemainder  -= feeAmount;\\r\\n\\r\\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\\r\\n        require(fundingToken.transferFrom(msg.sender, address(this), _fundingAmount), \\\"Seed: no tokens\\\");\\r\\n\\r\\n        if (fundingCollected >= softCap) {\\r\\n            minimumReached = true;\\r\\n        }\\r\\n        if (fundingCollected >= hardCap) {\\r\\n            maximumReached = true;\\r\\n            vestingStartTime = _currentTime();\\r\\n        }\\r\\n\\r\\n        _addFunder(\\r\\n            msg.sender,\\r\\n            (funders[msg.sender].seedAmount + seedAmount),         // Previous Seed Amount + new seed amount\\r\\n            (funders[msg.sender].fundingAmount + _fundingAmount),  // Previous Funding Amount + new funding amount\\r\\n            funders[msg.sender].totalClaimed,\\r\\n            (funders[msg.sender].fee + feeAmount),                  // Previous Fee + new fee\\r\\n            funders[msg.sender].feeClaimed\\r\\n            );\\r\\n\\r\\n        // buyer, seed token purchased in this transaction (not the total amount of seed purchased)\\r\\n        emit SeedsPurchased(msg.sender, seedAmount);\\r\\n\\r\\n        return (seedAmount, feeAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Claim vested seed tokens.\\r\\n      * @param _funder           Address of funder to calculate seconds and amount claimable\\r\\n      * @param _claimAmount      The amount of seed token a users wants to claim.\\r\\n    */\\r\\n    function claim(address _funder, uint256 _claimAmount) public allowedToClaim returns(uint256) {\\r\\n        uint256 amountClaimable;\\r\\n\\r\\n        amountClaimable = calculateClaim(_funder);\\r\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\r\\n        require(amountClaimable >= _claimAmount, \\\"Seed: request is greater than claimable amount\\\");\\r\\n        uint256 feeAmountOnClaim = (_claimAmount * fee) / 100;\\r\\n\\r\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\r\\n\\r\\n        tokenFunder.totalClaimed    += _claimAmount;\\r\\n        tokenFunder.feeClaimed      += feeAmountOnClaim;\\r\\n        funders[_funder] = tokenFunder;\\r\\n\\r\\n        seedClaimed += _claimAmount;\\r\\n        feeClaimed  += feeAmountOnClaim;\\r\\n        require(seedToken.transfer(beneficiary, feeAmountOnClaim), \\\"Seed: cannot transfer to beneficiary\\\");\\r\\n        require(seedToken.transfer(_funder, _claimAmount), \\\"Seed: no tokens\\\");\\r\\n\\r\\n        emit TokensClaimed(_funder, _claimAmount, beneficiary, feeAmountOnClaim);\\r\\n\\r\\n        // fee on the distributed reward collected from admin\\r\\n        return (feeAmountOnClaim);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev         Returns funding tokens to user.\\r\\n    */\\r\\n    function retrieveFundingTokens() public allowedToRetrieve returns(uint256) {\\r\\n        require(funders[msg.sender].fundingAmount > 0, \\\"Seed: zero funding amount\\\");\\r\\n        FunderPortfolio memory tokenFunder = funders[msg.sender];\\r\\n        uint256 fundingAmount = tokenFunder.fundingAmount;\\r\\n        seedRemainder += tokenFunder.seedAmount;\\r\\n        feeRemainder += tokenFunder.fee;\\r\\n        tokenFunder.seedAmount    = 0;\\r\\n        tokenFunder.fee           = 0;\\r\\n        tokenFunder.fundingAmount = 0;\\r\\n        funders[msg.sender]  = tokenFunder;\\r\\n        fundingCollected -= fundingAmount;\\r\\n        require(\\r\\n            fundingToken.transfer(msg.sender, fundingAmount),\\r\\n            \\\"Seed: cannot return funding tokens to msg.sender\\\"\\r\\n        );\\r\\n        emit FundingReclaimed(msg.sender, fundingAmount);\\r\\n\\r\\n        return fundingAmount;\\r\\n    }\\r\\n\\r\\n    // ADMIN ACTIONS\\r\\n\\r\\n    /**\\r\\n      * @dev                     Pause distribution.\\r\\n    */\\r\\n    function pause() public onlyAdmin isActive {\\r\\n        paused = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Unpause distribution.\\r\\n    */\\r\\n    function unpause() public onlyAdmin {\\r\\n        require(closed != true, \\\"Seed: should not be closed\\\");\\r\\n        require(paused == true, \\\"Seed: should be paused\\\");\\r\\n\\r\\n        paused = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Close distribution.\\r\\n    */\\r\\n    function close() public onlyAdmin isActive {\\r\\n        // transfer seed tokens back to admin\\r\\n        if (minimumReached) {\\r\\n            // remaining seeds = seedRemainder + feeRemainder\\r\\n            uint256 seedToTransfer = seedRemainder+feeRemainder;\\r\\n            require(\\r\\n                seedToken.transfer(admin, seedToTransfer),\\r\\n                \\\"Seed: should transfer seed tokens to admin\\\"\\r\\n            );\\r\\n            paused = false;\\r\\n        } else {\\r\\n            require(\\r\\n                seedToken.transfer(admin, seedAmountRequired+feeAmountRequired),\\r\\n                \\\"Seed: should transfer seed tokens to admin\\\"\\r\\n            );\\r\\n            closed = true;\\r\\n            paused = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Add address to whitelist.\\r\\n      * @param _buyer            Address which needs to be whitelisted\\r\\n    */\\r\\n    function whitelist(address _buyer) public onlyAdmin isActive {\\r\\n        require(permissionedSeed == true, \\\"Seed: module is not whitelisted\\\");\\r\\n\\r\\n        whitelisted[_buyer] = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Add multiple addresses to whitelist.\\r\\n      * @param _buyers           Array of addresses to whitelist addresses in batch\\r\\n    */\\r\\n    function whitelistBatch(address[] memory _buyers) public onlyAdmin isActive {\\r\\n        require(permissionedSeed == true, \\\"Seed: module is not whitelisted\\\");\\r\\n        for (uint256 i = 0; i < _buyers.length; i++) {\\r\\n            whitelisted[_buyers[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Remove address from whitelist.\\r\\n      * @param buyer             Address which needs to be unwhitelisted\\r\\n    */\\r\\n    function unwhitelist(address buyer) public onlyAdmin isActive {\\r\\n        require(permissionedSeed == true, \\\"Seed: module is not whitelisted\\\");\\r\\n\\r\\n        whitelisted[buyer] = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Withdraw funds from the contract\\r\\n    */\\r\\n    function withdraw() public onlyAdmin allowedToWithdraw {\\r\\n        uint pendingFundingBalance = fundingCollected - fundingWithdrawn;\\r\\n        fundingWithdrawn = fundingCollected;\\r\\n        fundingToken.transfer(msg.sender, pendingFundingBalance);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Updates metadata.\\r\\n      * @param _metadata         Seed contract metadata, that is IPFS Hash\\r\\n    */\\r\\n    function updateMetadata(bytes memory _metadata) public {\\r\\n        require(\\r\\n            initialized != true || msg.sender == admin,\\r\\n            \\\"Seed: contract should not be initialized or caller should be admin\\\"\\r\\n        );\\r\\n        metadata = _metadata;\\r\\n        emit MetadataUpdated(_metadata);\\r\\n    }\\r\\n\\r\\n    // GETTER FUNCTIONS\\r\\n    /**\\r\\n      * @dev                     Calculates the maximum claim\\r\\n      * @param _funder           Address of funder to find the maximum claim\\r\\n    */\\r\\n    function calculateClaim(address _funder) public view returns(uint256) {\\r\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\r\\n\\r\\n        if (_currentTime() < vestingStartTime) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        // Check cliff was reached\\r\\n        uint256 elapsedSeconds = _currentTime() - vestingStartTime;\\r\\n\\r\\n        if (elapsedSeconds < vestingCliff) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        // If over vesting duration, all tokens vested\\r\\n        if (elapsedSeconds >= vestingDuration) {\\r\\n            return tokenFunder.seedAmount - tokenFunder.totalClaimed;\\r\\n        } else {\\r\\n            uint256 amountVested = (elapsedSeconds*tokenFunder.seedAmount) / vestingDuration;\\r\\n            return amountVested - tokenFunder.totalClaimed;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     check whitelist status of a buyer\\r\\n      * @param _buyer            address of buyer to check status\\r\\n    */\\r\\n    function checkWhitelisted(address _buyer) public view returns(bool) {\\r\\n        return whitelisted[_buyer];\\r\\n    }\\r\\n\\r\\n    // INTERNAL FUNCTIONS\\r\\n    /**\\r\\n      * @dev                      get current time or block.timestamp\\r\\n    */\\r\\n    function _currentTime() internal view returns(uint256) {\\r\\n        return block.timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                      add/update funder portfolio\\r\\n      * @param _recipient         Address of funder recipient\\r\\n      * @param _seedAmount        seed amount of the funder\\r\\n      * @param _fundingAmount     funding amount contributed\\r\\n      * @param _totalClaimed      total seed token amount claimed\\r\\n      * @param _fee               fee on seed amount bought\\r\\n    */\\r\\n    function _addFunder(\\r\\n        address _recipient,\\r\\n        uint256 _seedAmount,\\r\\n        uint256 _fundingAmount,\\r\\n        uint256 _totalClaimed,\\r\\n        uint256 _fee,\\r\\n        uint256 _feeClaimed\\r\\n    )\\r\\n    internal\\r\\n    {\\r\\n\\r\\n        require(_seedAmount >= vestingDuration, \\\"Seed: amountVestedPerSecond > 0\\\");\\r\\n\\r\\n        funders[_recipient] = FunderPortfolio({\\r\\n            seedAmount: _seedAmount,\\r\\n            totalClaimed: _totalClaimed,\\r\\n            fundingAmount: _fundingAmount,\\r\\n            fee: _fee,\\r\\n            feeClaimed: _feeClaimed\\r\\n        });\\r\\n        totalFunderCount++;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8002594f7249e0f619ef25c57f6e7e915799384ff7ae53791965e7abe84ab216\",\"license\":\"GPL-3.0-or-later\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 5,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "beneficiary",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 7,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "admin",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 9,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "softCap",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 11,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "hardCap",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 13,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "seedAmountRequired",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
              },
              {
                "astId": 15,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "feeAmountRequired",
                "offset": 0,
                "slot": "5",
                "type": "t_uint256"
              },
              {
                "astId": 17,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "price",
                "offset": 0,
                "slot": "6",
                "type": "t_uint256"
              },
              {
                "astId": 19,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "startTime",
                "offset": 0,
                "slot": "7",
                "type": "t_uint256"
              },
              {
                "astId": 21,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "endTime",
                "offset": 0,
                "slot": "8",
                "type": "t_uint256"
              },
              {
                "astId": 23,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "permissionedSeed",
                "offset": 0,
                "slot": "9",
                "type": "t_bool"
              },
              {
                "astId": 25,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "vestingDuration",
                "offset": 1,
                "slot": "9",
                "type": "t_uint32"
              },
              {
                "astId": 27,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "vestingCliff",
                "offset": 5,
                "slot": "9",
                "type": "t_uint32"
              },
              {
                "astId": 30,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "seedToken",
                "offset": 9,
                "slot": "9",
                "type": "t_contract(IERC20)1519"
              },
              {
                "astId": 33,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "fundingToken",
                "offset": 0,
                "slot": "10",
                "type": "t_contract(IERC20)1519"
              },
              {
                "astId": 35,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "fee",
                "offset": 20,
                "slot": "10",
                "type": "t_uint8"
              },
              {
                "astId": 37,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "metadata",
                "offset": 0,
                "slot": "11",
                "type": "t_bytes_storage"
              },
              {
                "astId": 44,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "closed",
                "offset": 0,
                "slot": "12",
                "type": "t_bool"
              },
              {
                "astId": 46,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "paused",
                "offset": 1,
                "slot": "12",
                "type": "t_bool"
              },
              {
                "astId": 48,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "isFunded",
                "offset": 2,
                "slot": "12",
                "type": "t_bool"
              },
              {
                "astId": 50,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "initialized",
                "offset": 3,
                "slot": "12",
                "type": "t_bool"
              },
              {
                "astId": 52,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "minimumReached",
                "offset": 4,
                "slot": "12",
                "type": "t_bool"
              },
              {
                "astId": 54,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "maximumReached",
                "offset": 5,
                "slot": "12",
                "type": "t_bool"
              },
              {
                "astId": 56,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "vestingStartTime",
                "offset": 0,
                "slot": "13",
                "type": "t_uint256"
              },
              {
                "astId": 58,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "totalFunderCount",
                "offset": 0,
                "slot": "14",
                "type": "t_uint256"
              },
              {
                "astId": 60,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "seedRemainder",
                "offset": 0,
                "slot": "15",
                "type": "t_uint256"
              },
              {
                "astId": 62,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "seedClaimed",
                "offset": 0,
                "slot": "16",
                "type": "t_uint256"
              },
              {
                "astId": 64,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "feeRemainder",
                "offset": 0,
                "slot": "17",
                "type": "t_uint256"
              },
              {
                "astId": 66,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "feeClaimed",
                "offset": 0,
                "slot": "18",
                "type": "t_uint256"
              },
              {
                "astId": 68,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "fundingCollected",
                "offset": 0,
                "slot": "19",
                "type": "t_uint256"
              },
              {
                "astId": 70,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "fundingWithdrawn",
                "offset": 0,
                "slot": "20",
                "type": "t_uint256"
              },
              {
                "astId": 74,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "whitelisted",
                "offset": 0,
                "slot": "21",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 79,
                "contract": "contracts/seed/Seed.sol:Seed",
                "label": "funders",
                "offset": 0,
                "slot": "22",
                "type": "t_mapping(t_address,t_struct(FunderPortfolio)116_storage)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes_storage": {
                "encoding": "bytes",
                "label": "bytes",
                "numberOfBytes": "32"
              },
              "t_contract(IERC20)1519": {
                "encoding": "inplace",
                "label": "contract IERC20",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_address,t_struct(FunderPortfolio)116_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct Seed.FunderPortfolio)",
                "numberOfBytes": "32",
                "value": "t_struct(FunderPortfolio)116_storage"
              },
              "t_struct(FunderPortfolio)116_storage": {
                "encoding": "inplace",
                "label": "struct Seed.FunderPortfolio",
                "members": [
                  {
                    "astId": 107,
                    "contract": "contracts/seed/Seed.sol:Seed",
                    "label": "seedAmount",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 109,
                    "contract": "contracts/seed/Seed.sol:Seed",
                    "label": "totalClaimed",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 111,
                    "contract": "contracts/seed/Seed.sol:Seed",
                    "label": "fundingAmount",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 113,
                    "contract": "contracts/seed/Seed.sol:Seed",
                    "label": "fee",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 115,
                    "contract": "contracts/seed/Seed.sol:Seed",
                    "label": "feeClaimed",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint32": {
                "encoding": "inplace",
                "label": "uint32",
                "numberOfBytes": "4"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/seed/SeedFactory.sol": {
        "SeedFactory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newSeed",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "beneficiary",
                  "type": "address"
                }
              ],
              "name": "SeedCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_beneficiary",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_admin",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "_tokens",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_softHardThresholds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256",
                  "name": "_price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_startTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint32[]",
                  "name": "_vestingDurationAndCliff",
                  "type": "uint32[]"
                },
                {
                  "internalType": "bool",
                  "name": "_permissionedSeed",
                  "type": "bool"
                },
                {
                  "internalType": "uint8",
                  "name": "_fee",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes",
                  "name": "_metadata",
                  "type": "bytes"
                }
              ],
              "name": "deploySeed",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "masterCopy",
              "outputs": [
                {
                  "internalType": "contract Seed",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "contract Seed",
                  "name": "_masterCopy",
                  "type": "address"
                }
              ],
              "name": "setMasterCopy",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Enable PrimeDAO governance to create new Seed contracts.",
            "kind": "dev",
            "methods": {
              "deploySeed(address,address,address[],uint256[],uint256,uint256,uint256,uint32[],bool,uint8,bytes)": {
                "details": "Deploys Seed contract.",
                "params": {
                  "_admin": "The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.",
                  "_beneficiary": "The address that recieves fees.",
                  "_endTime": "Distribution end time in unix timecode.",
                  "_fee": "Success fee expressed in Wei as a % (e.g. 2 = 2% fee)",
                  "_metadata": "Seed contract metadata, that is IPFS URI",
                  "_permissionedSeed": "Set to true if only whitelisted adresses are allowed to participate.",
                  "_price": "1 Funding Token = _price amount of Seed Token.",
                  "_softHardThresholds": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
                  "_startTime": "Distribution start time in unix timecode.",
                  "_tokens": "Array containing two params: - The address of the seed token being distributed.                                         - The address of the funding token being exchanged for seed token.",
                  "_vestingDurationAndCliff": "Array containing two params: - Vesting period duration in days. - Cliff duration in days."
                }
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "setMasterCopy(address)": {
                "details": "Set Seed contract which works as a base for clones.",
                "params": {
                  "_masterCopy": "The address of the new Seed basis."
                }
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "title": "PrimeDAO Seed Factory",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610b43806100616000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634a7eb3c214610067578063715018a6146100965780638da5cb5b146100a0578063a619486e146100b1578063cf497e6c146100c4578063f2fde38b146100d7575b600080fd5b61007a6100753660046107f4565b6100ea565b6040516001600160a01b03909116815260200160405180910390f35b61009e610385565b005b6000546001600160a01b031661007a565b60015461007a906001600160a01b031681565b61009e6100d23660046107d1565b6103f9565b61009e6100e53660046107d1565b6104b6565b600080546001600160a01b0316331461011e5760405162461bcd60e51b815260040161011590610a55565b60405180910390fd5b6001546001600160a01b031661018d5760405162461bcd60e51b815260206004820152602e60248201527f53656564466163746f72793a206d6173746572636f70792063616e6e6f74206260448201526d65207a65726f206164647265737360901b6064820152608401610115565b84516002146102045760405162461bcd60e51b815260206004820152603c60248201527f53656564466163746f72793a204861736e27742070726f766964656420626f7460448201527f682076657374696e67206475726174696f6e20616e6420636c696666000000006064820152608401610115565b60015460009061021c906001600160a01b03166105a0565b60405163fc582d4160e01b81529091506001600160a01b0382169063fc582d419061024b908690600401610a02565b600060405180830381600087803b15801561026557600080fd5b505af1158015610279573d6000803e3d6000fd5b50505050806001600160a01b031663d80393648e8e8e8e8e8e8e8e6000815181106102b457634e487b7160e01b600052603260045260246000fd5b60200260200101518f6001815181106102dd57634e487b7160e01b600052603260045260246000fd5b60200260200101518f8f6040518c63ffffffff1660e01b815260040161030d9b9a9998979695949392919061093f565b600060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b50506040513392506001600160a01b03841691507f23fea745ec0ebbc17cc138cc8d1baca7bde3ce83b1fd6d5e1de583961586363990600090a39c9b505050505050505050505050565b6000546001600160a01b031633146103af5760405162461bcd60e51b815260040161011590610a55565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104235760405162461bcd60e51b815260040161011590610a55565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152603260248201527f53656564466163746f72793a206e6577206d6173746572636f70792063616e6e6044820152716f74206265207a65726f206164647265737360701b6064820152608401610115565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104e05760405162461bcd60e51b815260040161011590610a55565b6001600160a01b0381166105455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610115565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b80356105fd81610af5565b919050565b600082601f830112610612578081fd5b8135602061062761062283610abb565b610a8a565b80838252828201915082860187848660051b8901011115610646578586fd5b855b8581101561066d57813561065b81610af5565b84529284019290840190600101610648565b5090979650505050505050565b600082601f83011261068a578081fd5b8135602061069a61062283610abb565b80838252828201915082860187848660051b89010111156106b9578586fd5b855b8581101561066d578135845292840192908401906001016106bb565b600082601f8301126106e7578081fd5b813560206106f761062283610abb565b80838252828201915082860187848660051b8901011115610716578586fd5b855b8581101561066d57813563ffffffff81168114610733578788fd5b84529284019290840190600101610718565b803580151581146105fd57600080fd5b600082601f830112610765578081fd5b813567ffffffffffffffff81111561077f5761077f610adf565b610792601f8201601f1916602001610a8a565b8181528460208386010111156107a6578283fd5b816020850160208301379081016020019190915292915050565b803560ff811681146105fd57600080fd5b6000602082840312156107e2578081fd5b81356107ed81610af5565b9392505050565b60008060008060008060008060008060006101608c8e031215610815578687fd5b61081e8c6105f2565b9a5061082c60208d016105f2565b995067ffffffffffffffff8060408e01351115610847578788fd5b6108578e60408f01358f01610602565b99508060608e01351115610869578788fd5b6108798e60608f01358f0161067a565b985060808d0135975060a08d0135965060c08d013595508060e08e013511156108a0578485fd5b6108b08e60e08f01358f016106d7565b94506108bf6101008e01610745565b93506108ce6101208e016107c0565b9250806101408e013511156108e1578182fd5b506108f38d6101408e01358e01610755565b90509295989b509295989b9093969950565b6000815180845260208085019450808401835b8381101561093457815187529582019590820190600101610918565b509495945050505050565b6000610160820160018060a01b03808f168452808e1660208501526101606040850152818d518084526101808601915060208f019350845b818110156109975784518416835260209485019490920191600101610977565b505084810360608601526109ab818e610905565b93505050508860808301528760a08301528660c08301526109d460e083018763ffffffff169052565b63ffffffff9490941661010082015291151561012083015260ff166101409091015298975050505050505050565b6000602080835283518082850152825b81811015610a2e57858101830151858201604001528201610a12565b81811115610a3f5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715610ab357610ab3610adf565b604052919050565b600067ffffffffffffffff821115610ad557610ad5610adf565b5060051b60200190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b0a57600080fd5b5056fea26469706673582212204cbc32062bae14198f059390f02575e6ae72665956fa2991ba5da5bacd6d567264736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0xB43 DUP1 PUSH2 0x61 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A7EB3C2 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA619486E EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xCF497E6C EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x385 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A206D6173746572636F70792063616E6E6F742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x65207A65726F2061646472657373 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x115 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x2 EQ PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A204861736E27742070726F766964656420626F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x682076657374696E67206475726174696F6E20616E6420636C69666600000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x115 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x21C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFC582D41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xFC582D41 SWAP1 PUSH2 0x24B SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x279 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD8039364 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 DUP16 PUSH1 0x40 MLOAD DUP13 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 POP PUSH32 0x23FEA745EC0EBBC17CC138CC8D1BACA7BDE3CE83B1FD6D5E1DE5839615863639 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A206E6577206D6173746572636F70792063616E6E PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6F74206265207A65726F2061646472657373 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x115 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x115 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x5FD DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x612 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x627 PUSH2 0x622 DUP4 PUSH2 0xABB JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x646 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x66D JUMPI DUP2 CALLDATALOAD PUSH2 0x65B DUP2 PUSH2 0xAF5 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x648 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x68A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x69A PUSH2 0x622 DUP4 PUSH2 0xABB JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x6B9 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x66D JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6E7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x6F7 PUSH2 0x622 DUP4 PUSH2 0xABB JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x716 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x66D JUMPI DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x733 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x718 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x765 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0xADF JUMP JUMPDEST PUSH2 0x792 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xA8A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x7A6 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7ED DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x815 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x81E DUP13 PUSH2 0x5F2 JUMP JUMPDEST SWAP11 POP PUSH2 0x82C PUSH1 0x20 DUP14 ADD PUSH2 0x5F2 JUMP JUMPDEST SWAP10 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x40 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x847 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x857 DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x602 JUMP JUMPDEST SWAP10 POP DUP1 PUSH1 0x60 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x869 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x879 DUP15 PUSH1 0x60 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x67A JUMP JUMPDEST SWAP9 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD CALLDATALOAD SWAP6 POP DUP1 PUSH1 0xE0 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x8A0 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x8B0 DUP15 PUSH1 0xE0 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP5 POP PUSH2 0x8BF PUSH2 0x100 DUP15 ADD PUSH2 0x745 JUMP JUMPDEST SWAP4 POP PUSH2 0x8CE PUSH2 0x120 DUP15 ADD PUSH2 0x7C0 JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x140 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x8E1 JUMPI DUP2 DUP3 REVERT JUMPDEST POP PUSH2 0x8F3 DUP14 PUSH2 0x140 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x755 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x934 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x918 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND DUP5 MSTORE DUP1 DUP15 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x160 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP14 MLOAD DUP1 DUP5 MSTORE PUSH2 0x180 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP16 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x997 JUMPI DUP5 MLOAD DUP5 AND DUP4 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x977 JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x9AB DUP2 DUP15 PUSH2 0x905 JUMP JUMPDEST SWAP4 POP POP POP POP DUP9 PUSH1 0x80 DUP4 ADD MSTORE DUP8 PUSH1 0xA0 DUP4 ADD MSTORE DUP7 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x9D4 PUSH1 0xE0 DUP4 ADD DUP8 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH2 0x100 DUP3 ADD MSTORE SWAP2 ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH2 0x140 SWAP1 SWAP2 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA2E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA12 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA3F JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAB3 JUMPI PUSH2 0xAB3 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAD5 JUMPI PUSH2 0xAD5 PUSH2 0xADF JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xBC ORIGIN MOD 0x2B 0xAE EQ NOT DUP16 SDIV SWAP4 SWAP1 CREATE 0x25 PUSH22 0xE6AE72665956FA2991BA5DA5BACD6D567264736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1594:3607:1:-:0;;;;;;;;;;;;-1:-1:-1;867:17:3;909:18;;-1:-1:-1;;;;;;909:18:3;665:10:5;909:18:3;;;;;942:43;;665:10:5;;;;942:43:3;;867:17;;942:43;842:150;1594:3607:1;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:11448:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:85:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "136:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:31:6"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:6",
                            "type": ""
                          }
                        ],
                        "src": "14:134:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "217:704:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "266:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "275:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "282:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "268:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "268:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "268:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "245:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "253:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "241:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "241:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "260:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "237:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "237:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "230:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "230:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "227:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "299:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "322:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "309:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "309:20:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "303:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "338:14:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "348:4:6",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "342:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "361:71:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "428:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_address_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "388:39:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "388:43:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "372:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "372:60:6"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "365:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "441:16:6",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "454:3:6"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "445:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "473:3:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "478:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "466:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "466:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "466:15:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "490:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "501:3:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "506:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "497:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "497:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "490:3:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "518:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "533:6:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "541:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "529:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "529:15:6"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "522:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "598:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "607:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "614:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "600:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "600:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "600:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "567:6:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "579:1:6",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "582:2:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "575:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "575:10:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "563:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "563:23:6"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "588:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "559:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "559:32:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "593:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "556:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "556:41:6"
                              },
                              "nodeType": "YulIf",
                              "src": "553:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "631:14:6",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "640:5:6"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "635:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "699:193:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "713:30:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "739:3:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "726:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "726:17:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulTypedName",
                                        "src": "717:5:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "781:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "validator_revert_address",
                                        "nodeType": "YulIdentifier",
                                        "src": "756:24:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "756:31:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "756:31:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "807:3:6"
                                        },
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "812:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "800:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "800:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "800:18:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "831:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "842:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "847:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "838:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "838:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "831:3:6"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "863:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "874:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "879:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "870:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "870:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "863:3:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "665:1:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "668:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "662:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "662:9:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "672:18:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "674:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "683:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "686:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "679:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "679:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "674:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "658:3:6",
                                "statements": []
                              },
                              "src": "654:238:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "901:14:6",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "910:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "901:5:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_address_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "191:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "199:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "207:5:6",
                            "type": ""
                          }
                        ],
                        "src": "153:768:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "990:629:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1039:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1048:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1055:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1041:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1041:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1041:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1018:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1026:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1014:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1014:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1033:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1010:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1010:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1003:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1003:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1000:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1072:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1095:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1082:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1082:20:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1076:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1111:14:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1121:4:6",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1115:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1134:71:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1201:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_address_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "1161:39:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1161:43:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1145:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1145:60:6"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "1138:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1214:16:6",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "1227:3:6"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1218:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1246:3:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1251:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1239:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1239:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1239:15:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1263:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1274:3:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1279:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1270:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1270:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1263:3:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1291:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1306:6:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1314:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1302:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1302:15:6"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "1295:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1371:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1380:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1387:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1373:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1373:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1373:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1340:6:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1352:1:6",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "1355:2:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "1348:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1348:10:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1336:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1336:23:6"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "1361:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1332:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1332:32:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "1366:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1329:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1329:41:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1326:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1404:14:6",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "1413:5:6"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1408:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1472:118:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1493:3:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "1511:3:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1498:12:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1498:17:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1486:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1486:30:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1486:30:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1529:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1540:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1545:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1536:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1536:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "1529:3:6"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1561:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "1572:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1577:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1568:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1568:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1561:3:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1438:1:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1441:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1435:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1435:9:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1445:18:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1447:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1456:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1459:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1452:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1452:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1447:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1431:3:6",
                                "statements": []
                              },
                              "src": "1427:163:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1599:14:6",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "1608:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1599:5:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_uint256_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "964:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "972:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "980:5:6",
                            "type": ""
                          }
                        ],
                        "src": "926:693:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1687:742:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1736:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1745:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "1752:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1738:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1738:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1738:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1715:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1723:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1711:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1711:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "1730:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1707:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1707:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1700:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1700:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1697:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1769:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1792:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1779:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1779:20:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1773:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1808:14:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1818:4:6",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1812:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1831:71:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1898:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_address_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "1858:39:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1858:43:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1842:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1842:60:6"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "1835:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1911:16:6",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "1924:3:6"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1915:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1943:3:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1948:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1936:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1936:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1936:15:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1960:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1971:3:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1976:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1967:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1967:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1960:3:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1988:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2003:6:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2011:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1999:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1999:15:6"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "1992:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2068:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "2077:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "2084:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2070:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2070:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2070:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2037:6:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2049:1:6",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "2052:2:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "2045:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2045:10:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2033:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2033:23:6"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "2058:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2029:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2029:32:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2063:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2026:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2026:41:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2023:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2101:14:6",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "2110:5:6"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2105:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2169:231:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2183:30:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "2209:3:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2196:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2196:17:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulTypedName",
                                        "src": "2187:5:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2271:24:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "array",
                                                "nodeType": "YulIdentifier",
                                                "src": "2280:5:6"
                                              },
                                              {
                                                "name": "array",
                                                "nodeType": "YulIdentifier",
                                                "src": "2287:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "2273:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2273:20:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2273:20:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "value",
                                              "nodeType": "YulIdentifier",
                                              "src": "2239:5:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2250:5:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2257:10:6",
                                                  "type": "",
                                                  "value": "0xffffffff"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "and",
                                                "nodeType": "YulIdentifier",
                                                "src": "2246:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2246:22:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "eq",
                                            "nodeType": "YulIdentifier",
                                            "src": "2236:2:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2236:33:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "2229:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2229:41:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "2226:2:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "2315:3:6"
                                        },
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2320:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2308:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2308:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2308:18:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2339:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "2350:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2355:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2346:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2346:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2339:3:6"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2371:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "2382:3:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2387:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2378:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2378:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "2371:3:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2135:1:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2138:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2132:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2132:9:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2142:18:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2144:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2153:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2156:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2149:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2149:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2144:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2128:3:6",
                                "statements": []
                              },
                              "src": "2124:276:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2409:14:6",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "2418:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "2409:5:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_array_uint32_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "1661:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "1669:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "1677:5:6",
                            "type": ""
                          }
                        ],
                        "src": "1624:805:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2480:114:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2490:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2512:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2499:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2499:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "2490:5:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2572:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2581:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2584:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2574:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2574:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2574:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2541:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "2562:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "2555:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2555:13:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2548:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2548:21:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2538:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2538:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2531:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2531:40:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2528:2:6"
                            }
                          ]
                        },
                        "name": "abi_decode_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2459:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2470:5:6",
                            "type": ""
                          }
                        ],
                        "src": "2434:160:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2651:498:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2700:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "2709:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "2716:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2702:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2702:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2702:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2679:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2687:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2675:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2675:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "2694:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2671:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2671:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2664:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2664:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2661:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2733:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2756:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2743:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2743:20:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2737:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2802:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "2804:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2804:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2804:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2778:2:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2782:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2775:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2775:26:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2772:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2833:70:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "2876:2:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2880:4:6",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2872:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2872:13:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2891:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "2887:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2887:7:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2868:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2868:27:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2897:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2864:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2864:38:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "2848:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2848:55:6"
                              },
                              "variables": [
                                {
                                  "name": "array_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2837:7:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2919:7:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2928:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2912:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2912:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2912:19:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2979:24:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "2988:5:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "2995:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2981:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2981:20:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2981:20:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2954:6:6"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "2962:2:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2950:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2950:15:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2967:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2946:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2946:26:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "2974:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2943:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2943:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2940:2:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "array_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3029:7:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3038:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3025:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3025:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3049:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3057:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3045:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3045:17:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3064:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "3012:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3012:55:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3012:55:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "array_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "3091:7:6"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "3100:2:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3087:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3087:16:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3105:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3083:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3083:27:6"
                                  },
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "3112:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3076:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3076:42:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3076:42:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3127:16:6",
                              "value": {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "3136:7:6"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "3127:5:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "2625:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "2633:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "2641:5:6",
                            "type": ""
                          }
                        ],
                        "src": "2599:550:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3201:109:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3211:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3233:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3220:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3220:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3211:5:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3288:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3297:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3300:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3290:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3290:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3290:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3262:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3273:5:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3280:4:6",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3269:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3269:16:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3259:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3259:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3252:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3252:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3249:2:6"
                            }
                          ]
                        },
                        "name": "abi_decode_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3180:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3191:5:6",
                            "type": ""
                          }
                        ],
                        "src": "3154:156:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3385:187:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3431:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3440:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3448:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3433:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3433:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3433:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3406:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3415:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3402:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3402:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3427:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3398:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3398:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3395:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3466:36:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3492:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3479:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3479:23:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3470:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3536:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3511:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3511:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3511:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3551:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3561:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3551:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3351:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3362:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3374:6:6",
                            "type": ""
                          }
                        ],
                        "src": "3315:257:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3896:1222:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3943:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3952:6:6"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "3960:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3945:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3945:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3945:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3917:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3926:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3913:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3913:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3938:3:6",
                                    "type": "",
                                    "value": "352"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3909:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3909:33:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3906:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3978:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4007:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3988:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3988:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3978:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4026:48:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4059:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4070:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4055:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4055:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4036:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4036:38:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4026:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4083:28:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4093:18:6",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4087:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4164:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "4173:6:6"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "4181:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4166:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4166:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4166:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4143:9:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4154:2:6",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4139:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4139:18:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4126:12:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4126:32:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4160:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4123:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4123:40:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4120:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4199:97:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4242:9:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "4270:9:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4281:2:6",
                                                "type": "",
                                                "value": "64"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4266:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4266:18:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "calldataload",
                                          "nodeType": "YulIdentifier",
                                          "src": "4253:12:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4253:32:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4238:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4238:48:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4288:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_address_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "4209:28:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4209:87:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "4199:6:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4349:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "4358:6:6"
                                        },
                                        {
                                          "name": "value4",
                                          "nodeType": "YulIdentifier",
                                          "src": "4366:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4351:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4351:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4351:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4328:9:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4339:2:6",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4324:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4324:18:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4311:12:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4311:32:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4345:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4308:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4308:40:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4305:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4384:97:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4427:9:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "4455:9:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4466:2:6",
                                                "type": "",
                                                "value": "96"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4451:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4451:18:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "calldataload",
                                          "nodeType": "YulIdentifier",
                                          "src": "4438:12:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4438:32:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4423:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4423:48:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4473:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint256_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "4394:28:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4394:87:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "4384:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4490:43:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4517:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4528:3:6",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4513:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4513:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4500:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4500:33:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "4490:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4542:43:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4569:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4580:3:6",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4565:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4565:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4552:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4552:33:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value5",
                                  "nodeType": "YulIdentifier",
                                  "src": "4542:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4594:43:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4621:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4632:3:6",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4617:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4617:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4604:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4604:33:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value6",
                                  "nodeType": "YulIdentifier",
                                  "src": "4594:6:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4691:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4700:6:6"
                                        },
                                        {
                                          "name": "value7",
                                          "nodeType": "YulIdentifier",
                                          "src": "4708:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4693:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4693:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4693:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4669:9:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4680:3:6",
                                            "type": "",
                                            "value": "224"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4665:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4665:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4652:12:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4652:33:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4687:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4649:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4649:41:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4646:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4726:97:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4768:9:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "4796:9:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4807:3:6",
                                                "type": "",
                                                "value": "224"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4792:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4792:19:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "calldataload",
                                          "nodeType": "YulIdentifier",
                                          "src": "4779:12:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4779:33:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4764:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4764:49:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4815:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_array_uint32_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "4736:27:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4736:87:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value7",
                                  "nodeType": "YulIdentifier",
                                  "src": "4726:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4832:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4862:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4873:3:6",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4858:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4858:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "4842:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4842:36:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4832:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4887:47:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4918:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4929:3:6",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4914:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4914:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "4897:16:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4897:37:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value9",
                                  "nodeType": "YulIdentifier",
                                  "src": "4887:6:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4988:28:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value10",
                                          "nodeType": "YulIdentifier",
                                          "src": "4997:7:6"
                                        },
                                        {
                                          "name": "value10",
                                          "nodeType": "YulIdentifier",
                                          "src": "5006:7:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4990:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4990:24:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4990:24:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "4966:9:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4977:3:6",
                                            "type": "",
                                            "value": "320"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4962:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4962:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "calldataload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4949:12:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4949:33:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4984:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4946:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4946:41:6"
                              },
                              "nodeType": "YulIf",
                              "src": "4943:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5025:87:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5057:9:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "headStart",
                                                "nodeType": "YulIdentifier",
                                                "src": "5085:9:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5096:3:6",
                                                "type": "",
                                                "value": "320"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "5081:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5081:19:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "calldataload",
                                          "nodeType": "YulIdentifier",
                                          "src": "5068:12:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5068:33:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5053:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5053:49:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5104:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "5036:16:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5036:76:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value10",
                                  "nodeType": "YulIdentifier",
                                  "src": "5025:7:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256t_uint256t_array$_t_uint32_$dyn_memory_ptrt_boolt_uint8t_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3781:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3792:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3804:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3812:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "3820:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "3828:6:6",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "3836:6:6",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "3844:6:6",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "3852:6:6",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "3860:6:6",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "3868:6:6",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "3876:6:6",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "3884:7:6",
                            "type": ""
                          }
                        ],
                        "src": "3577:1541:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5206:187:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5252:26:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5261:6:6"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5269:6:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5254:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5254:22:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5254:22:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5227:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5236:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5223:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5223:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5248:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5219:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5219:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "5216:2:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5287:36:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5313:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5300:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5300:23:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "5291:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5357:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "5332:24:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5332:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5332:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5372:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5382:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5372:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_Seed_$1142",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5172:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5183:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5195:6:6",
                            "type": ""
                          }
                        ],
                        "src": "5123:270:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5459:376:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5469:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5489:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5483:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5483:12:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "5473:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5511:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5516:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5504:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5504:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5504:19:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5532:14:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5542:4:6",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5536:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5555:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5566:3:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5571:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5562:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5562:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5555:3:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5583:28:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5601:5:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5608:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5597:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5597:14:6"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "5587:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5620:12:6",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "5629:3:6"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "5624:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5690:120:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5711:3:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "srcPtr",
                                              "nodeType": "YulIdentifier",
                                              "src": "5722:6:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5716:5:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5716:13:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5704:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5704:26:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5704:26:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5743:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "5754:3:6"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5759:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5750:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5750:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "5743:3:6"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5775:25:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "5789:6:6"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5797:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5785:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5785:15:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "5775:6:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5652:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5655:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5649:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5649:13:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5663:18:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5665:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5674:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5677:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5670:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5670:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5665:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5645:3:6",
                                "statements": []
                              },
                              "src": "5641:169:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5819:10:6",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5826:3:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5819:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_array_uint256_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5436:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5443:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5451:3:6",
                            "type": ""
                          }
                        ],
                        "src": "5398:437:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5881:50:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5898:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "5917:5:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "5910:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5910:13:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "5903:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5903:21:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5891:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5891:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5891:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5865:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5872:3:6",
                            "type": ""
                          }
                        ],
                        "src": "5840:91:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5979:51:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5996:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6005:5:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6012:10:6",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6001:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6001:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5989:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5989:35:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5989:35:6"
                            }
                          ]
                        },
                        "name": "abi_encode_uint32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5963:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5970:3:6",
                            "type": ""
                          }
                        ],
                        "src": "5936:94:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6077:33:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6086:3:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6095:5:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6102:4:6",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6091:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6091:16:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6079:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6079:29:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6079:29:6"
                            }
                          ]
                        },
                        "name": "abi_encode_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6061:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6068:3:6",
                            "type": ""
                          }
                        ],
                        "src": "6035:75:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6216:102:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6226:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6238:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6249:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6234:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6234:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6226:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6268:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6283:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6299:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6304:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "6295:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6295:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6308:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "6291:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6291:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6279:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6279:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6261:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6261:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6261:51:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6185:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6196:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6207:4:6",
                            "type": ""
                          }
                        ],
                        "src": "6115:203:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6791:1061:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6801:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6819:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6830:3:6",
                                    "type": "",
                                    "value": "352"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6815:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6815:19:6"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6805:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6843:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6861:3:6",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6866:1:6",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "6857:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6857:11:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6870:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6853:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6853:19:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6847:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6888:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "6903:6:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6911:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6899:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6899:15:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6881:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6881:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6881:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6935:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6946:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6931:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6931:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6955:6:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6963:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6951:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6951:15:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6924:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6924:43:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6924:43:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6987:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6998:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6983:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6983:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7003:3:6",
                                    "type": "",
                                    "value": "352"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6976:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6976:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6976:31:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7016:17:6",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "7027:6:6"
                              },
                              "variables": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulTypedName",
                                  "src": "7020:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7042:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7062:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7056:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7056:13:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7046:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7085:6:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7093:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7078:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7078:22:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7078:22:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7109:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7120:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7131:3:6",
                                    "type": "",
                                    "value": "384"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7116:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7116:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7109:3:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7144:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "7162:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7170:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7158:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7158:15:6"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "7148:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7182:13:6",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "7191:4:6"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "7186:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7253:129:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "7274:3:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "srcPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7289:6:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "7283:5:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "7283:13:6"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "7298:2:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "7279:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7279:22:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7267:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7267:35:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7267:35:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7315:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "7326:3:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7331:2:6",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7322:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7322:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7315:3:6"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7347:25:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7361:6:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7369:2:6",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7357:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7357:15:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7347:6:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "7215:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7218:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7212:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7212:13:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "7226:18:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7228:14:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "7237:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7240:1:6",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7233:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7233:9:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "7228:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "7208:3:6",
                                "statements": []
                              },
                              "src": "7204:178:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7402:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7413:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7398:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7398:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7422:3:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7427:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7418:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7418:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7391:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7391:47:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7391:47:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7447:49:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "7484:6:6"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7492:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_uint256_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "7455:28:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7455:41:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7447:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7516:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7527:3:6",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7512:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7512:19:6"
                                  },
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "7533:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7505:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7505:35:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7505:35:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7560:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7571:3:6",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7556:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7556:19:6"
                                  },
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "7577:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7549:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7549:35:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7549:35:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7604:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7615:3:6",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7600:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7600:19:6"
                                  },
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "7621:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7593:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7593:35:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7593:35:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "7655:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7667:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7678:3:6",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7663:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7663:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "7637:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7637:46:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7637:46:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "7710:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7722:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7733:3:6",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7718:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7718:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_uint32",
                                  "nodeType": "YulIdentifier",
                                  "src": "7692:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7692:46:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7692:46:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "7763:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7775:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7786:3:6",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7771:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7771:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "7747:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7747:44:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7747:44:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value10",
                                    "nodeType": "YulIdentifier",
                                    "src": "7817:7:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7830:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7841:3:6",
                                        "type": "",
                                        "value": "320"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7826:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7826:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "7800:16:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7800:46:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7800:46:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint32_t_uint32_t_bool_t_uint8__to_t_address_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint32_t_uint32_t_bool_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6679:9:6",
                            "type": ""
                          },
                          {
                            "name": "value10",
                            "nodeType": "YulTypedName",
                            "src": "6690:7:6",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "6699:6:6",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "6707:6:6",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "6715:6:6",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "6723:6:6",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "6731:6:6",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "6739:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "6747:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "6755:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6763:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6771:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6782:4:6",
                            "type": ""
                          }
                        ],
                        "src": "6323:1529:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7976:482:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7986:12:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7996:2:6",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7990:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8014:9:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8025:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8007:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8007:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8007:21:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8037:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8057:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8051:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8051:13:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "8041:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8084:9:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8095:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8080:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8080:18:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8100:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8073:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8073:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8073:34:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8116:13:6",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "8125:4:6"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "8120:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8188:90:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8217:9:6"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8228:1:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "8213:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "8213:17:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "8232:2:6",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "8209:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8209:26:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8251:6:6"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "8259:1:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "8247:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "8247:14:6"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8263:2:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "8243:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "8243:23:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "8237:5:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8237:30:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8202:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8202:66:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8202:66:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "8149:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8152:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8146:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8146:13:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "8160:19:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8162:15:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "8171:1:6"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "8174:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "8167:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8167:10:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "8162:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "8142:3:6",
                                "statements": []
                              },
                              "src": "8138:140:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8312:69:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8341:9:6"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "8352:6:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "8337:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "8337:22:6"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "8361:2:6",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "8333:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8333:31:6"
                                        },
                                        {
                                          "name": "tail",
                                          "nodeType": "YulIdentifier",
                                          "src": "8366:4:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8326:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8326:45:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8326:45:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "8293:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8296:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8290:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8290:13:6"
                              },
                              "nodeType": "YulIf",
                              "src": "8287:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8390:62:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8406:9:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "8425:6:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8433:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "8421:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8421:15:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8442:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "8438:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8438:7:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "8417:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8417:29:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8402:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8402:45:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8449:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8398:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8398:54:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8390:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7945:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7956:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7967:4:6",
                            "type": ""
                          }
                        ],
                        "src": "7857:601:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8577:102:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8587:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8599:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8610:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8595:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8595:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8587:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8629:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8644:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8660:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8665:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "8656:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8656:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8669:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "8652:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8652:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8640:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8640:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8622:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8622:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8622:51:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_Seed_$1142__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8546:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8557:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8568:4:6",
                            "type": ""
                          }
                        ],
                        "src": "8463:216:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8858:236:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8875:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8886:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8868:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8868:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8868:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8909:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8920:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8905:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8905:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8925:2:6",
                                    "type": "",
                                    "value": "46"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8898:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8898:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8898:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8948:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8959:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8944:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8944:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "8964:34:6",
                                    "type": "",
                                    "value": "SeedFactory: mastercopy cannot b"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8937:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8937:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8937:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9019:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9030:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9015:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9015:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9035:16:6",
                                    "type": "",
                                    "value": "e zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9008:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9008:44:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9008:44:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9061:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9073:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9084:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9069:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9069:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9061:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_1d200676b9be04b72c45c6fec23dc08db2353d6f38857aa1673784dca7e20ffa__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8835:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8849:4:6",
                            "type": ""
                          }
                        ],
                        "src": "8684:410:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9273:228:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9290:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9301:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9283:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9283:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9283:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9324:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9335:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9320:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9320:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9340:2:6",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9313:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9313:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9313:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9363:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9374:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9359:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9359:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9379:34:6",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9352:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9352:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9352:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9434:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9445:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9430:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9430:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9450:8:6",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9423:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9423:36:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9423:36:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9468:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9480:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9491:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9476:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9476:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9468:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9250:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9264:4:6",
                            "type": ""
                          }
                        ],
                        "src": "9099:402:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9680:182:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9697:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9708:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9690:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9690:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9690:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9731:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9742:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9727:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9727:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9747:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9720:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9720:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9720:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9770:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9781:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9766:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9766:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9786:34:6",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9759:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9759:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9759:62:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9830:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9842:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9853:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9838:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9838:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9830:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9657:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9671:4:6",
                            "type": ""
                          }
                        ],
                        "src": "9506:356:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10041:240:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10058:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10069:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10051:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10051:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10051:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10092:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10103:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10088:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10088:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10108:2:6",
                                    "type": "",
                                    "value": "50"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10081:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10081:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10081:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10131:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10142:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10127:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10127:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10147:34:6",
                                    "type": "",
                                    "value": "SeedFactory: new mastercopy cann"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10120:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10120:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10120:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10202:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10213:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10198:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10198:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10218:20:6",
                                    "type": "",
                                    "value": "ot be zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10191:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10191:48:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10191:48:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10248:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10260:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10271:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10256:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10256:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10248:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_be24ab5112e8e639e8285f1a6a18268a6b7944dc5b1ca17b6a6fa5299a654c61__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10018:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10032:4:6",
                            "type": ""
                          }
                        ],
                        "src": "9867:414:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10460:250:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10477:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10488:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10470:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10470:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10470:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10511:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10522:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10507:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10507:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10527:2:6",
                                    "type": "",
                                    "value": "60"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10500:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10500:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10500:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10550:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10561:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10546:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10546:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10566:34:6",
                                    "type": "",
                                    "value": "SeedFactory: Hasn't provided bot"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10539:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10539:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10539:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10621:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10632:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10617:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10617:18:6"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10637:30:6",
                                    "type": "",
                                    "value": "h vesting duration and cliff"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10610:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10610:58:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10610:58:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10677:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10689:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10700:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10685:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10685:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10677:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f9e1acc34705ed760bb539d2dd0e9ca091c37d70263869adbe440563acd80b15__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10437:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10451:4:6",
                            "type": ""
                          }
                        ],
                        "src": "10286:424:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10760:230:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10770:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10786:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10780:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10780:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "10770:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10798:58:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10820:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "size",
                                            "nodeType": "YulIdentifier",
                                            "src": "10836:4:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10842:2:6",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "10832:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10832:13:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10851:2:6",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "10847:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10847:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "10828:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10828:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10816:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10816:40:6"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "10802:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10931:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "10933:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10933:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10933:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "10874:10:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10886:18:6",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "10871:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10871:34:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "10910:10:6"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "10922:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "10907:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10907:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "10868:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10868:62:6"
                              },
                              "nodeType": "YulIf",
                              "src": "10865:2:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10969:2:6",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10973:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10962:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10962:22:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10962:22:6"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "10740:4:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "10749:6:6",
                            "type": ""
                          }
                        ],
                        "src": "10715:275:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11064:114:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11108:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "11110:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11110:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11110:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "11080:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11088:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11077:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11077:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "11074:2:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11139:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11155:1:6",
                                        "type": "",
                                        "value": "5"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "11158:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11151:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11151:14:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11167:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11147:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11147:25:6"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "11139:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_array_address_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "11044:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "11055:4:6",
                            "type": ""
                          }
                        ],
                        "src": "10995:183:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11215:95:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11232:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11239:3:6",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11244:10:6",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11235:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11235:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11225:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11225:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11225:31:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11272:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11275:4:6",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11265:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11265:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11265:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11296:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11299:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "11289:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11289:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11289:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "11183:127:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11360:86:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11424:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11433:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11436:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "11426:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11426:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11426:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "11383:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "11394:5:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "11409:3:6",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "11414:1:6",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11405:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11405:11:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "11418:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "11401:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "11401:19:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "11390:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11390:31:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "11380:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11380:42:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "11373:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11373:50:6"
                              },
                              "nodeType": "YulIf",
                              "src": "11370:2:6"
                            }
                          ]
                        },
                        "name": "validator_revert_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "11349:5:6",
                            "type": ""
                          }
                        ],
                        "src": "11315:131:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_array_uint32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        if gt(add(add(offset, shl(5, _1)), _2), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let value := calldataload(src)\n            if iszero(eq(value, and(value, 0xffffffff))) { revert(array, array) }\n            mstore(dst, value)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_uint256t_uint256t_uint256t_array$_t_uint32_$dyn_memory_ptrt_boolt_uint8t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10\n    {\n        if slt(sub(dataEnd, headStart), 352) { revert(value4, value4) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(calldataload(add(headStart, 64)), _1) { revert(value4, value4) }\n        value2 := abi_decode_array_address_dyn(add(headStart, calldataload(add(headStart, 64))), dataEnd)\n        if gt(calldataload(add(headStart, 96)), _1) { revert(value4, value4) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, calldataload(add(headStart, 96))), dataEnd)\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n        if gt(calldataload(add(headStart, 224)), _1) { revert(value7, value7) }\n        value7 := abi_decode_array_uint32_dyn(add(headStart, calldataload(add(headStart, 224))), dataEnd)\n        value8 := abi_decode_bool(add(headStart, 256))\n        value9 := abi_decode_uint8(add(headStart, 288))\n        if gt(calldataload(add(headStart, 320)), _1) { revert(value10, value10) }\n        value10 := abi_decode_bytes(add(headStart, calldataload(add(headStart, 320))), dataEnd)\n    }\n    function abi_decode_tuple_t_contract$_Seed_$1142(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_uint32(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffff))\n    }\n    function abi_encode_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint32_t_uint32_t_bool_t_uint8__to_t_address_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint32_t_uint32_t_bool_t_uint8__fromStack_reversed(headStart, value10, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 352)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 352)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 384)\n        let srcPtr := add(value2, 32)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), _1))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        mstore(add(headStart, 96), sub(pos, headStart))\n        tail := abi_encode_array_uint256_dyn(value3, pos)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        abi_encode_uint32(value7, add(headStart, 224))\n        abi_encode_uint32(value8, add(headStart, 256))\n        abi_encode_bool(value9, add(headStart, 288))\n        abi_encode_uint8(value10, add(headStart, 320))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_contract$_Seed_$1142__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_1d200676b9be04b72c45c6fec23dc08db2353d6f38857aa1673784dca7e20ffa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"SeedFactory: mastercopy cannot b\")\n        mstore(add(headStart, 96), \"e zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_be24ab5112e8e639e8285f1a6a18268a6b7944dc5b1ca17b6a6fa5299a654c61__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"SeedFactory: new mastercopy cann\")\n        mstore(add(headStart, 96), \"ot be zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f9e1acc34705ed760bb539d2dd0e9ca091c37d70263869adbe440563acd80b15__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"SeedFactory: Hasn't provided bot\")\n        mstore(add(headStart, 96), \"h vesting duration and cliff\")\n        tail := add(headStart, 128)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100625760003560e01c80634a7eb3c214610067578063715018a6146100965780638da5cb5b146100a0578063a619486e146100b1578063cf497e6c146100c4578063f2fde38b146100d7575b600080fd5b61007a6100753660046107f4565b6100ea565b6040516001600160a01b03909116815260200160405180910390f35b61009e610385565b005b6000546001600160a01b031661007a565b60015461007a906001600160a01b031681565b61009e6100d23660046107d1565b6103f9565b61009e6100e53660046107d1565b6104b6565b600080546001600160a01b0316331461011e5760405162461bcd60e51b815260040161011590610a55565b60405180910390fd5b6001546001600160a01b031661018d5760405162461bcd60e51b815260206004820152602e60248201527f53656564466163746f72793a206d6173746572636f70792063616e6e6f74206260448201526d65207a65726f206164647265737360901b6064820152608401610115565b84516002146102045760405162461bcd60e51b815260206004820152603c60248201527f53656564466163746f72793a204861736e27742070726f766964656420626f7460448201527f682076657374696e67206475726174696f6e20616e6420636c696666000000006064820152608401610115565b60015460009061021c906001600160a01b03166105a0565b60405163fc582d4160e01b81529091506001600160a01b0382169063fc582d419061024b908690600401610a02565b600060405180830381600087803b15801561026557600080fd5b505af1158015610279573d6000803e3d6000fd5b50505050806001600160a01b031663d80393648e8e8e8e8e8e8e8e6000815181106102b457634e487b7160e01b600052603260045260246000fd5b60200260200101518f6001815181106102dd57634e487b7160e01b600052603260045260246000fd5b60200260200101518f8f6040518c63ffffffff1660e01b815260040161030d9b9a9998979695949392919061093f565b600060405180830381600087803b15801561032757600080fd5b505af115801561033b573d6000803e3d6000fd5b50506040513392506001600160a01b03841691507f23fea745ec0ebbc17cc138cc8d1baca7bde3ce83b1fd6d5e1de583961586363990600090a39c9b505050505050505050505050565b6000546001600160a01b031633146103af5760405162461bcd60e51b815260040161011590610a55565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146104235760405162461bcd60e51b815260040161011590610a55565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152603260248201527f53656564466163746f72793a206e6577206d6173746572636f70792063616e6e6044820152716f74206265207a65726f206164647265737360701b6064820152608401610115565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104e05760405162461bcd60e51b815260040161011590610a55565b6001600160a01b0381166105455760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610115565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000808260601b9050604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f0949350505050565b80356105fd81610af5565b919050565b600082601f830112610612578081fd5b8135602061062761062283610abb565b610a8a565b80838252828201915082860187848660051b8901011115610646578586fd5b855b8581101561066d57813561065b81610af5565b84529284019290840190600101610648565b5090979650505050505050565b600082601f83011261068a578081fd5b8135602061069a61062283610abb565b80838252828201915082860187848660051b89010111156106b9578586fd5b855b8581101561066d578135845292840192908401906001016106bb565b600082601f8301126106e7578081fd5b813560206106f761062283610abb565b80838252828201915082860187848660051b8901011115610716578586fd5b855b8581101561066d57813563ffffffff81168114610733578788fd5b84529284019290840190600101610718565b803580151581146105fd57600080fd5b600082601f830112610765578081fd5b813567ffffffffffffffff81111561077f5761077f610adf565b610792601f8201601f1916602001610a8a565b8181528460208386010111156107a6578283fd5b816020850160208301379081016020019190915292915050565b803560ff811681146105fd57600080fd5b6000602082840312156107e2578081fd5b81356107ed81610af5565b9392505050565b60008060008060008060008060008060006101608c8e031215610815578687fd5b61081e8c6105f2565b9a5061082c60208d016105f2565b995067ffffffffffffffff8060408e01351115610847578788fd5b6108578e60408f01358f01610602565b99508060608e01351115610869578788fd5b6108798e60608f01358f0161067a565b985060808d0135975060a08d0135965060c08d013595508060e08e013511156108a0578485fd5b6108b08e60e08f01358f016106d7565b94506108bf6101008e01610745565b93506108ce6101208e016107c0565b9250806101408e013511156108e1578182fd5b506108f38d6101408e01358e01610755565b90509295989b509295989b9093969950565b6000815180845260208085019450808401835b8381101561093457815187529582019590820190600101610918565b509495945050505050565b6000610160820160018060a01b03808f168452808e1660208501526101606040850152818d518084526101808601915060208f019350845b818110156109975784518416835260209485019490920191600101610977565b505084810360608601526109ab818e610905565b93505050508860808301528760a08301528660c08301526109d460e083018763ffffffff169052565b63ffffffff9490941661010082015291151561012083015260ff166101409091015298975050505050505050565b6000602080835283518082850152825b81811015610a2e57858101830151858201604001528201610a12565b81811115610a3f5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715610ab357610ab3610adf565b604052919050565b600067ffffffffffffffff821115610ad557610ad5610adf565b5060051b60200190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b0381168114610b0a57600080fd5b5056fea26469706673582212204cbc32062bae14198f059390f02575e6ae72665956fa2991ba5da5bacd6d567264736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A7EB3C2 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA619486E EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xCF497E6C EQ PUSH2 0xC4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xD7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F4 JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9E PUSH2 0x385 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xD2 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0x9E PUSH2 0xE5 CALLDATASIZE PUSH1 0x4 PUSH2 0x7D1 JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A206D6173746572636F70792063616E6E6F742062 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x65207A65726F2061646472657373 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x115 JUMP JUMPDEST DUP5 MLOAD PUSH1 0x2 EQ PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A204861736E27742070726F766964656420626F74 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x682076657374696E67206475726174696F6E20616E6420636C69666600000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x115 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x21C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFC582D41 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xFC582D41 SWAP1 PUSH2 0x24B SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0xA02 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x265 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x279 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD8039364 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 DUP15 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2B4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP16 DUP16 PUSH1 0x40 MLOAD DUP13 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP12 SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x93F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x33B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 POP PUSH32 0x23FEA745EC0EBBC17CC138CC8D1BACA7BDE3CE83B1FD6D5E1DE5839615863639 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP13 SWAP12 POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x423 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x494 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656564466163746F72793A206E6577206D6173746572636F70792063616E6E PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x6F74206265207A65726F2061646472657373 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x115 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP1 PUSH2 0xA55 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x545 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x115 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x60 SHL SWAP1 POP PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x5FD DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x612 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x627 PUSH2 0x622 DUP4 PUSH2 0xABB JUMP JUMPDEST PUSH2 0xA8A JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x646 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x66D JUMPI DUP2 CALLDATALOAD PUSH2 0x65B DUP2 PUSH2 0xAF5 JUMP JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x648 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x68A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x69A PUSH2 0x622 DUP4 PUSH2 0xABB JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x6B9 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x66D JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6E7 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x6F7 PUSH2 0x622 DUP4 PUSH2 0xABB JUMP JUMPDEST DUP1 DUP4 DUP3 MSTORE DUP3 DUP3 ADD SWAP2 POP DUP3 DUP7 ADD DUP8 DUP5 DUP7 PUSH1 0x5 SHL DUP10 ADD ADD GT ISZERO PUSH2 0x716 JUMPI DUP6 DUP7 REVERT JUMPDEST DUP6 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x66D JUMPI DUP2 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x733 JUMPI DUP8 DUP9 REVERT JUMPDEST DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x718 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x765 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0xADF JUMP JUMPDEST PUSH2 0x792 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0xA8A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x7A6 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E2 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7ED DUP2 PUSH2 0xAF5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x160 DUP13 DUP15 SUB SLT ISZERO PUSH2 0x815 JUMPI DUP7 DUP8 REVERT JUMPDEST PUSH2 0x81E DUP13 PUSH2 0x5F2 JUMP JUMPDEST SWAP11 POP PUSH2 0x82C PUSH1 0x20 DUP14 ADD PUSH2 0x5F2 JUMP JUMPDEST SWAP10 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x40 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x847 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x857 DUP15 PUSH1 0x40 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x602 JUMP JUMPDEST SWAP10 POP DUP1 PUSH1 0x60 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x869 JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x879 DUP15 PUSH1 0x60 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x67A JUMP JUMPDEST SWAP9 POP PUSH1 0x80 DUP14 ADD CALLDATALOAD SWAP8 POP PUSH1 0xA0 DUP14 ADD CALLDATALOAD SWAP7 POP PUSH1 0xC0 DUP14 ADD CALLDATALOAD SWAP6 POP DUP1 PUSH1 0xE0 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x8A0 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x8B0 DUP15 PUSH1 0xE0 DUP16 ADD CALLDATALOAD DUP16 ADD PUSH2 0x6D7 JUMP JUMPDEST SWAP5 POP PUSH2 0x8BF PUSH2 0x100 DUP15 ADD PUSH2 0x745 JUMP JUMPDEST SWAP4 POP PUSH2 0x8CE PUSH2 0x120 DUP15 ADD PUSH2 0x7C0 JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x140 DUP15 ADD CALLDATALOAD GT ISZERO PUSH2 0x8E1 JUMPI DUP2 DUP3 REVERT JUMPDEST POP PUSH2 0x8F3 DUP14 PUSH2 0x140 DUP15 ADD CALLDATALOAD DUP15 ADD PUSH2 0x755 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP12 POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP1 SWAP4 SWAP7 SWAP10 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x934 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x918 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP16 AND DUP5 MSTORE DUP1 DUP15 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x160 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP14 MLOAD DUP1 DUP5 MSTORE PUSH2 0x180 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP16 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x997 JUMPI DUP5 MLOAD DUP5 AND DUP4 MSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x977 JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x9AB DUP2 DUP15 PUSH2 0x905 JUMP JUMPDEST SWAP4 POP POP POP POP DUP9 PUSH1 0x80 DUP4 ADD MSTORE DUP8 PUSH1 0xA0 DUP4 ADD MSTORE DUP7 PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x9D4 PUSH1 0xE0 DUP4 ADD DUP8 PUSH4 0xFFFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP5 SWAP1 SWAP5 AND PUSH2 0x100 DUP3 ADD MSTORE SWAP2 ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xFF AND PUSH2 0x140 SWAP1 SWAP2 ADD MSTORE SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xA2E JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xA12 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xA3F JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xAB3 JUMPI PUSH2 0xAB3 PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xAD5 JUMPI PUSH2 0xAD5 PUSH2 0xADF JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xBC ORIGIN MOD 0x2B 0xAE EQ NOT DUP16 SDIV SWAP4 SWAP1 CREATE 0x25 PUSH22 0xE6AE72665956FA2991BA5DA5BACD6D567264736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1594:3607:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3902:1296;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;6279:32:6;;;6261:51;;6249:2;6234:18;3902:1296:1;;;;;;;1700:145:3;;;:::i;:::-;;1068:85;1114:7;1140:6;-1:-1:-1;;;;;1140:6:3;1068:85;;1649:22:1;;;;;-1:-1:-1;;;;;1649:22:1;;;1919:209;;;;;;:::i;:::-;;:::i;1994:240:3:-;;;;;;:::i;:::-;;:::i;3902:1296:1:-;4313:7;1140:6:3;;-1:-1:-1;;;;;1140:6:3;665:10:5;1280:23:3;1272:68;;;;-1:-1:-1;;;1272:68:3;;;;;;;:::i;:::-;;;;;;;;;4369:10:1::1;::::0;-1:-1:-1;;;;;4369:10:1::1;4353:92;;;::::0;-1:-1:-1;;;4353:92:1;;8886:2:6;4353:92:1::1;::::0;::::1;8868:21:6::0;8925:2;8905:18;;;8898:30;8964:34;8944:18;;;8937:62;-1:-1:-1;;;9015:18:6;;;9008:44;9069:19;;4353:92:1::1;8858:236:6::0;4353:92:1::1;4468:24;:31;4503:1;4468:36;4460:109;;;::::0;-1:-1:-1;;;4460:109:1;;10488:2:6;4460:109:1::1;::::0;::::1;10470:21:6::0;10527:2;10507:18;;;10500:30;10566:34;10546:18;;;10539:62;10637:30;10617:18;;;10610:58;10685:19;;4460:109:1::1;10460:250:6::0;4460:109:1::1;4657:10;::::0;4618:16:::1;::::0;4637:32:::1;::::0;-1:-1:-1;;;;;4657:10:1::1;4637:11;:32::i;:::-;4682:40;::::0;-1:-1:-1;;;4682:40:1;;4618:51;;-1:-1:-1;;;;;;4682:29:1;::::1;::::0;::::1;::::0;:40:::1;::::0;4712:9;;4682:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4763:8;-1:-1:-1::0;;;;;4758:25:1::1;;4798:12;4825:6;4846:7;4868:19;4902:6;4923:10;4948:8;4971:24;4996:1;4971:27;;;;;;-1:-1:-1::0;;;4971:27:1::1;;;;;;;;;;;;;;;5013:24;5038:1;5013:27;;;;;;-1:-1:-1::0;;;5013:27:1::1;;;;;;;;;;;;;;;5055:17;5087:4;4758:344;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5120:42:1::1;::::0;5151:10:::1;::::0;-1:-1:-1;;;;;;5120:42:1;::::1;::::0;-1:-1:-1;5120:42:1::1;::::0;;;::::1;5182:8:::0;3902:1296;-1:-1:-1;;;;;;;;;;;;3902:1296:1:o;1700:145:3:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:3;665:10:5;1280:23:3;1272:68;;;;-1:-1:-1;;;1272:68:3;;;;;;;:::i;:::-;1806:1:::1;1790:6:::0;;1769:40:::1;::::0;-1:-1:-1;;;;;1790:6:3;;::::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1836:1;1819:19:::0;;-1:-1:-1;;;;;;1819:19:3::1;::::0;;1700:145::o;1919:209:1:-;1114:7:3;1140:6;-1:-1:-1;;;;;1140:6:3;665:10:5;1280:23:3;1272:68;;;;-1:-1:-1;;;1272:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;1996:34:1;::::1;1988:97;;;::::0;-1:-1:-1;;;1988:97:1;;10069:2:6;1988:97:1::1;::::0;::::1;10051:21:6::0;10108:2;10088:18;;;10081:30;10147:34;10127:18;;;10120:62;-1:-1:-1;;;10198:18:6;;;10191:48;10256:19;;1988:97:1::1;10041:240:6::0;1988:97:1::1;2096:10;:24:::0;;-1:-1:-1;;;;;;2096:24:1::1;-1:-1:-1::0;;;;;2096:24:1;;;::::1;::::0;;;::::1;::::0;;1919:209::o;1994:240:3:-;1114:7;1140:6;-1:-1:-1;;;;;1140:6:3;665:10:5;1280:23:3;1272:68;;;;-1:-1:-1;;;1272:68:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:3;::::1;2074:73;;;::::0;-1:-1:-1;;;2074:73:3;;9301:2:6;2074:73:3::1;::::0;::::1;9283:21:6::0;9340:2;9320:18;;;9313:30;9379:34;9359:18;;;9352:62;-1:-1:-1;;;9430:18:6;;;9423:36;9476:19;;2074:73:3::1;9273:228:6::0;2074:73:3::1;2183:6;::::0;;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:3;;::::1;::::0;2183:6;::::1;::::0;2162:38:::1;::::0;::::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:3::1;-1:-1:-1::0;;;;;2210:17:3;;;::::1;::::0;;;::::1;::::0;;1994:240::o;1508:494:2:-;1563:14;1590:19;1620:6;1612:15;;1590:37;;1681:4;1675:11;-1:-1:-1;;;1707:5:2;1700:81;1820:11;1813:4;1806:5;1802:16;1795:37;-1:-1:-1;;;1864:4:2;1857:5;1853:16;1846:92;1979:4;1972:5;1969:1;1962:22;1952:32;1647:348;-1:-1:-1;;;;1647:348:2:o;14:134:6:-;82:20;;111:31;82:20;111:31;:::i;:::-;63:85;;;:::o;153:768::-;207:5;260:3;253:4;245:6;241:17;237:27;227:2;;282:5;275;268:20;227:2;322:6;309:20;348:4;372:60;388:43;428:2;388:43;:::i;:::-;372:60;:::i;:::-;454:3;478:2;473:3;466:15;506:2;501:3;497:12;490:19;;541:2;533:6;529:15;593:3;588:2;582;579:1;575:10;567:6;563:23;559:32;556:41;553:2;;;614:5;607;600:20;553:2;640:5;654:238;668:2;665:1;662:9;654:238;;;739:3;726:17;756:31;781:5;756:31;:::i;:::-;800:18;;838:12;;;;870;;;;686:1;679:9;654:238;;;-1:-1:-1;910:5:6;;217:704;-1:-1:-1;;;;;;;217:704:6:o;926:693::-;980:5;1033:3;1026:4;1018:6;1014:17;1010:27;1000:2;;1055:5;1048;1041:20;1000:2;1095:6;1082:20;1121:4;1145:60;1161:43;1201:2;1161:43;:::i;1145:60::-;1227:3;1251:2;1246:3;1239:15;1279:2;1274:3;1270:12;1263:19;;1314:2;1306:6;1302:15;1366:3;1361:2;1355;1352:1;1348:10;1340:6;1336:23;1332:32;1329:41;1326:2;;;1387:5;1380;1373:20;1326:2;1413:5;1427:163;1441:2;1438:1;1435:9;1427:163;;;1498:17;;1486:30;;1536:12;;;;1568;;;;1459:1;1452:9;1427:163;;1624:805;1677:5;1730:3;1723:4;1715:6;1711:17;1707:27;1697:2;;1752:5;1745;1738:20;1697:2;1792:6;1779:20;1818:4;1842:60;1858:43;1898:2;1858:43;:::i;1842:60::-;1924:3;1948:2;1943:3;1936:15;1976:2;1971:3;1967:12;1960:19;;2011:2;2003:6;1999:15;2063:3;2058:2;2052;2049:1;2045:10;2037:6;2033:23;2029:32;2026:41;2023:2;;;2084:5;2077;2070:20;2023:2;2110:5;2124:276;2138:2;2135:1;2132:9;2124:276;;;2209:3;2196:17;2257:10;2250:5;2246:22;2239:5;2236:33;2226:2;;2287:5;2280;2273:20;2226:2;2308:18;;2346:12;;;;2378;;;;2156:1;2149:9;2124:276;;2434:160;2499:20;;2555:13;;2548:21;2538:32;;2528:2;;2584:1;2581;2574:12;2599:550;2641:5;2694:3;2687:4;2679:6;2675:17;2671:27;2661:2;;2716:5;2709;2702:20;2661:2;2756:6;2743:20;2782:18;2778:2;2775:26;2772:2;;;2804:18;;:::i;:::-;2848:55;2891:2;2872:13;;-1:-1:-1;;2868:27:6;2897:4;2864:38;2848:55;:::i;:::-;2928:2;2919:7;2912:19;2974:3;2967:4;2962:2;2954:6;2950:15;2946:26;2943:35;2940:2;;;2995:5;2988;2981:20;2940:2;3064;3057:4;3049:6;3045:17;3038:4;3029:7;3025:18;3012:55;3087:16;;;3105:4;3083:27;3076:42;;;;3091:7;2651:498;-1:-1:-1;;2651:498:6:o;3154:156::-;3220:20;;3280:4;3269:16;;3259:27;;3249:2;;3300:1;3297;3290:12;3315:257;3374:6;3427:2;3415:9;3406:7;3402:23;3398:32;3395:2;;;3448:6;3440;3433:22;3395:2;3492:9;3479:23;3511:31;3536:5;3511:31;:::i;:::-;3561:5;3385:187;-1:-1:-1;;;3385:187:6:o;3577:1541::-;3804:6;3812;3820;3828;3836;3844;3852;3860;3868;3876;3884:7;3938:3;3926:9;3917:7;3913:23;3909:33;3906:2;;;3960:6;3952;3945:22;3906:2;3988:29;4007:9;3988:29;:::i;:::-;3978:39;;4036:38;4070:2;4059:9;4055:18;4036:38;:::i;:::-;4026:48;;4093:18;4160:2;4154;4143:9;4139:18;4126:32;4123:40;4120:2;;;4181:6;4173;4166:22;4120:2;4209:87;4288:7;4281:2;4270:9;4266:18;4253:32;4242:9;4238:48;4209:87;:::i;:::-;4199:97;;4345:2;4339;4328:9;4324:18;4311:32;4308:40;4305:2;;;4366:6;4358;4351:22;4305:2;4394:87;4473:7;4466:2;4455:9;4451:18;4438:32;4427:9;4423:48;4394:87;:::i;:::-;4384:97;;4528:3;4517:9;4513:19;4500:33;4490:43;;4580:3;4569:9;4565:19;4552:33;4542:43;;4632:3;4621:9;4617:19;4604:33;4594:43;;4687:2;4680:3;4669:9;4665:19;4652:33;4649:41;4646:2;;;4708:6;4700;4693:22;4646:2;4736:87;4815:7;4807:3;4796:9;4792:19;4779:33;4768:9;4764:49;4736:87;:::i;:::-;4726:97;;4842:36;4873:3;4862:9;4858:19;4842:36;:::i;:::-;4832:46;;4897:37;4929:3;4918:9;4914:19;4897:37;:::i;:::-;4887:47;;4984:2;4977:3;4966:9;4962:19;4949:33;4946:41;4943:2;;;5006:7;4997;4990:24;4943:2;;5036:76;5104:7;5096:3;5085:9;5081:19;5068:33;5057:9;5053:49;5036:76;:::i;:::-;5025:87;;3896:1222;;;;;;;;;;;;;;:::o;5398:437::-;5451:3;5489:5;5483:12;5516:6;5511:3;5504:19;5542:4;5571:2;5566:3;5562:12;5555:19;;5608:2;5601:5;5597:14;5629:3;5641:169;5655:6;5652:1;5649:13;5641:169;;;5716:13;;5704:26;;5750:12;;;;5785:15;;;;5677:1;5670:9;5641:169;;;-1:-1:-1;5826:3:6;;5459:376;-1:-1:-1;;;;;5459:376:6:o;6323:1529::-;6782:4;6830:3;6819:9;6815:19;6870:1;6866;6861:3;6857:11;6853:19;6911:2;6903:6;6899:15;6888:9;6881:34;6963:2;6955:6;6951:15;6946:2;6935:9;6931:18;6924:43;7003:3;6998:2;6987:9;6983:18;6976:31;7027:6;7062;7056:13;7093:6;7085;7078:22;7131:3;7120:9;7116:19;7109:26;;7170:2;7162:6;7158:15;7144:29;;7191:4;7204:178;7218:6;7215:1;7212:13;7204:178;;;7283:13;;7279:22;;7267:35;;7331:2;7357:15;;;;7322:12;;;;7240:1;7233:9;7204:178;;;7208:3;;7427:9;7422:3;7418:19;7413:2;7402:9;7398:18;7391:47;7455:41;7492:3;7484:6;7455:41;:::i;:::-;7447:49;;;;;7533:6;7527:3;7516:9;7512:19;7505:35;7577:6;7571:3;7560:9;7556:19;7549:35;7621:6;7615:3;7604:9;7600:19;7593:35;7637:46;7678:3;7667:9;7663:19;7655:6;6012:10;6001:22;5989:35;;5979:51;7637:46;6012:10;6001:22;;;;7733:3;7718:19;;5989:35;5910:13;;5903:21;7786:3;7771:19;;5891:34;6102:4;6091:16;7841:3;7826:19;;;6079:29;6791:1061;;-1:-1:-1;;;;;;;;6791:1061:6:o;7857:601::-;7967:4;7996:2;8025;8014:9;8007:21;8057:6;8051:13;8100:6;8095:2;8084:9;8080:18;8073:34;8125:4;8138:140;8152:6;8149:1;8146:13;8138:140;;;8247:14;;;8243:23;;8237:30;8213:17;;;8232:2;8209:26;8202:66;8167:10;;8138:140;;;8296:6;8293:1;8290:13;8287:2;;;8366:4;8361:2;8352:6;8341:9;8337:22;8333:31;8326:45;8287:2;-1:-1:-1;8442:2:6;8421:15;-1:-1:-1;;8417:29:6;8402:45;;;;8449:2;8398:54;;7976:482;-1:-1:-1;;;7976:482:6:o;9506:356::-;9708:2;9690:21;;;9727:18;;;9720:30;9786:34;9781:2;9766:18;;9759:62;9853:2;9838:18;;9680:182::o;10715:275::-;10786:2;10780:9;10851:2;10832:13;;-1:-1:-1;;10828:27:6;10816:40;;10886:18;10871:34;;10907:22;;;10868:62;10865:2;;;10933:18;;:::i;:::-;10969:2;10962:22;10760:230;;-1:-1:-1;10760:230:6:o;10995:183::-;11055:4;11088:18;11080:6;11077:30;11074:2;;;11110:18;;:::i;:::-;-1:-1:-1;11155:1:6;11151:14;11167:4;11147:25;;11064:114::o;11183:127::-;11244:10;11239:3;11235:20;11232:1;11225:31;11275:4;11272:1;11265:15;11299:4;11296:1;11289:15;11315:131;-1:-1:-1;;;;;11390:31:6;;11380:42;;11370:2;;11436:1;11433;11426:12;11370:2;11360:86;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "576600",
                "executionCost": "22986",
                "totalCost": "599586"
              },
              "external": {
                "deploySeed(address,address,address[],uint256[],uint256,uint256,uint256,uint32[],bool,uint8,bytes)": "infinite",
                "masterCopy()": "1069",
                "owner()": "1041",
                "renounceOwnership()": "24165",
                "setMasterCopy(address)": "22106",
                "transferOwnership(address)": "24482"
              }
            },
            "methodIdentifiers": {
              "deploySeed(address,address,address[],uint256[],uint256,uint256,uint256,uint32[],bool,uint8,bytes)": "4a7eb3c2",
              "masterCopy()": "a619486e",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "setMasterCopy(address)": "cf497e6c",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSeed\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"SeedCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_softHardThresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint32[]\",\"name\":\"_vestingDurationAndCliff\",\"type\":\"uint32[]\"},{\"internalType\":\"bool\",\"name\":\"_permissionedSeed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"_fee\",\"type\":\"uint8\"},{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"deploySeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterCopy\",\"outputs\":[{\"internalType\":\"contract Seed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Seed\",\"name\":\"_masterCopy\",\"type\":\"address\"}],\"name\":\"setMasterCopy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Enable PrimeDAO governance to create new Seed contracts.\",\"kind\":\"dev\",\"methods\":{\"deploySeed(address,address,address[],uint256[],uint256,uint256,uint256,uint32[],bool,uint8,bytes)\":{\"details\":\"Deploys Seed contract.\",\"params\":{\"_admin\":\"The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.\",\"_beneficiary\":\"The address that recieves fees.\",\"_endTime\":\"Distribution end time in unix timecode.\",\"_fee\":\"Success fee expressed in Wei as a % (e.g. 2 = 2% fee)\",\"_metadata\":\"Seed contract metadata, that is IPFS URI\",\"_permissionedSeed\":\"Set to true if only whitelisted adresses are allowed to participate.\",\"_price\":\"1 Funding Token = _price amount of Seed Token.\",\"_softHardThresholds\":\"Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.\",\"_startTime\":\"Distribution start time in unix timecode.\",\"_tokens\":\"Array containing two params: - The address of the seed token being distributed.                                         - The address of the funding token being exchanged for seed token.\",\"_vestingDurationAndCliff\":\"Array containing two params: - Vesting period duration in days. - Cliff duration in days.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setMasterCopy(address)\":{\"details\":\"Set Seed contract which works as a base for clones.\",\"params\":{\"_masterCopy\":\"The address of the new Seed basis.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"PrimeDAO Seed Factory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/seed/SeedFactory.sol\":\"SeedFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/seed/Seed.sol\":{\"content\":\"/*\\r\\n\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\r\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\r\\n\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n/* solhint-disable space-after-comma */\\r\\n/* solhint-disable max-states-count */\\r\\n// solium-disable linebreak-style\\r\\npragma solidity 0.8.4;\\r\\n\\r\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\n\\r\\n/**\\r\\n * @title PrimeDAO Seed contract\\r\\n * @dev   Smart contract for seed phases of liquid launch.\\r\\n */\\r\\ncontract Seed {\\r\\n    // Locked parameters\\r\\n    address public beneficiary;\\r\\n    address public admin;\\r\\n    uint256 public softCap;\\r\\n    uint256 public hardCap;\\r\\n    uint256 public seedAmountRequired;    // Amount of seed required for distribution\\r\\n    uint256 public feeAmountRequired;     // Amount of seed required for fee\\r\\n    uint256 public price;\\r\\n    uint256 public startTime;\\r\\n    uint256 public endTime;               // set by project admin, this is the last resort endTime to be applied when\\r\\n                                          //     maximumReached has not been reached by then\\r\\n    bool    public permissionedSeed;\\r\\n    uint32  public vestingDuration;\\r\\n    uint32  public vestingCliff;\\r\\n    IERC20  public seedToken;\\r\\n    IERC20  public fundingToken;\\r\\n    uint8   public fee;\\r\\n\\r\\n    bytes   public metadata;           // IPFS Hash\\r\\n\\r\\n    uint256 constant internal PCT_BASE        = 10 ** 18;  // // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\r\\n\\r\\n    // Contract logic\\r\\n    bool    public closed;                 // is the distribution closed\\r\\n    bool    public paused;                 // is the distribution paused\\r\\n    bool    public isFunded;               // distribution can only start when required seed tokens have been funded\\r\\n    bool    public initialized;            // is this contract initialized [not necessary that it is funded]\\r\\n    bool    public minimumReached;         // if the softCap[minimum limit of funding token] is reached\\r\\n    bool    public maximumReached;         // if the hardCap[maximum limit of funding token] is reached\\r\\n    uint256 public vestingStartTime;       // timestamp for when vesting starts, by default == endTime,\\r\\n                                           //     otherwise when maximumReached is reached\\r\\n    uint256 public totalFunderCount;       // Total funders that have contributed.\\r\\n    uint256 public seedRemainder;          // Amount of seed tokens remaining to be distributed\\r\\n    uint256 public seedClaimed;            // Amount of seed token claimed by the user.\\r\\n    uint256 public feeRemainder;           // Amount of seed tokens remaining for the fee\\r\\n    uint256 public feeClaimed;             // Amount of seed tokens claimed as fee\\r\\n    uint256 public fundingCollected;       // Amount of funding tokens collected by the seed contract.\\r\\n    uint256 public fundingWithdrawn;       // Amount of funding token withdrawn from the seed contract.\\r\\n\\r\\n    mapping (address => bool) public whitelisted;        // funders that are whitelisted and allowed to contribute\\r\\n    mapping (address => FunderPortfolio) public funders; // funder address to funder portfolio\\r\\n\\r\\n    event SeedsPurchased(address indexed recipient, uint256 amountPurchased);\\r\\n    event TokensClaimed(address indexed recipient,uint256 amount,address indexed beneficiary,uint256 feeAmount);\\r\\n    event FundingReclaimed(address indexed recipient, uint256 amountReclaimed);\\r\\n    event MetadataUpdated(bytes indexed metadata);\\r\\n\\r\\n    struct FunderPortfolio {\\r\\n        uint256 seedAmount;                 // Total amount of seed tokens bought\\r\\n        uint256 totalClaimed;               // Total amount of seed tokens claimed\\r\\n        uint256 fundingAmount;              // Total amount of funding tokens contributed\\r\\n        uint256 fee;                        // Total amount of fee in seed amount for this portfolio\\r\\n        uint256 feeClaimed;                 // Total amount of fee sent to beneficiary for this portfolio\\r\\n    }\\r\\n\\r\\n    modifier initializer() {\\r\\n        require(!initialized, \\\"Seed: contract already initialized\\\");\\r\\n        initialized = true;\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier onlyAdmin() {\\r\\n        require(msg.sender == admin, \\\"Seed: caller should be admin\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier isActive() {\\r\\n        require(!closed, \\\"Seed: should not be closed\\\");\\r\\n        require(!paused, \\\"Seed: should not be paused\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowedToBuy() {\\r\\n        require(!maximumReached, \\\"Seed: maximum funding reached\\\");\\r\\n        require(!permissionedSeed || whitelisted[msg.sender], \\\"Seed: sender has no rights\\\");\\r\\n        require(endTime >= block.timestamp && startTime <= block.timestamp,\\r\\n            \\\"Seed: only allowed during distribution period\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowedToClaim() {\\r\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\r\\n        require(endTime <= block.timestamp || maximumReached,\\\"Seed: the distribution has not yet finished\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowedToRetrieve() {\\r\\n        require(!paused, \\\"Seed: should not be paused\\\");\\r\\n        require(startTime <= block.timestamp, \\\"Seed: distribution haven't started\\\");\\r\\n        require(!minimumReached, \\\"Seed: minimum already met\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    modifier allowedToWithdraw() {\\r\\n        require(!paused, \\\"Seed: should not be paused\\\");\\r\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                          Initialize Seed.\\r\\n      * @param _beneficiary           The address that recieves fees.\\r\\n      * @param _admin                 The address of the admin of this contract. Funds contract\\r\\n                                      and has permissions to whitelist users, pause and close contract.\\r\\n      * @param _tokens                Array containing two params:\\r\\n                                        - The address of the seed token being distributed.\\r\\n      *                                 - The address of the funding token being exchanged for seed token.\\r\\n      * @param _softHardThresholds     Array containing two params:\\r\\n                                        - the minimum funding token collection threshold in wei denomination.\\r\\n                                        - the highest possible funding token amount to be raised in wei denomination.\\r\\n      * @param _price                 The price in wei of fundingTokens when exchanged for seedTokens.\\r\\n      * @param _startTime             Distribution start time in unix timecode.\\r\\n      * @param _endTime               Distribution end time in unix timecode.\\r\\n      * @param _vestingDuration       Vesting period duration in seconds.\\r\\n      * @param _vestingCliff          Cliff duration in seconds.\\r\\n      * @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\\r\\n      * @param _fee                   Success fee expressed as a % (e.g. 2 = 2% fee)\\r\\n    */\\r\\n    function initialize(\\r\\n        address _beneficiary,\\r\\n        address _admin,\\r\\n        address[] memory _tokens,\\r\\n        uint256[] memory _softHardThresholds,\\r\\n        uint256 _price,\\r\\n        uint256 _startTime,\\r\\n        uint256 _endTime,\\r\\n        uint32  _vestingDuration,\\r\\n        uint32  _vestingCliff,\\r\\n        bool    _permissionedSeed,\\r\\n        uint8   _fee\\r\\n    ) public initializer\\r\\n    {\\r\\n\\r\\n        // parameter check\\r\\n        require(_tokens[0] != _tokens[1], \\\"SeedFactory: seedToken cannot be fundingToken\\\");\\r\\n        require(_softHardThresholds[1] >= _softHardThresholds[0],\\\"SeedFactory: hardCap cannot be less than softCap\\\");\\r\\n        require(_vestingDuration >= _vestingCliff, \\\"SeedFactory: vestingDuration cannot be less than vestingCliff\\\");\\r\\n        require(_endTime > _startTime, \\\"SeedFactory: endTime cannot be less than equal to startTime\\\");\\r\\n\\r\\n        beneficiary       = _beneficiary;\\r\\n        admin             = _admin;\\r\\n        softCap           = _softHardThresholds[0];\\r\\n        hardCap           = _softHardThresholds[1];\\r\\n        price             = _price;\\r\\n        startTime         = _startTime;\\r\\n        endTime           = _endTime;\\r\\n        vestingStartTime  = endTime;\\r\\n        vestingDuration   = _vestingDuration;\\r\\n        vestingCliff      = _vestingCliff;\\r\\n        permissionedSeed  = _permissionedSeed;\\r\\n        seedToken         = IERC20(_tokens[0]);\\r\\n        fundingToken      = IERC20(_tokens[1]);\\r\\n        fee               = _fee;\\r\\n\\r\\n        seedAmountRequired = (hardCap*PCT_BASE) / _price;\\r\\n        feeAmountRequired  = (seedAmountRequired*_fee) / 100;\\r\\n        seedRemainder      = seedAmountRequired;\\r\\n        feeRemainder       = feeAmountRequired;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Buy seed tokens.\\r\\n      * @param _fundingAmount    The amount of funding tokens to contribute.\\r\\n    */\\r\\n    function buy(uint256 _fundingAmount) public isActive allowedToBuy returns(uint256, uint256) {\\r\\n        if (!isFunded) {\\r\\n            require(seedToken.balanceOf(address(this)) >= seedAmountRequired + feeAmountRequired,\\r\\n                \\\"Seed: sufficient seeds not provided\\\");\\r\\n            isFunded = true;\\r\\n        }\\r\\n        // fundingAmount is an amount of fundingTokens required to buy _seedAmount of SeedTokens\\r\\n        uint256 seedAmount = (_fundingAmount*PCT_BASE)/price;\\r\\n\\r\\n        // Funding Token balance of this contract;\\r\\n        uint256 fundingBalance = fundingCollected;\\r\\n\\r\\n        // feeAmount is an amount of fee we are going to get in seedTokens\\r\\n        uint256 feeAmount = (seedAmount*fee) / 100;\\r\\n\\r\\n        // total fundingAmount should not be greater than the hardCap\\r\\n        require( fundingBalance + _fundingAmount <= hardCap,\\r\\n            \\\"Seed: amount exceeds contract sale hardCap\\\");\\r\\n\\r\\n        require( seedRemainder >= seedAmount,\\r\\n            \\\"Seed: seed distribution would be exceeded\\\");\\r\\n\\r\\n        fundingCollected = fundingBalance + _fundingAmount;\\r\\n\\r\\n        // the amount of seed tokens still to be distributed\\r\\n        seedRemainder -= seedAmount;\\r\\n        feeRemainder  -= feeAmount;\\r\\n\\r\\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\\r\\n        require(fundingToken.transferFrom(msg.sender, address(this), _fundingAmount), \\\"Seed: no tokens\\\");\\r\\n\\r\\n        if (fundingCollected >= softCap) {\\r\\n            minimumReached = true;\\r\\n        }\\r\\n        if (fundingCollected >= hardCap) {\\r\\n            maximumReached = true;\\r\\n            vestingStartTime = _currentTime();\\r\\n        }\\r\\n\\r\\n        _addFunder(\\r\\n            msg.sender,\\r\\n            (funders[msg.sender].seedAmount + seedAmount),         // Previous Seed Amount + new seed amount\\r\\n            (funders[msg.sender].fundingAmount + _fundingAmount),  // Previous Funding Amount + new funding amount\\r\\n            funders[msg.sender].totalClaimed,\\r\\n            (funders[msg.sender].fee + feeAmount),                  // Previous Fee + new fee\\r\\n            funders[msg.sender].feeClaimed\\r\\n            );\\r\\n\\r\\n        // buyer, seed token purchased in this transaction (not the total amount of seed purchased)\\r\\n        emit SeedsPurchased(msg.sender, seedAmount);\\r\\n\\r\\n        return (seedAmount, feeAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Claim vested seed tokens.\\r\\n      * @param _funder           Address of funder to calculate seconds and amount claimable\\r\\n      * @param _claimAmount      The amount of seed token a users wants to claim.\\r\\n    */\\r\\n    function claim(address _funder, uint256 _claimAmount) public allowedToClaim returns(uint256) {\\r\\n        uint256 amountClaimable;\\r\\n\\r\\n        amountClaimable = calculateClaim(_funder);\\r\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\r\\n        require(amountClaimable >= _claimAmount, \\\"Seed: request is greater than claimable amount\\\");\\r\\n        uint256 feeAmountOnClaim = (_claimAmount * fee) / 100;\\r\\n\\r\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\r\\n\\r\\n        tokenFunder.totalClaimed    += _claimAmount;\\r\\n        tokenFunder.feeClaimed      += feeAmountOnClaim;\\r\\n        funders[_funder] = tokenFunder;\\r\\n\\r\\n        seedClaimed += _claimAmount;\\r\\n        feeClaimed  += feeAmountOnClaim;\\r\\n        require(seedToken.transfer(beneficiary, feeAmountOnClaim), \\\"Seed: cannot transfer to beneficiary\\\");\\r\\n        require(seedToken.transfer(_funder, _claimAmount), \\\"Seed: no tokens\\\");\\r\\n\\r\\n        emit TokensClaimed(_funder, _claimAmount, beneficiary, feeAmountOnClaim);\\r\\n\\r\\n        // fee on the distributed reward collected from admin\\r\\n        return (feeAmountOnClaim);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev         Returns funding tokens to user.\\r\\n    */\\r\\n    function retrieveFundingTokens() public allowedToRetrieve returns(uint256) {\\r\\n        require(funders[msg.sender].fundingAmount > 0, \\\"Seed: zero funding amount\\\");\\r\\n        FunderPortfolio memory tokenFunder = funders[msg.sender];\\r\\n        uint256 fundingAmount = tokenFunder.fundingAmount;\\r\\n        seedRemainder += tokenFunder.seedAmount;\\r\\n        feeRemainder += tokenFunder.fee;\\r\\n        tokenFunder.seedAmount    = 0;\\r\\n        tokenFunder.fee           = 0;\\r\\n        tokenFunder.fundingAmount = 0;\\r\\n        funders[msg.sender]  = tokenFunder;\\r\\n        fundingCollected -= fundingAmount;\\r\\n        require(\\r\\n            fundingToken.transfer(msg.sender, fundingAmount),\\r\\n            \\\"Seed: cannot return funding tokens to msg.sender\\\"\\r\\n        );\\r\\n        emit FundingReclaimed(msg.sender, fundingAmount);\\r\\n\\r\\n        return fundingAmount;\\r\\n    }\\r\\n\\r\\n    // ADMIN ACTIONS\\r\\n\\r\\n    /**\\r\\n      * @dev                     Pause distribution.\\r\\n    */\\r\\n    function pause() public onlyAdmin isActive {\\r\\n        paused = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Unpause distribution.\\r\\n    */\\r\\n    function unpause() public onlyAdmin {\\r\\n        require(closed != true, \\\"Seed: should not be closed\\\");\\r\\n        require(paused == true, \\\"Seed: should be paused\\\");\\r\\n\\r\\n        paused = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Close distribution.\\r\\n    */\\r\\n    function close() public onlyAdmin isActive {\\r\\n        // transfer seed tokens back to admin\\r\\n        if (minimumReached) {\\r\\n            // remaining seeds = seedRemainder + feeRemainder\\r\\n            uint256 seedToTransfer = seedRemainder+feeRemainder;\\r\\n            require(\\r\\n                seedToken.transfer(admin, seedToTransfer),\\r\\n                \\\"Seed: should transfer seed tokens to admin\\\"\\r\\n            );\\r\\n            paused = false;\\r\\n        } else {\\r\\n            require(\\r\\n                seedToken.transfer(admin, seedAmountRequired+feeAmountRequired),\\r\\n                \\\"Seed: should transfer seed tokens to admin\\\"\\r\\n            );\\r\\n            closed = true;\\r\\n            paused = false;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Add address to whitelist.\\r\\n      * @param _buyer            Address which needs to be whitelisted\\r\\n    */\\r\\n    function whitelist(address _buyer) public onlyAdmin isActive {\\r\\n        require(permissionedSeed == true, \\\"Seed: module is not whitelisted\\\");\\r\\n\\r\\n        whitelisted[_buyer] = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Add multiple addresses to whitelist.\\r\\n      * @param _buyers           Array of addresses to whitelist addresses in batch\\r\\n    */\\r\\n    function whitelistBatch(address[] memory _buyers) public onlyAdmin isActive {\\r\\n        require(permissionedSeed == true, \\\"Seed: module is not whitelisted\\\");\\r\\n        for (uint256 i = 0; i < _buyers.length; i++) {\\r\\n            whitelisted[_buyers[i]] = true;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Remove address from whitelist.\\r\\n      * @param buyer             Address which needs to be unwhitelisted\\r\\n    */\\r\\n    function unwhitelist(address buyer) public onlyAdmin isActive {\\r\\n        require(permissionedSeed == true, \\\"Seed: module is not whitelisted\\\");\\r\\n\\r\\n        whitelisted[buyer] = false;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Withdraw funds from the contract\\r\\n    */\\r\\n    function withdraw() public onlyAdmin allowedToWithdraw {\\r\\n        uint pendingFundingBalance = fundingCollected - fundingWithdrawn;\\r\\n        fundingWithdrawn = fundingCollected;\\r\\n        fundingToken.transfer(msg.sender, pendingFundingBalance);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     Updates metadata.\\r\\n      * @param _metadata         Seed contract metadata, that is IPFS Hash\\r\\n    */\\r\\n    function updateMetadata(bytes memory _metadata) public {\\r\\n        require(\\r\\n            initialized != true || msg.sender == admin,\\r\\n            \\\"Seed: contract should not be initialized or caller should be admin\\\"\\r\\n        );\\r\\n        metadata = _metadata;\\r\\n        emit MetadataUpdated(_metadata);\\r\\n    }\\r\\n\\r\\n    // GETTER FUNCTIONS\\r\\n    /**\\r\\n      * @dev                     Calculates the maximum claim\\r\\n      * @param _funder           Address of funder to find the maximum claim\\r\\n    */\\r\\n    function calculateClaim(address _funder) public view returns(uint256) {\\r\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\r\\n\\r\\n        if (_currentTime() < vestingStartTime) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        // Check cliff was reached\\r\\n        uint256 elapsedSeconds = _currentTime() - vestingStartTime;\\r\\n\\r\\n        if (elapsedSeconds < vestingCliff) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        // If over vesting duration, all tokens vested\\r\\n        if (elapsedSeconds >= vestingDuration) {\\r\\n            return tokenFunder.seedAmount - tokenFunder.totalClaimed;\\r\\n        } else {\\r\\n            uint256 amountVested = (elapsedSeconds*tokenFunder.seedAmount) / vestingDuration;\\r\\n            return amountVested - tokenFunder.totalClaimed;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                     check whitelist status of a buyer\\r\\n      * @param _buyer            address of buyer to check status\\r\\n    */\\r\\n    function checkWhitelisted(address _buyer) public view returns(bool) {\\r\\n        return whitelisted[_buyer];\\r\\n    }\\r\\n\\r\\n    // INTERNAL FUNCTIONS\\r\\n    /**\\r\\n      * @dev                      get current time or block.timestamp\\r\\n    */\\r\\n    function _currentTime() internal view returns(uint256) {\\r\\n        return block.timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                      add/update funder portfolio\\r\\n      * @param _recipient         Address of funder recipient\\r\\n      * @param _seedAmount        seed amount of the funder\\r\\n      * @param _fundingAmount     funding amount contributed\\r\\n      * @param _totalClaimed      total seed token amount claimed\\r\\n      * @param _fee               fee on seed amount bought\\r\\n    */\\r\\n    function _addFunder(\\r\\n        address _recipient,\\r\\n        uint256 _seedAmount,\\r\\n        uint256 _fundingAmount,\\r\\n        uint256 _totalClaimed,\\r\\n        uint256 _fee,\\r\\n        uint256 _feeClaimed\\r\\n    )\\r\\n    internal\\r\\n    {\\r\\n\\r\\n        require(_seedAmount >= vestingDuration, \\\"Seed: amountVestedPerSecond > 0\\\");\\r\\n\\r\\n        funders[_recipient] = FunderPortfolio({\\r\\n            seedAmount: _seedAmount,\\r\\n            totalClaimed: _totalClaimed,\\r\\n            fundingAmount: _fundingAmount,\\r\\n            fee: _fee,\\r\\n            feeClaimed: _feeClaimed\\r\\n        });\\r\\n        totalFunderCount++;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x8002594f7249e0f619ef25c57f6e7e915799384ff7ae53791965e7abe84ab216\",\"license\":\"GPL-3.0-or-later\"},\"contracts/seed/SeedFactory.sol\":{\"content\":\"/*\\r\\n\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\r\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\r\\n\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n// solium-disable linebreak-style\\r\\n/* solhint-disable space-after-comma */\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"openzeppelin-solidity/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"./Seed.sol\\\";\\r\\nimport \\\"../utils/CloneFactory.sol\\\";\\r\\n\\r\\n\\r\\n/**\\r\\n * @title PrimeDAO Seed Factory\\r\\n * @dev   Enable PrimeDAO governance to create new Seed contracts.\\r\\n */\\r\\ncontract SeedFactory is CloneFactory, Ownable {\\r\\n\\r\\n    Seed public masterCopy;\\r\\n\\r\\n    event SeedCreated(address indexed newSeed, address indexed beneficiary);\\r\\n\\r\\n    /**\\r\\n     * @dev               Set Seed contract which works as a base for clones.\\r\\n     * @param _masterCopy The address of the new Seed basis.\\r\\n     */\\r\\n    function setMasterCopy(Seed _masterCopy) public onlyOwner {\\r\\n        require(address(_masterCopy) != address(0), \\\"SeedFactory: new mastercopy cannot be zero address\\\");\\r\\n        masterCopy = _masterCopy;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev                                Deploys Seed contract.\\r\\n      * @param _beneficiary                 The address that recieves fees.\\r\\n      * @param _admin                       The address of the admin of this contract. Funds contract\\r\\n                                            and has permissions to whitelist users, pause and close contract.\\r\\n      * @param _tokens                      Array containing two params:\\r\\n                                                - The address of the seed token being distributed.\\r\\n      *                                         - The address of the funding token being exchanged for seed token.\\r\\n      * @param _softHardThresholds          Array containing two params:\\r\\n                                                - the minimum funding token collection threshold in wei denomination.\\r\\n                                                - the highest possible funding token amount to be raised in wei denomination.\\r\\n      * @param _price                       1 Funding Token = _price amount of Seed Token.\\r\\n      * @param _startTime                   Distribution start time in unix timecode.\\r\\n      * @param _endTime                     Distribution end time in unix timecode.\\r\\n      * @param _vestingDurationAndCliff       Array containing two params:\\r\\n                                                - Vesting period duration in days.\\r\\n                                                - Cliff duration in days.\\r\\n      * @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\\r\\n      * @param _fee                   Success fee expressed in Wei as a % (e.g. 2 = 2% fee)\\r\\n      * @param _metadata              Seed contract metadata, that is IPFS URI\\r\\n    */\\r\\n    function deploySeed(\\r\\n        address _beneficiary,\\r\\n        address _admin,\\r\\n        address[] memory _tokens,\\r\\n        uint256[] memory _softHardThresholds,\\r\\n        uint256 _price,\\r\\n        uint256 _startTime,\\r\\n        uint256 _endTime,\\r\\n        uint32[] memory _vestingDurationAndCliff,\\r\\n        bool  _permissionedSeed,\\r\\n        uint8 _fee,\\r\\n        bytes memory _metadata\\r\\n    ) public onlyOwner returns (address)\\r\\n    {\\r\\n        {\\r\\n            require(address(masterCopy) != address(0), \\\"SeedFactory: mastercopy cannot be zero address\\\");\\r\\n            require(_vestingDurationAndCliff.length == 2, \\\"SeedFactory: Hasn't provided both vesting duration and cliff\\\");\\r\\n        }\\r\\n\\r\\n        // deploy clone\\r\\n        address _newSeed = createClone(address(masterCopy));\\r\\n\\r\\n        Seed(_newSeed).updateMetadata(_metadata);\\r\\n\\r\\n        // initialize\\r\\n        Seed(_newSeed).initialize(\\r\\n            _beneficiary,\\r\\n            _admin,\\r\\n            _tokens,\\r\\n            _softHardThresholds,\\r\\n            _price,\\r\\n            _startTime,\\r\\n            _endTime,\\r\\n            _vestingDurationAndCliff[0],\\r\\n            _vestingDurationAndCliff[1],\\r\\n            _permissionedSeed,\\r\\n            _fee\\r\\n        );\\r\\n\\r\\n        emit SeedCreated(address(_newSeed), msg.sender);\\r\\n\\r\\n        return _newSeed;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xc49528e6b932ca3bec53b0468761a2db52e48e9e2ae427f6bd3aafda7165e658\",\"license\":\"GPL-3.0-or-later\"},\"contracts/utils/CloneFactory.sol\":{\"content\":\"/*\\r\\n\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\r\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\r\\n\\r\\n* ===========\\r\\n*\\r\\n* CloneFactory.sol was originally published under MIT license.\\r\\n* Republished by PrimeDAO under GNU General Public License v3.0.\\r\\n*\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n// solium-disable linebreak-style\\r\\n// solhint-disable max-line-length\\r\\n// solhint-disable no-inline-assembly\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\ncontract CloneFactory {\\r\\n\\r\\n    function createClone(address target) internal returns (address result) {\\r\\n        bytes20 targetBytes = bytes20(target);\\r\\n        assembly {\\r\\n            let clone := mload(0x40)\\r\\n            mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\r\\n            mstore(add(clone, 0x14), targetBytes)\\r\\n            mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\r\\n            result := create(0, clone, 0x37)\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function isClone(address target, address query) internal view returns (bool result) {\\r\\n        bytes20 targetBytes = bytes20(target);\\r\\n        assembly {\\r\\n            let clone := mload(0x40)\\r\\n            mstore(clone, 0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000)\\r\\n            mstore(add(clone, 0xa), targetBytes)\\r\\n            mstore(add(clone, 0x1e), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\r\\n\\r\\n            let other := add(clone, 0x40)\\r\\n            extcodecopy(query, other, 0, 0x2d)\\r\\n            result := and(\\r\\n            eq(mload(clone), mload(other)),\\r\\n            eq(mload(add(clone, 0xd)), mload(add(other, 0xd)))\\r\\n            )\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1485749a4bebb160b8324aa46302e239f25a6efad542457fe66c12465f49083\",\"license\":\"GPL-3.0-or-later\"},\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1339,
                "contract": "contracts/seed/SeedFactory.sol:SeedFactory",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 1156,
                "contract": "contracts/seed/SeedFactory.sol:SeedFactory",
                "label": "masterCopy",
                "offset": 0,
                "slot": "1",
                "type": "t_contract(Seed)1142"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_contract(Seed)1142": {
                "encoding": "inplace",
                "label": "contract Seed",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/utils/CloneFactory.sol": {
        "CloneFactory": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200b9741f01a304d48bca5455a84d64fe06b635e5a4f1e8d8f24555c08bc97c7c664736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND SWAP8 COINBASE CREATE BYTE ADDRESS 0x4D 0x48 0xBC 0xA5 GASLIMIT GAS DUP5 0xD6 0x4F 0xE0 PUSH12 0x635E5A4F1E8D8F24555C08BC SWAP8 0xC7 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1477:1241:2:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600080fdfea26469706673582212200b9741f01a304d48bca5455a84d64fe06b635e5a4f1e8d8f24555c08bc97c7c664736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND SWAP8 COINBASE CREATE BYTE ADDRESS 0x4D 0x48 0xBC 0xA5 GASLIMIT GAS DUP5 0xD6 0x4F 0xE0 PUSH12 0x635E5A4F1E8D8F24555C08BC SWAP8 0xC7 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1477:1241:2:-:0;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "12600",
                "executionCost": "66",
                "totalCost": "12666"
              },
              "internal": {
                "createClone(address)": "infinite",
                "isClone(address,address)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/CloneFactory.sol\":\"CloneFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/CloneFactory.sol\":{\"content\":\"/*\\r\\n\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\r\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\r\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\r\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\r\\n\\r\\n* ===========\\r\\n*\\r\\n* CloneFactory.sol was originally published under MIT license.\\r\\n* Republished by PrimeDAO under GNU General Public License v3.0.\\r\\n*\\r\\n*/\\r\\n\\r\\n// SPDX-License-Identifier: GPL-3.0-or-later\\r\\n// solium-disable linebreak-style\\r\\n// solhint-disable max-line-length\\r\\n// solhint-disable no-inline-assembly\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\ncontract CloneFactory {\\r\\n\\r\\n    function createClone(address target) internal returns (address result) {\\r\\n        bytes20 targetBytes = bytes20(target);\\r\\n        assembly {\\r\\n            let clone := mload(0x40)\\r\\n            mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\r\\n            mstore(add(clone, 0x14), targetBytes)\\r\\n            mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\r\\n            result := create(0, clone, 0x37)\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function isClone(address target, address query) internal view returns (bool result) {\\r\\n        bytes20 targetBytes = bytes20(target);\\r\\n        assembly {\\r\\n            let clone := mload(0x40)\\r\\n            mstore(clone, 0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000)\\r\\n            mstore(add(clone, 0xa), targetBytes)\\r\\n            mstore(add(clone, 0x1e), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\r\\n\\r\\n            let other := add(clone, 0x40)\\r\\n            extcodecopy(query, other, 0, 0x2d)\\r\\n            result := and(\\r\\n            eq(mload(clone), mload(other)),\\r\\n            eq(mload(add(clone, 0xd)), mload(add(other, 0xd)))\\r\\n            )\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf1485749a4bebb160b8324aa46302e239f25a6efad542457fe66c12465f49083\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "openzeppelin-solidity/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "Initializes the contract setting the deployer as the initial owner."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1339,
                "contract": "openzeppelin-solidity/contracts/access/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "openzeppelin-solidity/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"openzeppelin-solidity/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/seed/Seed.sol": {
        "ast": {
          "absolutePath": "contracts/seed/Seed.sol",
          "exportedSymbols": {
            "IERC20": [
              1519
            ],
            "Seed": [
              1142
            ]
          },
          "id": 1143,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "1304:22:0"
            },
            {
              "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
              "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1143,
              "sourceUnit": 1520,
              "src": "1330:64:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 3,
                "nodeType": "StructuredDocumentation",
                "src": "1400:102:0",
                "text": " @title PrimeDAO Seed contract\n @dev   Smart contract for seed phases of liquid launch."
              },
              "fullyImplemented": true,
              "id": 1142,
              "linearizedBaseContracts": [
                1142
              ],
              "name": "Seed",
              "nameLocation": "1513:4:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "38af3eed",
                  "id": 5,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "1566:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1551:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f851a440",
                  "id": 7,
                  "mutability": "mutable",
                  "name": "admin",
                  "nameLocation": "1599:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1584:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1584:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "906a26e0",
                  "id": 9,
                  "mutability": "mutable",
                  "name": "softCap",
                  "nameLocation": "1626:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1611:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "fb86a404",
                  "id": 11,
                  "mutability": "mutable",
                  "name": "hardCap",
                  "nameLocation": "1655:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1640:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "bc0f5f84",
                  "id": 13,
                  "mutability": "mutable",
                  "name": "seedAmountRequired",
                  "nameLocation": "1684:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1669:33:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e6e36ebb",
                  "id": 15,
                  "mutability": "mutable",
                  "name": "feeAmountRequired",
                  "nameLocation": "1771:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1756:32:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1756:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a035b1fe",
                  "id": 17,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "1849:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1834:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1834:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "78e97925",
                  "id": 19,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "1876:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1861:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1861:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3197cbb6",
                  "id": 21,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "1907:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1892:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1892:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3dba9e41",
                  "id": 23,
                  "mutability": "mutable",
                  "name": "permissionedSeed",
                  "nameLocation": "2120:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2105:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2105:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1514617e",
                  "id": 25,
                  "mutability": "mutable",
                  "name": "vestingDuration",
                  "nameLocation": "2158:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2143:30:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f3640e74",
                  "id": 27,
                  "mutability": "mutable",
                  "name": "vestingCliff",
                  "nameLocation": "2195:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2180:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2180:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "311f8483",
                  "id": 30,
                  "mutability": "mutable",
                  "name": "seedToken",
                  "nameLocation": "2229:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2214:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1519",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 29,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 28,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1519,
                      "src": "2214:6:0"
                    },
                    "referencedDeclaration": 1519,
                    "src": "2214:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1519",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "78065f27",
                  "id": 33,
                  "mutability": "mutable",
                  "name": "fundingToken",
                  "nameLocation": "2260:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2245:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1519",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 32,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1519,
                      "src": "2245:6:0"
                    },
                    "referencedDeclaration": 1519,
                    "src": "2245:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1519",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ddca3f43",
                  "id": 35,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "2294:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2279:18:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 34,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "392f37e9",
                  "id": 37,
                  "mutability": "mutable",
                  "name": "metadata",
                  "nameLocation": "2321:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2306:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2306:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 42,
                  "mutability": "constant",
                  "name": "PCT_BASE",
                  "nameLocation": "2387:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2361:52:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2361:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 41,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2405:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2411:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2405:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "597e1fb5",
                  "id": 44,
                  "mutability": "mutable",
                  "name": "closed",
                  "nameLocation": "2506:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2491:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5c975abb",
                  "id": 46,
                  "mutability": "mutable",
                  "name": "paused",
                  "nameLocation": "2580:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2565:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2565:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7c654303",
                  "id": 48,
                  "mutability": "mutable",
                  "name": "isFunded",
                  "nameLocation": "2654:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2639:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2639:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "158ef93e",
                  "id": 50,
                  "mutability": "mutable",
                  "name": "initialized",
                  "nameLocation": "2772:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2757:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "e565eb4c",
                  "id": 52,
                  "mutability": "mutable",
                  "name": "minimumReached",
                  "nameLocation": "2882:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2867:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2867:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "117a36d1",
                  "id": 54,
                  "mutability": "mutable",
                  "name": "maximumReached",
                  "nameLocation": "2987:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "2972:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2972:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a8660a78",
                  "id": 56,
                  "mutability": "mutable",
                  "name": "vestingStartTime",
                  "nameLocation": "3092:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3077:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3077:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "5e9777e8",
                  "id": 58,
                  "mutability": "mutable",
                  "name": "totalFunderCount",
                  "nameLocation": "3289:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3274:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3274:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0826d2c7",
                  "id": 60,
                  "mutability": "mutable",
                  "name": "seedRemainder",
                  "nameLocation": "3373:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3358:28:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3358:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "47d02f1b",
                  "id": 62,
                  "mutability": "mutable",
                  "name": "seedClaimed",
                  "nameLocation": "3470:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3455:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b774682f",
                  "id": 64,
                  "mutability": "mutable",
                  "name": "feeRemainder",
                  "nameLocation": "3559:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3544:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3544:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "71f4b8e8",
                  "id": 66,
                  "mutability": "mutable",
                  "name": "feeClaimed",
                  "nameLocation": "3650:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3635:25:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 65,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1cfe562e",
                  "id": 68,
                  "mutability": "mutable",
                  "name": "fundingCollected",
                  "nameLocation": "3734:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3719:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 67,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3719:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "83d59e00",
                  "id": 70,
                  "mutability": "mutable",
                  "name": "fundingWithdrawn",
                  "nameLocation": "3838:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3823:31:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3823:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d936547e",
                  "id": 74,
                  "mutability": "mutable",
                  "name": "whitelisted",
                  "nameLocation": "3963:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "3930:44:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 73,
                    "keyType": {
                      "id": 71,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3939:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3930:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 72,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "3950:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "031b3677",
                  "id": 79,
                  "mutability": "mutable",
                  "name": "funders",
                  "nameLocation": "4090:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "4046:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                    "typeString": "mapping(address => struct Seed.FunderPortfolio)"
                  },
                  "typeName": {
                    "id": 78,
                    "keyType": {
                      "id": 75,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4055:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "4046:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                      "typeString": "mapping(address => struct Seed.FunderPortfolio)"
                    },
                    "valueType": {
                      "id": 77,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 76,
                        "name": "FunderPortfolio",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 116,
                        "src": "4066:15:0"
                      },
                      "referencedDeclaration": 116,
                      "src": "4066:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage_ptr",
                        "typeString": "struct Seed.FunderPortfolio"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 85,
                  "name": "SeedsPurchased",
                  "nameLocation": "4150:14:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 81,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "4181:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "4165:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 80,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4165:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 83,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountPurchased",
                        "nameLocation": "4200:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "4192:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4192:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4164:52:0"
                  },
                  "src": "4144:73:0"
                },
                {
                  "anonymous": false,
                  "id": 95,
                  "name": "TokensClaimed",
                  "nameLocation": "4229:13:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 94,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 87,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "4259:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "4243:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4243:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 89,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4277:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "4269:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4269:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "beneficiary",
                        "nameLocation": "4300:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "4284:27:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4284:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 93,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "feeAmount",
                        "nameLocation": "4320:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 95,
                        "src": "4312:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4312:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4242:88:0"
                  },
                  "src": "4223:108:0"
                },
                {
                  "anonymous": false,
                  "id": 101,
                  "name": "FundingReclaimed",
                  "nameLocation": "4343:16:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 97,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "4376:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4360:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4360:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 99,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountReclaimed",
                        "nameLocation": "4395:15:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "4387:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 98,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4387:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4359:52:0"
                  },
                  "src": "4337:75:0"
                },
                {
                  "anonymous": false,
                  "id": 105,
                  "name": "MetadataUpdated",
                  "nameLocation": "4424:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 104,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 103,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "metadata",
                        "nameLocation": "4454:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 105,
                        "src": "4440:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 102,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4440:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4439:24:0"
                  },
                  "src": "4418:46:0"
                },
                {
                  "canonicalName": "Seed.FunderPortfolio",
                  "id": 116,
                  "members": [
                    {
                      "constant": false,
                      "id": 107,
                      "mutability": "mutable",
                      "name": "seedAmount",
                      "nameLocation": "4514:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 116,
                      "src": "4506:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 106,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4506:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 109,
                      "mutability": "mutable",
                      "name": "totalClaimed",
                      "nameLocation": "4597:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 116,
                      "src": "4589:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 108,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4589:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 111,
                      "mutability": "mutable",
                      "name": "fundingAmount",
                      "nameLocation": "4681:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 116,
                      "src": "4673:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4673:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 113,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "4772:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 116,
                      "src": "4764:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 112,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4764:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 115,
                      "mutability": "mutable",
                      "name": "feeClaimed",
                      "nameLocation": "4874:10:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 116,
                      "src": "4866:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 114,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4866:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "FunderPortfolio",
                  "nameLocation": "4479:15:0",
                  "nodeType": "StructDefinition",
                  "scope": 1142,
                  "src": "4472:498:0",
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 129,
                    "nodeType": "Block",
                    "src": "5001:119:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5020:12:0",
                              "subExpression": {
                                "id": 119,
                                "name": "initialized",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50,
                                "src": "5021:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a20636f6e747261637420616c726561647920696e697469616c697a6564",
                              "id": 121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5034:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9feb8d1289c2fb4c117422b00150d454c681aa03173d1e5e9c08711ea591c21c",
                                "typeString": "literal_string \"Seed: contract already initialized\""
                              },
                              "value": "Seed: contract already initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9feb8d1289c2fb4c117422b00150d454c681aa03173d1e5e9c08711ea591c21c",
                                "typeString": "literal_string \"Seed: contract already initialized\""
                              }
                            ],
                            "id": 118,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5012:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5012:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 123,
                        "nodeType": "ExpressionStatement",
                        "src": "5012:59:0"
                      },
                      {
                        "expression": {
                          "id": 126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 124,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "5082:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5096:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5082:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 127,
                        "nodeType": "ExpressionStatement",
                        "src": "5082:18:0"
                      },
                      {
                        "id": 128,
                        "nodeType": "PlaceholderStatement",
                        "src": "5111:1:0"
                      }
                    ]
                  },
                  "id": 130,
                  "name": "initializer",
                  "nameLocation": "4987:11:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 117,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4998:2:0"
                  },
                  "src": "4978:142:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 141,
                    "nodeType": "Block",
                    "src": "5149:91:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 133,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5168:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 134,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5168:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 135,
                                "name": "admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "5182:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5168:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2063616c6c65722073686f756c642062652061646d696e",
                              "id": 137,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5189:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8425246c8860d660fb55cdef4d1a144dcc62c1cee77ed8aedb230ea46c2c2b14",
                                "typeString": "literal_string \"Seed: caller should be admin\""
                              },
                              "value": "Seed: caller should be admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8425246c8860d660fb55cdef4d1a144dcc62c1cee77ed8aedb230ea46c2c2b14",
                                "typeString": "literal_string \"Seed: caller should be admin\""
                              }
                            ],
                            "id": 132,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5160:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5160:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "5160:60:0"
                      },
                      {
                        "id": 140,
                        "nodeType": "PlaceholderStatement",
                        "src": "5231:1:0"
                      }
                    ]
                  },
                  "id": 142,
                  "name": "onlyAdmin",
                  "nameLocation": "5137:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5146:2:0"
                  },
                  "src": "5128:112:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 157,
                    "nodeType": "Block",
                    "src": "5268:134:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5287:7:0",
                              "subExpression": {
                                "id": 145,
                                "name": "closed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "5288:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2073686f756c64206e6f7420626520636c6f736564",
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5296:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_86c223e4d678e1a7f2304b5148c636c8382b870e6b2125728763308d866b327b",
                                "typeString": "literal_string \"Seed: should not be closed\""
                              },
                              "value": "Seed: should not be closed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_86c223e4d678e1a7f2304b5148c636c8382b870e6b2125728763308d866b327b",
                                "typeString": "literal_string \"Seed: should not be closed\""
                              }
                            ],
                            "id": 144,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5279:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5279:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "5279:46:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 152,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5344:7:0",
                              "subExpression": {
                                "id": 151,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "5345:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2073686f756c64206e6f7420626520706175736564",
                              "id": 153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5353:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a23a57fe88069c51bc08c12fd26b2eebeb52db529302bad9b0964903d450e4af",
                                "typeString": "literal_string \"Seed: should not be paused\""
                              },
                              "value": "Seed: should not be paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a23a57fe88069c51bc08c12fd26b2eebeb52db529302bad9b0964903d450e4af",
                                "typeString": "literal_string \"Seed: should not be paused\""
                              }
                            ],
                            "id": 150,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5336:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5336:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 155,
                        "nodeType": "ExpressionStatement",
                        "src": "5336:46:0"
                      },
                      {
                        "id": 156,
                        "nodeType": "PlaceholderStatement",
                        "src": "5393:1:0"
                      }
                    ]
                  },
                  "id": 158,
                  "name": "isActive",
                  "nameLocation": "5257:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5265:2:0"
                  },
                  "src": "5248:154:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 191,
                    "nodeType": "Block",
                    "src": "5434:322:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5453:15:0",
                              "subExpression": {
                                "id": 161,
                                "name": "maximumReached",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "5454:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206d6178696d756d2066756e64696e672072656163686564",
                              "id": 163,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5470:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_15e7076c546be0ca4dc2af373bce4ad6640ff7f46c24f66ca25610dd1b8916ac",
                                "typeString": "literal_string \"Seed: maximum funding reached\""
                              },
                              "value": "Seed: maximum funding reached"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_15e7076c546be0ca4dc2af373bce4ad6640ff7f46c24f66ca25610dd1b8916ac",
                                "typeString": "literal_string \"Seed: maximum funding reached\""
                              }
                            ],
                            "id": 160,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5445:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5445:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 165,
                        "nodeType": "ExpressionStatement",
                        "src": "5445:57:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "5521:17:0",
                                "subExpression": {
                                  "id": 167,
                                  "name": "permissionedSeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "5522:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 169,
                                  "name": "whitelisted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 74,
                                  "src": "5542:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 172,
                                "indexExpression": {
                                  "expression": {
                                    "id": 170,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "5554:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 171,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "5554:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5542:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5521:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2073656e64657220686173206e6f20726967687473",
                              "id": 174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5567:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6eb12f0b416b7cc2c84b7fe88d95ab7bd528df6a2f41a0e3588bdf49ba77a203",
                                "typeString": "literal_string \"Seed: sender has no rights\""
                              },
                              "value": "Seed: sender has no rights"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6eb12f0b416b7cc2c84b7fe88d95ab7bd528df6a2f41a0e3588bdf49ba77a203",
                                "typeString": "literal_string \"Seed: sender has no rights\""
                              }
                            ],
                            "id": 166,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5513:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5513:83:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 176,
                        "nodeType": "ExpressionStatement",
                        "src": "5513:83:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 178,
                                  "name": "endTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "5615:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 179,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5626:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 180,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5626:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5615:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 182,
                                  "name": "startTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 19,
                                  "src": "5645:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 183,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5658:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 184,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5658:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5645:28:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5615:58:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206f6e6c7920616c6c6f77656420647572696e6720646973747269627574696f6e20706572696f64",
                              "id": 187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5688:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8d88b9bb77ee9d216d5b2a6ad0a5e14bcbdc1adf81a450e41caaf1bcc0b37968",
                                "typeString": "literal_string \"Seed: only allowed during distribution period\""
                              },
                              "value": "Seed: only allowed during distribution period"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8d88b9bb77ee9d216d5b2a6ad0a5e14bcbdc1adf81a450e41caaf1bcc0b37968",
                                "typeString": "literal_string \"Seed: only allowed during distribution period\""
                              }
                            ],
                            "id": 177,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5607:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5607:129:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 189,
                        "nodeType": "ExpressionStatement",
                        "src": "5607:129:0"
                      },
                      {
                        "id": 190,
                        "nodeType": "PlaceholderStatement",
                        "src": "5747:1:0"
                      }
                    ]
                  },
                  "id": 192,
                  "name": "allowedToBuy",
                  "nameLocation": "5419:12:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5431:2:0"
                  },
                  "src": "5410:346:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 210,
                    "nodeType": "Block",
                    "src": "5790:204:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 195,
                              "name": "minimumReached",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "5809:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74206d6574",
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5825:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ea0587534d65c13c5e11e9be3f22728929996356d14971fc52207eed3f266be9",
                                "typeString": "literal_string \"Seed: minimum funding amount not met\""
                              },
                              "value": "Seed: minimum funding amount not met"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ea0587534d65c13c5e11e9be3f22728929996356d14971fc52207eed3f266be9",
                                "typeString": "literal_string \"Seed: minimum funding amount not met\""
                              }
                            ],
                            "id": 194,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5801:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5801:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "5801:63:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 200,
                                  "name": "endTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21,
                                  "src": "5883:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 201,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5894:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5894:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5883:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "id": 204,
                                "name": "maximumReached",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "5913:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5883:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2074686520646973747269627574696f6e20686173206e6f74207965742066696e6973686564",
                              "id": 206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5928:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_32503fa127f946621f32e26bea9db9e0bdbdafece51707b1ec06d4bffa13dc2b",
                                "typeString": "literal_string \"Seed: the distribution has not yet finished\""
                              },
                              "value": "Seed: the distribution has not yet finished"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_32503fa127f946621f32e26bea9db9e0bdbdafece51707b1ec06d4bffa13dc2b",
                                "typeString": "literal_string \"Seed: the distribution has not yet finished\""
                              }
                            ],
                            "id": 199,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5875:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5875:99:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 208,
                        "nodeType": "ExpressionStatement",
                        "src": "5875:99:0"
                      },
                      {
                        "id": 209,
                        "nodeType": "PlaceholderStatement",
                        "src": "5985:1:0"
                      }
                    ]
                  },
                  "id": 211,
                  "name": "allowedToClaim",
                  "nameLocation": "5773:14:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5787:2:0"
                  },
                  "src": "5764:230:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 234,
                    "nodeType": "Block",
                    "src": "6031:227:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6050:7:0",
                              "subExpression": {
                                "id": 214,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "6051:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2073686f756c64206e6f7420626520706175736564",
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6059:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a23a57fe88069c51bc08c12fd26b2eebeb52db529302bad9b0964903d450e4af",
                                "typeString": "literal_string \"Seed: should not be paused\""
                              },
                              "value": "Seed: should not be paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a23a57fe88069c51bc08c12fd26b2eebeb52db529302bad9b0964903d450e4af",
                                "typeString": "literal_string \"Seed: should not be paused\""
                              }
                            ],
                            "id": 213,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6042:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6042:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 218,
                        "nodeType": "ExpressionStatement",
                        "src": "6042:46:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 220,
                                "name": "startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19,
                                "src": "6107:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 221,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "6120:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6120:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6107:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a20646973747269627574696f6e20686176656e27742073746172746564",
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6137:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b2f72f9ec81f0ebeefd4775bd3fc6040aafa12f06a22fcfdd01144f383dda52a",
                                "typeString": "literal_string \"Seed: distribution haven't started\""
                              },
                              "value": "Seed: distribution haven't started"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b2f72f9ec81f0ebeefd4775bd3fc6040aafa12f06a22fcfdd01144f383dda52a",
                                "typeString": "literal_string \"Seed: distribution haven't started\""
                              }
                            ],
                            "id": 219,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6099:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6099:75:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 226,
                        "nodeType": "ExpressionStatement",
                        "src": "6099:75:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6193:15:0",
                              "subExpression": {
                                "id": 228,
                                "name": "minimumReached",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 52,
                                "src": "6194:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206d696e696d756d20616c7265616479206d6574",
                              "id": 230,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6210:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d9e99c433f7148732f6a6e64e7968595f08274c6b3f328e88bc3aba1b137572e",
                                "typeString": "literal_string \"Seed: minimum already met\""
                              },
                              "value": "Seed: minimum already met"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d9e99c433f7148732f6a6e64e7968595f08274c6b3f328e88bc3aba1b137572e",
                                "typeString": "literal_string \"Seed: minimum already met\""
                              }
                            ],
                            "id": 227,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6185:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6185:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 232,
                        "nodeType": "ExpressionStatement",
                        "src": "6185:53:0"
                      },
                      {
                        "id": 233,
                        "nodeType": "PlaceholderStatement",
                        "src": "6249:1:0"
                      }
                    ]
                  },
                  "id": 235,
                  "name": "allowedToRetrieve",
                  "nameLocation": "6011:17:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 212,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6028:2:0"
                  },
                  "src": "6002:256:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 249,
                    "nodeType": "Block",
                    "src": "6295:151:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "6314:7:0",
                              "subExpression": {
                                "id": 238,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "6315:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2073686f756c64206e6f7420626520706175736564",
                              "id": 240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6323:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a23a57fe88069c51bc08c12fd26b2eebeb52db529302bad9b0964903d450e4af",
                                "typeString": "literal_string \"Seed: should not be paused\""
                              },
                              "value": "Seed: should not be paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a23a57fe88069c51bc08c12fd26b2eebeb52db529302bad9b0964903d450e4af",
                                "typeString": "literal_string \"Seed: should not be paused\""
                              }
                            ],
                            "id": 237,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6306:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6306:46:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 242,
                        "nodeType": "ExpressionStatement",
                        "src": "6306:46:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 244,
                              "name": "minimumReached",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "6371:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74206d6574",
                              "id": 245,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6387:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ea0587534d65c13c5e11e9be3f22728929996356d14971fc52207eed3f266be9",
                                "typeString": "literal_string \"Seed: minimum funding amount not met\""
                              },
                              "value": "Seed: minimum funding amount not met"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ea0587534d65c13c5e11e9be3f22728929996356d14971fc52207eed3f266be9",
                                "typeString": "literal_string \"Seed: minimum funding amount not met\""
                              }
                            ],
                            "id": 243,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6363:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6363:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 247,
                        "nodeType": "ExpressionStatement",
                        "src": "6363:63:0"
                      },
                      {
                        "id": 248,
                        "nodeType": "PlaceholderStatement",
                        "src": "6437:1:0"
                      }
                    ]
                  },
                  "id": 250,
                  "name": "allowedToWithdraw",
                  "nameLocation": "6275:17:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6292:2:0"
                  },
                  "src": "6266:180:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "8362:1310:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 281,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "8411:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 283,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 282,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8419:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8411:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 284,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "8425:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 286,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8433:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8425:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8411:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656564466163746f72793a2073656564546f6b656e2063616e6e6f742062652066756e64696e67546f6b656e",
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8437:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3c2f328bad54867c58ab6068866920653ae1fbd279562e938df3f7ef04e90e43",
                                "typeString": "literal_string \"SeedFactory: seedToken cannot be fundingToken\""
                              },
                              "value": "SeedFactory: seedToken cannot be fundingToken"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3c2f328bad54867c58ab6068866920653ae1fbd279562e938df3f7ef04e90e43",
                                "typeString": "literal_string \"SeedFactory: seedToken cannot be fundingToken\""
                              }
                            ],
                            "id": 280,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8403:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8403:82:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 290,
                        "nodeType": "ExpressionStatement",
                        "src": "8403:82:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 292,
                                  "name": "_softHardThresholds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 261,
                                  "src": "8504:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 294,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 293,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8524:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8504:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 295,
                                  "name": "_softHardThresholds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 261,
                                  "src": "8530:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 297,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 296,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8550:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8530:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8504:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656564466163746f72793a20686172644361702063616e6e6f74206265206c657373207468616e20736f6674436170",
                              "id": 299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8553:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1cce6066f0bd4aeb730ae5a1e283264d607d1f38279f5820ec128b47fd6559de",
                                "typeString": "literal_string \"SeedFactory: hardCap cannot be less than softCap\""
                              },
                              "value": "SeedFactory: hardCap cannot be less than softCap"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1cce6066f0bd4aeb730ae5a1e283264d607d1f38279f5820ec128b47fd6559de",
                                "typeString": "literal_string \"SeedFactory: hardCap cannot be less than softCap\""
                              }
                            ],
                            "id": 291,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8496:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8496:108:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 301,
                        "nodeType": "ExpressionStatement",
                        "src": "8496:108:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 303,
                                "name": "_vestingDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 269,
                                "src": "8623:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 304,
                                "name": "_vestingCliff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "8643:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "8623:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656564466163746f72793a2076657374696e674475726174696f6e2063616e6e6f74206265206c657373207468616e2076657374696e67436c696666",
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8658:63:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_73ba4871f70fabb19406955e457a3974226273a196427c3f2e8175668060ef2d",
                                "typeString": "literal_string \"SeedFactory: vestingDuration cannot be less than vestingCliff\""
                              },
                              "value": "SeedFactory: vestingDuration cannot be less than vestingCliff"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_73ba4871f70fabb19406955e457a3974226273a196427c3f2e8175668060ef2d",
                                "typeString": "literal_string \"SeedFactory: vestingDuration cannot be less than vestingCliff\""
                              }
                            ],
                            "id": 302,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8615:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8615:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 308,
                        "nodeType": "ExpressionStatement",
                        "src": "8615:107:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 310,
                                "name": "_endTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 267,
                                "src": "8741:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 311,
                                "name": "_startTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 265,
                                "src": "8752:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8741:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c657373207468616e20657175616c20746f20737461727454696d65",
                              "id": 313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8764:61:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_45b6d46e7f4bbf195001bffdfc00bdc86e3217f69fc1268b5f1ecfa0a6c7ea90",
                                "typeString": "literal_string \"SeedFactory: endTime cannot be less than equal to startTime\""
                              },
                              "value": "SeedFactory: endTime cannot be less than equal to startTime"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_45b6d46e7f4bbf195001bffdfc00bdc86e3217f69fc1268b5f1ecfa0a6c7ea90",
                                "typeString": "literal_string \"SeedFactory: endTime cannot be less than equal to startTime\""
                              }
                            ],
                            "id": 309,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8733:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8733:93:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 315,
                        "nodeType": "ExpressionStatement",
                        "src": "8733:93:0"
                      },
                      {
                        "expression": {
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 316,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "8839:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 317,
                            "name": "_beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 253,
                            "src": "8859:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8839:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "8839:32:0"
                      },
                      {
                        "expression": {
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 320,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "8882:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 321,
                            "name": "_admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 255,
                            "src": "8902:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8882:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 323,
                        "nodeType": "ExpressionStatement",
                        "src": "8882:26:0"
                      },
                      {
                        "expression": {
                          "id": 328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 324,
                            "name": "softCap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "8919:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 325,
                              "name": "_softHardThresholds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "8939:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 327,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8959:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8939:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8919:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 329,
                        "nodeType": "ExpressionStatement",
                        "src": "8919:42:0"
                      },
                      {
                        "expression": {
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 330,
                            "name": "hardCap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "8972:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 331,
                              "name": "_softHardThresholds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "8992:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 333,
                            "indexExpression": {
                              "hexValue": "31",
                              "id": 332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9012:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8992:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8972:42:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 335,
                        "nodeType": "ExpressionStatement",
                        "src": "8972:42:0"
                      },
                      {
                        "expression": {
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 336,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "9025:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 337,
                            "name": "_price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 263,
                            "src": "9045:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9025:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 339,
                        "nodeType": "ExpressionStatement",
                        "src": "9025:26:0"
                      },
                      {
                        "expression": {
                          "id": 342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 340,
                            "name": "startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "9062:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 341,
                            "name": "_startTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "9082:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9062:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 343,
                        "nodeType": "ExpressionStatement",
                        "src": "9062:30:0"
                      },
                      {
                        "expression": {
                          "id": 346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 344,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "9103:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 345,
                            "name": "_endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 267,
                            "src": "9123:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9103:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 347,
                        "nodeType": "ExpressionStatement",
                        "src": "9103:28:0"
                      },
                      {
                        "expression": {
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 348,
                            "name": "vestingStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "9142:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 349,
                            "name": "endTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "9162:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9142:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 351,
                        "nodeType": "ExpressionStatement",
                        "src": "9142:27:0"
                      },
                      {
                        "expression": {
                          "id": 354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 352,
                            "name": "vestingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "9180:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 353,
                            "name": "_vestingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "9200:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "9180:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 355,
                        "nodeType": "ExpressionStatement",
                        "src": "9180:36:0"
                      },
                      {
                        "expression": {
                          "id": 358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 356,
                            "name": "vestingCliff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "9227:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 357,
                            "name": "_vestingCliff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "9247:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "9227:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 359,
                        "nodeType": "ExpressionStatement",
                        "src": "9227:33:0"
                      },
                      {
                        "expression": {
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 360,
                            "name": "permissionedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23,
                            "src": "9271:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 361,
                            "name": "_permissionedSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "9291:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9271:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 363,
                        "nodeType": "ExpressionStatement",
                        "src": "9271:37:0"
                      },
                      {
                        "expression": {
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 364,
                            "name": "seedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "9319:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1519",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 366,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "9346:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 368,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 367,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9354:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9346:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 365,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1519,
                              "src": "9339:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1519_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9339:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1519",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "9319:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1519",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 371,
                        "nodeType": "ExpressionStatement",
                        "src": "9319:38:0"
                      },
                      {
                        "expression": {
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 372,
                            "name": "fundingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33,
                            "src": "9368:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1519",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 374,
                                  "name": "_tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "9395:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 376,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 375,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9403:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9395:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 373,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1519,
                              "src": "9388:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$1519_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9388:18:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1519",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "9368:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1519",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "9368:38:0"
                      },
                      {
                        "expression": {
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 380,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 35,
                            "src": "9417:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 381,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "9437:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "9417:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 383,
                        "nodeType": "ExpressionStatement",
                        "src": "9417:24:0"
                      },
                      {
                        "expression": {
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 384,
                            "name": "seedAmountRequired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "9454:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 387,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 385,
                                    "name": "hardCap",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11,
                                    "src": "9476:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 386,
                                    "name": "PCT_BASE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42,
                                    "src": "9484:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "9476:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 388,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9475:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 389,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 263,
                              "src": "9496:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9475:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9454:48:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 392,
                        "nodeType": "ExpressionStatement",
                        "src": "9454:48:0"
                      },
                      {
                        "expression": {
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 393,
                            "name": "feeAmountRequired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "9513:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 394,
                                    "name": "seedAmountRequired",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 13,
                                    "src": "9535:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 395,
                                    "name": "_fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 275,
                                    "src": "9554:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "9535:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 397,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "9534:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9562:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "9534:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9513:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 401,
                        "nodeType": "ExpressionStatement",
                        "src": "9513:52:0"
                      },
                      {
                        "expression": {
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 402,
                            "name": "seedRemainder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "9576:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 403,
                            "name": "seedAmountRequired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "9597:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9576:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 405,
                        "nodeType": "ExpressionStatement",
                        "src": "9576:39:0"
                      },
                      {
                        "expression": {
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 406,
                            "name": "feeRemainder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "9626:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 407,
                            "name": "feeAmountRequired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "9647:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9626:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "9626:38:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 251,
                    "nodeType": "StructuredDocumentation",
                    "src": "6454:1506:0",
                    "text": " @dev                          Initialize Seed.\n @param _beneficiary           The address that recieves fees.\n @param _admin                 The address of the admin of this contract. Funds contract\nand has permissions to whitelist users, pause and close contract.\n @param _tokens                Array containing two params:\n- The address of the seed token being distributed.\n                                 - The address of the funding token being exchanged for seed token.\n @param _softHardThresholds     Array containing two params:\n- the minimum funding token collection threshold in wei denomination.\n- the highest possible funding token amount to be raised in wei denomination.\n @param _price                 The price in wei of fundingTokens when exchanged for seedTokens.\n @param _startTime             Distribution start time in unix timecode.\n @param _endTime               Distribution end time in unix timecode.\n @param _vestingDuration       Vesting period duration in seconds.\n @param _vestingCliff          Cliff duration in seconds.\n @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\n @param _fee                   Success fee expressed as a % (e.g. 2 = 2% fee)"
                  },
                  "functionSelector": "d8039364",
                  "id": 411,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 278,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 277,
                        "name": "initializer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 130,
                        "src": "8345:11:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8345:11:0"
                    }
                  ],
                  "name": "initialize",
                  "nameLocation": "7975:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 253,
                        "mutability": "mutable",
                        "name": "_beneficiary",
                        "nameLocation": "8004:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "7996:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 252,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7996:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "_admin",
                        "nameLocation": "8035:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8027:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8027:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "_tokens",
                        "nameLocation": "8069:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8052:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 256,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8052:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 257,
                          "nodeType": "ArrayTypeName",
                          "src": "8052:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "_softHardThresholds",
                        "nameLocation": "8104:19:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8087:36:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 259,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8087:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 260,
                          "nodeType": "ArrayTypeName",
                          "src": "8087:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 263,
                        "mutability": "mutable",
                        "name": "_price",
                        "nameLocation": "8142:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8134:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 262,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8134:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "_startTime",
                        "nameLocation": "8167:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8159:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 264,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8159:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 267,
                        "mutability": "mutable",
                        "name": "_endTime",
                        "nameLocation": "8196:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8188:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 266,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8188:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 269,
                        "mutability": "mutable",
                        "name": "_vestingDuration",
                        "nameLocation": "8223:16:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8215:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 268,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8215:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "_vestingCliff",
                        "nameLocation": "8258:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8250:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "8250:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "_permissionedSeed",
                        "nameLocation": "8290:17:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8282:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "8282:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "8326:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 411,
                        "src": "8318:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "8318:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7985:352:0"
                  },
                  "returnParameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8362:0:0"
                  },
                  "scope": 1142,
                  "src": "7966:1706:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 586,
                    "nodeType": "Block",
                    "src": "9918:2235:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "9933:9:0",
                          "subExpression": {
                            "id": 425,
                            "name": "isFunded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "9934:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 447,
                        "nodeType": "IfStatement",
                        "src": "9929:213:0",
                        "trueBody": {
                          "id": 446,
                          "nodeType": "Block",
                          "src": "9944:198:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 438,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 432,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "9995:4:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Seed_$1142",
                                                "typeString": "contract Seed"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_Seed_$1142",
                                                "typeString": "contract Seed"
                                              }
                                            ],
                                            "id": 431,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "9987:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 430,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "9987:7:0",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 433,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "9987:13:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 428,
                                          "name": "seedToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 30,
                                          "src": "9967:9:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1519",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 429,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "balanceOf",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1458,
                                        "src": "9967:19:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 434,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "9967:34:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 437,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 435,
                                        "name": "seedAmountRequired",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 13,
                                        "src": "10005:18:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 436,
                                        "name": "feeAmountRequired",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 15,
                                        "src": "10026:17:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "10005:38:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9967:76:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "536565643a2073756666696369656e74207365656473206e6f742070726f7669646564",
                                    "id": 439,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10062:37:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c9494f463e237819baf53c3c4a213e5892045b4750e358c413fde0f19cad1cfe",
                                      "typeString": "literal_string \"Seed: sufficient seeds not provided\""
                                    },
                                    "value": "Seed: sufficient seeds not provided"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c9494f463e237819baf53c3c4a213e5892045b4750e358c413fde0f19cad1cfe",
                                      "typeString": "literal_string \"Seed: sufficient seeds not provided\""
                                    }
                                  ],
                                  "id": 427,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "9959:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9959:141:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 441,
                              "nodeType": "ExpressionStatement",
                              "src": "9959:141:0"
                            },
                            {
                              "expression": {
                                "id": 444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 442,
                                  "name": "isFunded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 48,
                                  "src": "10115:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 443,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10126:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "10115:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 445,
                              "nodeType": "ExpressionStatement",
                              "src": "10115:15:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          449
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 449,
                            "mutability": "mutable",
                            "name": "seedAmount",
                            "nameLocation": "10258:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 586,
                            "src": "10250:18:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 448,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10250:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 456,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 450,
                                  "name": "_fundingAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "10272:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 451,
                                  "name": "PCT_BASE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42,
                                  "src": "10287:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10272:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 453,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10271:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 454,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17,
                            "src": "10297:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10271:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10250:52:0"
                      },
                      {
                        "assignments": [
                          458
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 458,
                            "mutability": "mutable",
                            "name": "fundingBalance",
                            "nameLocation": "10375:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 586,
                            "src": "10367:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 457,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10367:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 460,
                        "initialValue": {
                          "id": 459,
                          "name": "fundingCollected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68,
                          "src": "10392:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10367:41:0"
                      },
                      {
                        "assignments": [
                          462
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 462,
                            "mutability": "mutable",
                            "name": "feeAmount",
                            "nameLocation": "10505:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 586,
                            "src": "10497:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 461,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10497:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 469,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 465,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 463,
                                  "name": "seedAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 449,
                                  "src": "10518:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 464,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "10529:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "10518:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 466,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10517:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10536:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "10517:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10497:42:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 473,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 471,
                                  "name": "fundingBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 458,
                                  "src": "10632:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 472,
                                  "name": "_fundingAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "10649:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10632:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "id": 474,
                                "name": "hardCap",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "10667:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10632:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a20616d6f756e74206578636565647320636f6e74726163742073616c652068617264436170",
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10689:44:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_20e0acef2a6370d241b67cb40da819b5af23cd4715cdceab16f790f16d7e5265",
                                "typeString": "literal_string \"Seed: amount exceeds contract sale hardCap\""
                              },
                              "value": "Seed: amount exceeds contract sale hardCap"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_20e0acef2a6370d241b67cb40da819b5af23cd4715cdceab16f790f16d7e5265",
                                "typeString": "literal_string \"Seed: amount exceeds contract sale hardCap\""
                              }
                            ],
                            "id": 470,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10623:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10623:111:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 478,
                        "nodeType": "ExpressionStatement",
                        "src": "10623:111:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 480,
                                "name": "seedRemainder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60,
                                "src": "10756:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 481,
                                "name": "seedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 449,
                                "src": "10773:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10756:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a207365656420646973747269627574696f6e20776f756c64206265206578636565646564",
                              "id": 483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10798:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7adf7eb97637e21704a264094ca0e4f99defabca846e0ecfbb17a13995cec547",
                                "typeString": "literal_string \"Seed: seed distribution would be exceeded\""
                              },
                              "value": "Seed: seed distribution would be exceeded"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7adf7eb97637e21704a264094ca0e4f99defabca846e0ecfbb17a13995cec547",
                                "typeString": "literal_string \"Seed: seed distribution would be exceeded\""
                              }
                            ],
                            "id": 479,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10747:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10747:95:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 485,
                        "nodeType": "ExpressionStatement",
                        "src": "10747:95:0"
                      },
                      {
                        "expression": {
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 486,
                            "name": "fundingCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "10855:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 487,
                              "name": "fundingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "10874:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 488,
                              "name": "_fundingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "10891:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10874:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10855:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 491,
                        "nodeType": "ExpressionStatement",
                        "src": "10855:50:0"
                      },
                      {
                        "expression": {
                          "id": 494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 492,
                            "name": "seedRemainder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "10980:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 493,
                            "name": "seedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 449,
                            "src": "10997:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10980:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 495,
                        "nodeType": "ExpressionStatement",
                        "src": "10980:27:0"
                      },
                      {
                        "expression": {
                          "id": 498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 496,
                            "name": "feeRemainder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "11018:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 497,
                            "name": "feeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 462,
                            "src": "11035:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11018:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 499,
                        "nodeType": "ExpressionStatement",
                        "src": "11018:26:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 503,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "11175:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "11175:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 507,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "11195:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Seed_$1142",
                                        "typeString": "contract Seed"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Seed_$1142",
                                        "typeString": "contract Seed"
                                      }
                                    ],
                                    "id": 506,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "11187:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 505,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "11187:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 508,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11187:13:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 509,
                                  "name": "_fundingAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "11202:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 501,
                                  "name": "fundingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "11149:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1519",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1500,
                                "src": "11149:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 510,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11149:68:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206e6f20746f6b656e73",
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11219:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9b05eb0df5e87a3e2fb5b77f5dc8aeb2610f2470b51da808081f9d80b49571fa",
                                "typeString": "literal_string \"Seed: no tokens\""
                              },
                              "value": "Seed: no tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9b05eb0df5e87a3e2fb5b77f5dc8aeb2610f2470b51da808081f9d80b49571fa",
                                "typeString": "literal_string \"Seed: no tokens\""
                              }
                            ],
                            "id": 500,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11141:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11141:96:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 513,
                        "nodeType": "ExpressionStatement",
                        "src": "11141:96:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 514,
                            "name": "fundingCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "11254:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 515,
                            "name": "softCap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "11274:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11254:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 522,
                        "nodeType": "IfStatement",
                        "src": "11250:81:0",
                        "trueBody": {
                          "id": 521,
                          "nodeType": "Block",
                          "src": "11283:48:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 517,
                                  "name": "minimumReached",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 52,
                                  "src": "11298:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11315:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "11298:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 520,
                              "nodeType": "ExpressionStatement",
                              "src": "11298:21:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 523,
                            "name": "fundingCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "11345:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 524,
                            "name": "hardCap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "11365:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11345:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 536,
                        "nodeType": "IfStatement",
                        "src": "11341:129:0",
                        "trueBody": {
                          "id": 535,
                          "nodeType": "Block",
                          "src": "11374:96:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 526,
                                  "name": "maximumReached",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54,
                                  "src": "11389:14:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 527,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11406:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "11389:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 529,
                              "nodeType": "ExpressionStatement",
                              "src": "11389:21:0"
                            },
                            {
                              "expression": {
                                "id": 533,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 530,
                                  "name": "vestingStartTime",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "11425:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 531,
                                    "name": "_currentTime",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1102,
                                    "src": "11444:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view returns (uint256)"
                                    }
                                  },
                                  "id": 532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11444:14:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11425:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 534,
                              "nodeType": "ExpressionStatement",
                              "src": "11425:33:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 538,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11507:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11507:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 546,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 540,
                                        "name": "funders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 79,
                                        "src": "11533:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                                          "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                                        }
                                      },
                                      "id": 543,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 541,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "11541:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 542,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "11541:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11533:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                                        "typeString": "struct Seed.FunderPortfolio storage ref"
                                      }
                                    },
                                    "id": 544,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "seedAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 107,
                                    "src": "11533:30:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 545,
                                    "name": "seedAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 449,
                                    "src": "11566:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11533:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 547,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11532:45:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 548,
                                        "name": "funders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 79,
                                        "src": "11643:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                                          "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                                        }
                                      },
                                      "id": 551,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 549,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "11651:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 550,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "11651:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11643:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                                        "typeString": "struct Seed.FunderPortfolio storage ref"
                                      }
                                    },
                                    "id": 552,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "fundingAmount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 111,
                                    "src": "11643:33:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 553,
                                    "name": "_fundingAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 414,
                                    "src": "11679:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11643:50:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 555,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11642:52:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 556,
                                  "name": "funders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79,
                                  "src": "11758:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                                    "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                                  }
                                },
                                "id": 559,
                                "indexExpression": {
                                  "expression": {
                                    "id": 557,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "11766:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 558,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "11766:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11758:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                                  "typeString": "struct Seed.FunderPortfolio storage ref"
                                }
                              },
                              "id": 560,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalClaimed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 109,
                              "src": "11758:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 561,
                                        "name": "funders",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 79,
                                        "src": "11806:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                                          "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                                        }
                                      },
                                      "id": 564,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 562,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "11814:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 563,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "11814:10:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11806:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                                        "typeString": "struct Seed.FunderPortfolio storage ref"
                                      }
                                    },
                                    "id": 565,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "fee",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 113,
                                    "src": "11806:23:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 566,
                                    "name": "feeAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 462,
                                    "src": "11832:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11806:35:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 568,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "11805:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 569,
                                  "name": "funders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79,
                                  "src": "11900:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                                    "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                                  }
                                },
                                "id": 572,
                                "indexExpression": {
                                  "expression": {
                                    "id": 570,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "11908:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "11908:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11900:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                                  "typeString": "struct Seed.FunderPortfolio storage ref"
                                }
                              },
                              "id": 573,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "feeClaimed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 115,
                              "src": "11900:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 537,
                            "name": "_addFunder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1141,
                            "src": "11482:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11482:463:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "11482:463:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 577,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "12079:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "12079:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 579,
                              "name": "seedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 449,
                              "src": "12091:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 576,
                            "name": "SeedsPurchased",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "12064:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12064:38:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 581,
                        "nodeType": "EmitStatement",
                        "src": "12059:43:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 582,
                              "name": "seedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 449,
                              "src": "12123:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 583,
                              "name": "feeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 462,
                              "src": "12135:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 584,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12122:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256)"
                          }
                        },
                        "functionReturnParameters": 424,
                        "id": 585,
                        "nodeType": "Return",
                        "src": "12115:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 412,
                    "nodeType": "StructuredDocumentation",
                    "src": "9680:140:0",
                    "text": " @dev                     Buy seed tokens.\n @param _fundingAmount    The amount of funding tokens to contribute."
                  },
                  "functionSelector": "d96a094a",
                  "id": 587,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 417,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 416,
                        "name": "isActive",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 158,
                        "src": "9870:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9870:8:0"
                    },
                    {
                      "id": 419,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 418,
                        "name": "allowedToBuy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 192,
                        "src": "9879:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9879:12:0"
                    }
                  ],
                  "name": "buy",
                  "nameLocation": "9835:3:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 415,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 414,
                        "mutability": "mutable",
                        "name": "_fundingAmount",
                        "nameLocation": "9847:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 587,
                        "src": "9839:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 413,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9839:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9838:24:0"
                  },
                  "returnParameters": {
                    "id": 424,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 587,
                        "src": "9900:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9900:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 423,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 587,
                        "src": "9909:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 422,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9909:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9899:18:0"
                  },
                  "scope": 1142,
                  "src": "9826:2327:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 692,
                    "nodeType": "Block",
                    "src": "12508:1009:0",
                    "statements": [
                      {
                        "assignments": [
                          600
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 600,
                            "mutability": "mutable",
                            "name": "amountClaimable",
                            "nameLocation": "12527:15:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 692,
                            "src": "12519:23:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 599,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12519:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 601,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12519:23:0"
                      },
                      {
                        "expression": {
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 602,
                            "name": "amountClaimable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 600,
                            "src": "12555:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 604,
                                "name": "_funder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 590,
                                "src": "12588:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 603,
                              "name": "calculateClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "12573:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12573:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12555:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 607,
                        "nodeType": "ExpressionStatement",
                        "src": "12555:41:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 609,
                                "name": "amountClaimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 600,
                                "src": "12615:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12633:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12615:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a20616d6f756e7420636c61696d61626c652069732030",
                              "id": 612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12636:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f1b8448054190aa0ef3da617dffb2bc089590a0eaeef83ccf0b57e502985cc9a",
                                "typeString": "literal_string \"Seed: amount claimable is 0\""
                              },
                              "value": "Seed: amount claimable is 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f1b8448054190aa0ef3da617dffb2bc089590a0eaeef83ccf0b57e502985cc9a",
                                "typeString": "literal_string \"Seed: amount claimable is 0\""
                              }
                            ],
                            "id": 608,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12607:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12607:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 614,
                        "nodeType": "ExpressionStatement",
                        "src": "12607:59:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 616,
                                "name": "amountClaimable",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 600,
                                "src": "12685:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 617,
                                "name": "_claimAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 592,
                                "src": "12704:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12685:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a20726571756573742069732067726561746572207468616e20636c61696d61626c6520616d6f756e74",
                              "id": 619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12718:48:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1bddfa32fa0b2e8e2af236a05fb0f44ec6b69708e8234aab487a02912862eb44",
                                "typeString": "literal_string \"Seed: request is greater than claimable amount\""
                              },
                              "value": "Seed: request is greater than claimable amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1bddfa32fa0b2e8e2af236a05fb0f44ec6b69708e8234aab487a02912862eb44",
                                "typeString": "literal_string \"Seed: request is greater than claimable amount\""
                              }
                            ],
                            "id": 615,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12677:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12677:90:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 621,
                        "nodeType": "ExpressionStatement",
                        "src": "12677:90:0"
                      },
                      {
                        "assignments": [
                          623
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 623,
                            "mutability": "mutable",
                            "name": "feeAmountOnClaim",
                            "nameLocation": "12786:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 692,
                            "src": "12778:24:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 622,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "12778:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 630,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 624,
                                  "name": "_claimAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 592,
                                  "src": "12806:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 625,
                                  "name": "fee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 35,
                                  "src": "12821:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "12806:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 627,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12805:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12828:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "12805:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12778:53:0"
                      },
                      {
                        "assignments": [
                          633
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 633,
                            "mutability": "mutable",
                            "name": "tokenFunder",
                            "nameLocation": "12867:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 692,
                            "src": "12844:34:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                              "typeString": "struct Seed.FunderPortfolio"
                            },
                            "typeName": {
                              "id": 632,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 631,
                                "name": "FunderPortfolio",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 116,
                                "src": "12844:15:0"
                              },
                              "referencedDeclaration": 116,
                              "src": "12844:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage_ptr",
                                "typeString": "struct Seed.FunderPortfolio"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 637,
                        "initialValue": {
                          "baseExpression": {
                            "id": 634,
                            "name": "funders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "12881:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                              "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                            }
                          },
                          "id": 636,
                          "indexExpression": {
                            "id": 635,
                            "name": "_funder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 590,
                            "src": "12889:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12881:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                            "typeString": "struct Seed.FunderPortfolio storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12844:53:0"
                      },
                      {
                        "expression": {
                          "id": 642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 638,
                              "name": "tokenFunder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "12910:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                "typeString": "struct Seed.FunderPortfolio memory"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "totalClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 109,
                            "src": "12910:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 641,
                            "name": "_claimAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "12941:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12910:43:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 643,
                        "nodeType": "ExpressionStatement",
                        "src": "12910:43:0"
                      },
                      {
                        "expression": {
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 644,
                              "name": "tokenFunder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 633,
                              "src": "12964:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                "typeString": "struct Seed.FunderPortfolio memory"
                              }
                            },
                            "id": 646,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "feeClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "12964:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 647,
                            "name": "feeAmountOnClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "12995:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12964:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "12964:47:0"
                      },
                      {
                        "expression": {
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 650,
                              "name": "funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "13022:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                                "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "id": 651,
                              "name": "_funder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 590,
                              "src": "13030:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13022:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                              "typeString": "struct Seed.FunderPortfolio storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 653,
                            "name": "tokenFunder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "13041:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                              "typeString": "struct Seed.FunderPortfolio memory"
                            }
                          },
                          "src": "13022:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                            "typeString": "struct Seed.FunderPortfolio storage ref"
                          }
                        },
                        "id": 655,
                        "nodeType": "ExpressionStatement",
                        "src": "13022:30:0"
                      },
                      {
                        "expression": {
                          "id": 658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 656,
                            "name": "seedClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62,
                            "src": "13065:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 657,
                            "name": "_claimAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 592,
                            "src": "13080:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13065:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 659,
                        "nodeType": "ExpressionStatement",
                        "src": "13065:27:0"
                      },
                      {
                        "expression": {
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 660,
                            "name": "feeClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66,
                            "src": "13103:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 661,
                            "name": "feeAmountOnClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 623,
                            "src": "13118:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13103:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 663,
                        "nodeType": "ExpressionStatement",
                        "src": "13103:31:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 667,
                                  "name": "beneficiary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5,
                                  "src": "13172:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 668,
                                  "name": "feeAmountOnClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 623,
                                  "src": "13185:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 665,
                                  "name": "seedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "13153:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1519",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1468,
                                "src": "13153:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13153:49:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2063616e6e6f74207472616e7366657220746f2062656e6566696369617279",
                              "id": 670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13204:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fe89ce1ef99a5d6714f309a8d01d9e520903bcfd255cf4241ce42b3145d7fd6f",
                                "typeString": "literal_string \"Seed: cannot transfer to beneficiary\""
                              },
                              "value": "Seed: cannot transfer to beneficiary"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fe89ce1ef99a5d6714f309a8d01d9e520903bcfd255cf4241ce42b3145d7fd6f",
                                "typeString": "literal_string \"Seed: cannot transfer to beneficiary\""
                              }
                            ],
                            "id": 664,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13145:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13145:98:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 672,
                        "nodeType": "ExpressionStatement",
                        "src": "13145:98:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 676,
                                  "name": "_funder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 590,
                                  "src": "13281:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 677,
                                  "name": "_claimAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 592,
                                  "src": "13290:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 674,
                                  "name": "seedToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "13262:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1519",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1468,
                                "src": "13262:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13262:41:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206e6f20746f6b656e73",
                              "id": 679,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13305:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9b05eb0df5e87a3e2fb5b77f5dc8aeb2610f2470b51da808081f9d80b49571fa",
                                "typeString": "literal_string \"Seed: no tokens\""
                              },
                              "value": "Seed: no tokens"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9b05eb0df5e87a3e2fb5b77f5dc8aeb2610f2470b51da808081f9d80b49571fa",
                                "typeString": "literal_string \"Seed: no tokens\""
                              }
                            ],
                            "id": 673,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13254:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13254:69:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 681,
                        "nodeType": "ExpressionStatement",
                        "src": "13254:69:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 683,
                              "name": "_funder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 590,
                              "src": "13355:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 684,
                              "name": "_claimAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 592,
                              "src": "13364:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 685,
                              "name": "beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5,
                              "src": "13378:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 686,
                              "name": "feeAmountOnClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "13391:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 682,
                            "name": "TokensClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 95,
                            "src": "13341:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,address,uint256)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13341:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 688,
                        "nodeType": "EmitStatement",
                        "src": "13336:72:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 689,
                              "name": "feeAmountOnClaim",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 623,
                              "src": "13492:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 690,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13491:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 598,
                        "id": 691,
                        "nodeType": "Return",
                        "src": "13484:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 588,
                    "nodeType": "StructuredDocumentation",
                    "src": "12161:248:0",
                    "text": " @dev                     Claim vested seed tokens.\n @param _funder           Address of funder to calculate seconds and amount claimable\n @param _claimAmount      The amount of seed token a users wants to claim."
                  },
                  "functionSelector": "aad3ec96",
                  "id": 693,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 595,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 594,
                        "name": "allowedToClaim",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 211,
                        "src": "12476:14:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12476:14:0"
                    }
                  ],
                  "name": "claim",
                  "nameLocation": "12424:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "_funder",
                        "nameLocation": "12438:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 693,
                        "src": "12430:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12430:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 592,
                        "mutability": "mutable",
                        "name": "_claimAmount",
                        "nameLocation": "12455:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 693,
                        "src": "12447:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 591,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12447:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12429:39:0"
                  },
                  "returnParameters": {
                    "id": 598,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 693,
                        "src": "12499:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12499:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12498:9:0"
                  },
                  "scope": 1142,
                  "src": "12415:1102:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 782,
                    "nodeType": "Block",
                    "src": "13671:771:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 702,
                                    "name": "funders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 79,
                                    "src": "13690:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                                      "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                                    }
                                  },
                                  "id": 705,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 703,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "13698:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "13698:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13690:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                                    "typeString": "struct Seed.FunderPortfolio storage ref"
                                  }
                                },
                                "id": 706,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fundingAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 111,
                                "src": "13690:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13726:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "13690:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a207a65726f2066756e64696e6720616d6f756e74",
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13729:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f2ca9e11358b1d32b639d33ff3722add87022e1b36fa5c6977a66a7546dde75c",
                                "typeString": "literal_string \"Seed: zero funding amount\""
                              },
                              "value": "Seed: zero funding amount"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f2ca9e11358b1d32b639d33ff3722add87022e1b36fa5c6977a66a7546dde75c",
                                "typeString": "literal_string \"Seed: zero funding amount\""
                              }
                            ],
                            "id": 701,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13682:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13682:75:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 711,
                        "nodeType": "ExpressionStatement",
                        "src": "13682:75:0"
                      },
                      {
                        "assignments": [
                          714
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 714,
                            "mutability": "mutable",
                            "name": "tokenFunder",
                            "nameLocation": "13791:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 782,
                            "src": "13768:34:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                              "typeString": "struct Seed.FunderPortfolio"
                            },
                            "typeName": {
                              "id": 713,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 712,
                                "name": "FunderPortfolio",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 116,
                                "src": "13768:15:0"
                              },
                              "referencedDeclaration": 116,
                              "src": "13768:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage_ptr",
                                "typeString": "struct Seed.FunderPortfolio"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 719,
                        "initialValue": {
                          "baseExpression": {
                            "id": 715,
                            "name": "funders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "13805:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                              "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                            }
                          },
                          "id": 718,
                          "indexExpression": {
                            "expression": {
                              "id": 716,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "13813:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "13813:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13805:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                            "typeString": "struct Seed.FunderPortfolio storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13768:56:0"
                      },
                      {
                        "assignments": [
                          721
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 721,
                            "mutability": "mutable",
                            "name": "fundingAmount",
                            "nameLocation": "13843:13:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 782,
                            "src": "13835:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 720,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "13835:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 724,
                        "initialValue": {
                          "expression": {
                            "id": 722,
                            "name": "tokenFunder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 714,
                            "src": "13859:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                              "typeString": "struct Seed.FunderPortfolio memory"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fundingAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 111,
                          "src": "13859:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13835:49:0"
                      },
                      {
                        "expression": {
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 725,
                            "name": "seedRemainder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60,
                            "src": "13895:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 726,
                              "name": "tokenFunder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "13912:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                "typeString": "struct Seed.FunderPortfolio memory"
                              }
                            },
                            "id": 727,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 107,
                            "src": "13912:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13895:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 729,
                        "nodeType": "ExpressionStatement",
                        "src": "13895:39:0"
                      },
                      {
                        "expression": {
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 730,
                            "name": "feeRemainder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 64,
                            "src": "13945:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "id": 731,
                              "name": "tokenFunder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "13961:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                "typeString": "struct Seed.FunderPortfolio memory"
                              }
                            },
                            "id": 732,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 113,
                            "src": "13961:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13945:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 734,
                        "nodeType": "ExpressionStatement",
                        "src": "13945:31:0"
                      },
                      {
                        "expression": {
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 735,
                              "name": "tokenFunder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "13987:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                "typeString": "struct Seed.FunderPortfolio memory"
                              }
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "seedAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 107,
                            "src": "13987:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14015:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "13987:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 740,
                        "nodeType": "ExpressionStatement",
                        "src": "13987:29:0"
                      },
                      {
                        "expression": {
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 741,
                              "name": "tokenFunder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "14027:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                "typeString": "struct Seed.FunderPortfolio memory"
                              }
                            },
                            "id": 743,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 113,
                            "src": "14027:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 744,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14055:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14027:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 746,
                        "nodeType": "ExpressionStatement",
                        "src": "14027:29:0"
                      },
                      {
                        "expression": {
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 747,
                              "name": "tokenFunder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 714,
                              "src": "14067:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                "typeString": "struct Seed.FunderPortfolio memory"
                              }
                            },
                            "id": 749,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "fundingAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 111,
                            "src": "14067:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14095:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14067:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 752,
                        "nodeType": "ExpressionStatement",
                        "src": "14067:29:0"
                      },
                      {
                        "expression": {
                          "id": 758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 753,
                              "name": "funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "14107:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                                "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                              }
                            },
                            "id": 756,
                            "indexExpression": {
                              "expression": {
                                "id": 754,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14115:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 755,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14115:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14107:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                              "typeString": "struct Seed.FunderPortfolio storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 757,
                            "name": "tokenFunder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 714,
                            "src": "14130:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                              "typeString": "struct Seed.FunderPortfolio memory"
                            }
                          },
                          "src": "14107:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                            "typeString": "struct Seed.FunderPortfolio storage ref"
                          }
                        },
                        "id": 759,
                        "nodeType": "ExpressionStatement",
                        "src": "14107:34:0"
                      },
                      {
                        "expression": {
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 760,
                            "name": "fundingCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "14152:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 761,
                            "name": "fundingAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 721,
                            "src": "14172:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14152:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 763,
                        "nodeType": "ExpressionStatement",
                        "src": "14152:33:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 767,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "14240:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 768,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "14240:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 769,
                                  "name": "fundingAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 721,
                                  "src": "14252:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 765,
                                  "name": "fundingToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 33,
                                  "src": "14218:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1519",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 766,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1468,
                                "src": "14218:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 770,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14218:48:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2063616e6e6f742072657475726e2066756e64696e6720746f6b656e7320746f206d73672e73656e646572",
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14281:50:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6cb63436ed2c012e3e5e63503379bd6676b0608abf76cc13af246b5cf14d3cd4",
                                "typeString": "literal_string \"Seed: cannot return funding tokens to msg.sender\""
                              },
                              "value": "Seed: cannot return funding tokens to msg.sender"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6cb63436ed2c012e3e5e63503379bd6676b0608abf76cc13af246b5cf14d3cd4",
                                "typeString": "literal_string \"Seed: cannot return funding tokens to msg.sender\""
                              }
                            ],
                            "id": 764,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14196:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14196:146:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 773,
                        "nodeType": "ExpressionStatement",
                        "src": "14196:146:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 775,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "14375:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "14375:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 777,
                              "name": "fundingAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 721,
                              "src": "14387:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 774,
                            "name": "FundingReclaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "14358:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14358:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 779,
                        "nodeType": "EmitStatement",
                        "src": "14353:48:0"
                      },
                      {
                        "expression": {
                          "id": 780,
                          "name": "fundingAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 721,
                          "src": "14421:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 700,
                        "id": 781,
                        "nodeType": "Return",
                        "src": "14414:20:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 694,
                    "nodeType": "StructuredDocumentation",
                    "src": "13525:65:0",
                    "text": " @dev         Returns funding tokens to user."
                  },
                  "functionSelector": "8a2448aa",
                  "id": 783,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 697,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 696,
                        "name": "allowedToRetrieve",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 235,
                        "src": "13636:17:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13636:17:0"
                    }
                  ],
                  "name": "retrieveFundingTokens",
                  "nameLocation": "13605:21:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 695,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13626:2:0"
                  },
                  "returnParameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 783,
                        "src": "13662:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "13662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13661:9:0"
                  },
                  "scope": 1142,
                  "src": "13596:846:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 795,
                    "nodeType": "Block",
                    "src": "14588:32:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 791,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "14599:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14608:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "14599:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 794,
                        "nodeType": "ExpressionStatement",
                        "src": "14599:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 784,
                    "nodeType": "StructuredDocumentation",
                    "src": "14474:65:0",
                    "text": " @dev                     Pause distribution."
                  },
                  "functionSelector": "8456cb59",
                  "id": 796,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 787,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 786,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 142,
                        "src": "14569:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14569:9:0"
                    },
                    {
                      "id": 789,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 788,
                        "name": "isActive",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 158,
                        "src": "14579:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14579:8:0"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "14554:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 785,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14559:2:0"
                  },
                  "returnParameters": {
                    "id": 790,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14588:0:0"
                  },
                  "scope": 1142,
                  "src": "14545:75:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 820,
                    "nodeType": "Block",
                    "src": "14737:159:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 803,
                                "name": "closed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "14756:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 804,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14766:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "14756:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2073686f756c64206e6f7420626520636c6f736564",
                              "id": 806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14772:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_86c223e4d678e1a7f2304b5148c636c8382b870e6b2125728763308d866b327b",
                                "typeString": "literal_string \"Seed: should not be closed\""
                              },
                              "value": "Seed: should not be closed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_86c223e4d678e1a7f2304b5148c636c8382b870e6b2125728763308d866b327b",
                                "typeString": "literal_string \"Seed: should not be closed\""
                              }
                            ],
                            "id": 802,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14748:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14748:53:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 808,
                        "nodeType": "ExpressionStatement",
                        "src": "14748:53:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 810,
                                "name": "paused",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 46,
                                "src": "14820:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 811,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14830:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "14820:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a2073686f756c6420626520706175736564",
                              "id": 813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14836:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_76af53b280841b4a5776a80a2070325d6baf122ccbfa842ef1a7ee360e9c43f7",
                                "typeString": "literal_string \"Seed: should be paused\""
                              },
                              "value": "Seed: should be paused"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_76af53b280841b4a5776a80a2070325d6baf122ccbfa842ef1a7ee360e9c43f7",
                                "typeString": "literal_string \"Seed: should be paused\""
                              }
                            ],
                            "id": 809,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14812:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14812:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 815,
                        "nodeType": "ExpressionStatement",
                        "src": "14812:49:0"
                      },
                      {
                        "expression": {
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 816,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "14874:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 817,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14883:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "14874:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 819,
                        "nodeType": "ExpressionStatement",
                        "src": "14874:14:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 797,
                    "nodeType": "StructuredDocumentation",
                    "src": "14628:67:0",
                    "text": " @dev                     Unpause distribution."
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 821,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 800,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 799,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 142,
                        "src": "14727:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14727:9:0"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "14710:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 798,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14717:2:0"
                  },
                  "returnParameters": {
                    "id": 801,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14737:0:0"
                  },
                  "scope": 1142,
                  "src": "14701:195:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 871,
                    "nodeType": "Block",
                    "src": "15018:672:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 829,
                          "name": "minimumReached",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52,
                          "src": "15080:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 869,
                          "nodeType": "Block",
                          "src": "15432:251:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 853,
                                        "name": "admin",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7,
                                        "src": "15492:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 856,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 854,
                                          "name": "seedAmountRequired",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 13,
                                          "src": "15499:18:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 855,
                                          "name": "feeAmountRequired",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 15,
                                          "src": "15518:17:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "15499:36:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 851,
                                        "name": "seedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30,
                                        "src": "15473:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1519",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 852,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1468,
                                      "src": "15473:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15473:63:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "536565643a2073686f756c64207472616e73666572207365656420746f6b656e7320746f2061646d696e",
                                    "id": 858,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15555:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_944fa369c19ec21b5af152d2bed7bb2fec462f03494354b38dfd9e54e02d5eb1",
                                      "typeString": "literal_string \"Seed: should transfer seed tokens to admin\""
                                    },
                                    "value": "Seed: should transfer seed tokens to admin"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_944fa369c19ec21b5af152d2bed7bb2fec462f03494354b38dfd9e54e02d5eb1",
                                      "typeString": "literal_string \"Seed: should transfer seed tokens to admin\""
                                    }
                                  ],
                                  "id": 850,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "15447:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 859,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15447:167:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 860,
                              "nodeType": "ExpressionStatement",
                              "src": "15447:167:0"
                            },
                            {
                              "expression": {
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 861,
                                  "name": "closed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44,
                                  "src": "15629:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 862,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15638:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "15629:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 864,
                              "nodeType": "ExpressionStatement",
                              "src": "15629:13:0"
                            },
                            {
                              "expression": {
                                "id": 867,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 865,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "15657:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 866,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15666:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "15657:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 868,
                              "nodeType": "ExpressionStatement",
                              "src": "15657:14:0"
                            }
                          ]
                        },
                        "id": 870,
                        "nodeType": "IfStatement",
                        "src": "15076:607:0",
                        "trueBody": {
                          "id": 849,
                          "nodeType": "Block",
                          "src": "15096:330:0",
                          "statements": [
                            {
                              "assignments": [
                                831
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 831,
                                  "mutability": "mutable",
                                  "name": "seedToTransfer",
                                  "nameLocation": "15182:14:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 849,
                                  "src": "15174:22:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 830,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15174:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 835,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 834,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 832,
                                  "name": "seedRemainder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 60,
                                  "src": "15199:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 833,
                                  "name": "feeRemainder",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "15213:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15199:26:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "15174:51:0"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 839,
                                        "name": "admin",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 7,
                                        "src": "15285:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 840,
                                        "name": "seedToTransfer",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 831,
                                        "src": "15292:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 837,
                                        "name": "seedToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 30,
                                        "src": "15266:9:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$1519",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 838,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "transfer",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1468,
                                      "src": "15266:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                        "typeString": "function (address,uint256) external returns (bool)"
                                      }
                                    },
                                    "id": 841,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "15266:41:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "536565643a2073686f756c64207472616e73666572207365656420746f6b656e7320746f2061646d696e",
                                    "id": 842,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15326:44:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_944fa369c19ec21b5af152d2bed7bb2fec462f03494354b38dfd9e54e02d5eb1",
                                      "typeString": "literal_string \"Seed: should transfer seed tokens to admin\""
                                    },
                                    "value": "Seed: should transfer seed tokens to admin"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_944fa369c19ec21b5af152d2bed7bb2fec462f03494354b38dfd9e54e02d5eb1",
                                      "typeString": "literal_string \"Seed: should transfer seed tokens to admin\""
                                    }
                                  ],
                                  "id": 836,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "15240:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 843,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15240:145:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 844,
                              "nodeType": "ExpressionStatement",
                              "src": "15240:145:0"
                            },
                            {
                              "expression": {
                                "id": 847,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 845,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 46,
                                  "src": "15400:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 846,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15409:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "15400:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 848,
                              "nodeType": "ExpressionStatement",
                              "src": "15400:14:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 822,
                    "nodeType": "StructuredDocumentation",
                    "src": "14904:65:0",
                    "text": " @dev                     Close distribution."
                  },
                  "functionSelector": "43d726d6",
                  "id": 872,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 825,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 824,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 142,
                        "src": "14999:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14999:9:0"
                    },
                    {
                      "id": 827,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 826,
                        "name": "isActive",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 158,
                        "src": "15009:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15009:8:0"
                    }
                  ],
                  "name": "close",
                  "nameLocation": "14984:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14989:2:0"
                  },
                  "returnParameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15018:0:0"
                  },
                  "scope": 1142,
                  "src": "14975:715:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 895,
                    "nodeType": "Block",
                    "src": "15908:126:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 883,
                                "name": "permissionedSeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "15927:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15947:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "15927:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206d6f64756c65206973206e6f742077686974656c6973746564",
                              "id": 886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15953:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e8f8f9ff1e0ebb6b35e95bbf18b180dbd00b13990c4d202a134dcc92c3161589",
                                "typeString": "literal_string \"Seed: module is not whitelisted\""
                              },
                              "value": "Seed: module is not whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e8f8f9ff1e0ebb6b35e95bbf18b180dbd00b13990c4d202a134dcc92c3161589",
                                "typeString": "literal_string \"Seed: module is not whitelisted\""
                              }
                            ],
                            "id": 882,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "15919:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15919:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 888,
                        "nodeType": "ExpressionStatement",
                        "src": "15919:68:0"
                      },
                      {
                        "expression": {
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 889,
                              "name": "whitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "16000:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 891,
                            "indexExpression": {
                              "id": 890,
                              "name": "_buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "16012:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16000:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16022:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "16000:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 894,
                        "nodeType": "ExpressionStatement",
                        "src": "16000:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 873,
                    "nodeType": "StructuredDocumentation",
                    "src": "15698:143:0",
                    "text": " @dev                     Add address to whitelist.\n @param _buyer            Address which needs to be whitelisted"
                  },
                  "functionSelector": "9b19251a",
                  "id": 896,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 878,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 877,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 142,
                        "src": "15889:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15889:9:0"
                    },
                    {
                      "id": 880,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 879,
                        "name": "isActive",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 158,
                        "src": "15899:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15899:8:0"
                    }
                  ],
                  "name": "whitelist",
                  "nameLocation": "15856:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "_buyer",
                        "nameLocation": "15874:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 896,
                        "src": "15866:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15866:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "15865:16:0"
                  },
                  "returnParameters": {
                    "id": 881,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15908:0:0"
                  },
                  "scope": 1142,
                  "src": "15847:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 935,
                    "nodeType": "Block",
                    "src": "16291:199:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 910,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 908,
                                "name": "permissionedSeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "16310:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 909,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16330:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "16310:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206d6f64756c65206973206e6f742077686974656c6973746564",
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16336:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e8f8f9ff1e0ebb6b35e95bbf18b180dbd00b13990c4d202a134dcc92c3161589",
                                "typeString": "literal_string \"Seed: module is not whitelisted\""
                              },
                              "value": "Seed: module is not whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e8f8f9ff1e0ebb6b35e95bbf18b180dbd00b13990c4d202a134dcc92c3161589",
                                "typeString": "literal_string \"Seed: module is not whitelisted\""
                              }
                            ],
                            "id": 907,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16302:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16302:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 913,
                        "nodeType": "ExpressionStatement",
                        "src": "16302:68:0"
                      },
                      {
                        "body": {
                          "id": 933,
                          "nodeType": "Block",
                          "src": "16426:57:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 931,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 925,
                                    "name": "whitelisted",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74,
                                    "src": "16441:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 929,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 926,
                                      "name": "_buyers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 900,
                                      "src": "16453:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 928,
                                    "indexExpression": {
                                      "id": 927,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 915,
                                      "src": "16461:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16453:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16441:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 930,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "16467:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "16441:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 932,
                              "nodeType": "ExpressionStatement",
                              "src": "16441:30:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 918,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 915,
                            "src": "16401:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 919,
                              "name": "_buyers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 900,
                              "src": "16405:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "16405:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16401:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 934,
                        "initializationExpression": {
                          "assignments": [
                            915
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 915,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "16394:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 934,
                              "src": "16386:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 914,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "16386:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 917,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16398:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "16386:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "16421:3:0",
                            "subExpression": {
                              "id": 922,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 915,
                              "src": "16421:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 924,
                          "nodeType": "ExpressionStatement",
                          "src": "16421:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "16381:102:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 897,
                    "nodeType": "StructuredDocumentation",
                    "src": "16042:167:0",
                    "text": " @dev                     Add multiple addresses to whitelist.\n @param _buyers           Array of addresses to whitelist addresses in batch"
                  },
                  "functionSelector": "eaa53523",
                  "id": 936,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 903,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 902,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 142,
                        "src": "16272:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16272:9:0"
                    },
                    {
                      "id": 905,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 904,
                        "name": "isActive",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 158,
                        "src": "16282:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16282:8:0"
                    }
                  ],
                  "name": "whitelistBatch",
                  "nameLocation": "16224:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 901,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 900,
                        "mutability": "mutable",
                        "name": "_buyers",
                        "nameLocation": "16256:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 936,
                        "src": "16239:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 898,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16239:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 899,
                          "nodeType": "ArrayTypeName",
                          "src": "16239:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16238:26:0"
                  },
                  "returnParameters": {
                    "id": 906,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16291:0:0"
                  },
                  "scope": 1142,
                  "src": "16215:275:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 959,
                    "nodeType": "Block",
                    "src": "16716:126:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 949,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 947,
                                "name": "permissionedSeed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "16735:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "74727565",
                                "id": 948,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16755:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "16735:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a206d6f64756c65206973206e6f742077686974656c6973746564",
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16761:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e8f8f9ff1e0ebb6b35e95bbf18b180dbd00b13990c4d202a134dcc92c3161589",
                                "typeString": "literal_string \"Seed: module is not whitelisted\""
                              },
                              "value": "Seed: module is not whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e8f8f9ff1e0ebb6b35e95bbf18b180dbd00b13990c4d202a134dcc92c3161589",
                                "typeString": "literal_string \"Seed: module is not whitelisted\""
                              }
                            ],
                            "id": 946,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16727:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16727:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 952,
                        "nodeType": "ExpressionStatement",
                        "src": "16727:68:0"
                      },
                      {
                        "expression": {
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 953,
                              "name": "whitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "16808:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 955,
                            "indexExpression": {
                              "id": 954,
                              "name": "buyer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 939,
                              "src": "16820:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16808:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16829:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "16808:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 958,
                        "nodeType": "ExpressionStatement",
                        "src": "16808:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 937,
                    "nodeType": "StructuredDocumentation",
                    "src": "16498:150:0",
                    "text": " @dev                     Remove address from whitelist.\n @param buyer             Address which needs to be unwhitelisted"
                  },
                  "functionSelector": "9a590427",
                  "id": 960,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 942,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 941,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 142,
                        "src": "16697:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16697:9:0"
                    },
                    {
                      "id": 944,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 943,
                        "name": "isActive",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 158,
                        "src": "16707:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16707:8:0"
                    }
                  ],
                  "name": "unwhitelist",
                  "nameLocation": "16663:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 940,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 939,
                        "mutability": "mutable",
                        "name": "buyer",
                        "nameLocation": "16683:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 960,
                        "src": "16675:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 938,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16675:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16674:15:0"
                  },
                  "returnParameters": {
                    "id": 945,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16716:0:0"
                  },
                  "scope": 1142,
                  "src": "16654:188:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 986,
                    "nodeType": "Block",
                    "src": "16989:196:0",
                    "statements": [
                      {
                        "assignments": [
                          969
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 969,
                            "mutability": "mutable",
                            "name": "pendingFundingBalance",
                            "nameLocation": "17005:21:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 986,
                            "src": "17000:26:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 968,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "17000:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 973,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 972,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 970,
                            "name": "fundingCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "17029:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 971,
                            "name": "fundingWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "17048:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17029:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17000:64:0"
                      },
                      {
                        "expression": {
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 974,
                            "name": "fundingWithdrawn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70,
                            "src": "17075:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 975,
                            "name": "fundingCollected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68,
                            "src": "17094:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17075:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 977,
                        "nodeType": "ExpressionStatement",
                        "src": "17075:35:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 981,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "17143:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 982,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "17143:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 983,
                              "name": "pendingFundingBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "17155:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 978,
                              "name": "fundingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33,
                              "src": "17121:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1519",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1468,
                            "src": "17121:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17121:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 985,
                        "nodeType": "ExpressionStatement",
                        "src": "17121:56:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 961,
                    "nodeType": "StructuredDocumentation",
                    "src": "16850:78:0",
                    "text": " @dev                     Withdraw funds from the contract"
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 987,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 964,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 963,
                        "name": "onlyAdmin",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 142,
                        "src": "16961:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16961:9:0"
                    },
                    {
                      "id": 966,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 965,
                        "name": "allowedToWithdraw",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 250,
                        "src": "16971:17:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "16971:17:0"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "16943:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 962,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16951:2:0"
                  },
                  "returnParameters": {
                    "id": 967,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16989:0:0"
                  },
                  "scope": 1142,
                  "src": "16934:251:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1013,
                    "nodeType": "Block",
                    "src": "17393:250:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1001,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 994,
                                  "name": "initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50,
                                  "src": "17426:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "74727565",
                                  "id": 995,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "17441:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "17426:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 1000,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 997,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "17449:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 998,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "17449:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 999,
                                  "name": "admin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "17463:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "17449:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "17426:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a20636f6e74726163742073686f756c64206e6f7420626520696e697469616c697a6564206f722063616c6c65722073686f756c642062652061646d696e",
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17483:68:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_315453a72fd0f7a238326fbbf97017f2713bae124ce5971c36e174242348b575",
                                "typeString": "literal_string \"Seed: contract should not be initialized or caller should be admin\""
                              },
                              "value": "Seed: contract should not be initialized or caller should be admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_315453a72fd0f7a238326fbbf97017f2713bae124ce5971c36e174242348b575",
                                "typeString": "literal_string \"Seed: contract should not be initialized or caller should be admin\""
                              }
                            ],
                            "id": 993,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17404:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17404:158:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1004,
                        "nodeType": "ExpressionStatement",
                        "src": "17404:158:0"
                      },
                      {
                        "expression": {
                          "id": 1007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1005,
                            "name": "metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37,
                            "src": "17573:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1006,
                            "name": "_metadata",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 990,
                            "src": "17584:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "17573:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 1008,
                        "nodeType": "ExpressionStatement",
                        "src": "17573:20:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1010,
                              "name": "_metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 990,
                              "src": "17625:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1009,
                            "name": "MetadataUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105,
                            "src": "17609:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory)"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17609:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1012,
                        "nodeType": "EmitStatement",
                        "src": "17604:31:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 988,
                    "nodeType": "StructuredDocumentation",
                    "src": "17193:139:0",
                    "text": " @dev                     Updates metadata.\n @param _metadata         Seed contract metadata, that is IPFS Hash"
                  },
                  "functionSelector": "fc582d41",
                  "id": 1014,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateMetadata",
                  "nameLocation": "17347:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 991,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 990,
                        "mutability": "mutable",
                        "name": "_metadata",
                        "nameLocation": "17375:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1014,
                        "src": "17362:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 989,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "17362:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17361:24:0"
                  },
                  "returnParameters": {
                    "id": 992,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17393:0:0"
                  },
                  "scope": 1142,
                  "src": "17338:305:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1078,
                    "nodeType": "Block",
                    "src": "17904:711:0",
                    "statements": [
                      {
                        "assignments": [
                          1024
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1024,
                            "mutability": "mutable",
                            "name": "tokenFunder",
                            "nameLocation": "17938:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1078,
                            "src": "17915:34:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                              "typeString": "struct Seed.FunderPortfolio"
                            },
                            "typeName": {
                              "id": 1023,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1022,
                                "name": "FunderPortfolio",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 116,
                                "src": "17915:15:0"
                              },
                              "referencedDeclaration": 116,
                              "src": "17915:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage_ptr",
                                "typeString": "struct Seed.FunderPortfolio"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1028,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1025,
                            "name": "funders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 79,
                            "src": "17952:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                              "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                            }
                          },
                          "id": 1027,
                          "indexExpression": {
                            "id": 1026,
                            "name": "_funder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1017,
                            "src": "17960:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "17952:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                            "typeString": "struct Seed.FunderPortfolio storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "17915:53:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1029,
                              "name": "_currentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "17985:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17985:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1031,
                            "name": "vestingStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "18002:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17985:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1036,
                        "nodeType": "IfStatement",
                        "src": "17981:74:0",
                        "trueBody": {
                          "id": 1035,
                          "nodeType": "Block",
                          "src": "18020:35:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 1033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18042:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1021,
                              "id": 1034,
                              "nodeType": "Return",
                              "src": "18035:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1038
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1038,
                            "mutability": "mutable",
                            "name": "elapsedSeconds",
                            "nameLocation": "18111:14:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1078,
                            "src": "18103:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1037,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "18103:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1043,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1039,
                              "name": "_currentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1102,
                              "src": "18128:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18128:14:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1041,
                            "name": "vestingStartTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 56,
                            "src": "18145:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18128:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18103:58:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1044,
                            "name": "elapsedSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "18178:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1045,
                            "name": "vestingCliff",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "18195:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "18178:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1050,
                        "nodeType": "IfStatement",
                        "src": "18174:70:0",
                        "trueBody": {
                          "id": 1049,
                          "nodeType": "Block",
                          "src": "18209:35:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "30",
                                "id": 1047,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18231:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1021,
                              "id": 1048,
                              "nodeType": "Return",
                              "src": "18224:8:0"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1051,
                            "name": "elapsedSeconds",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1038,
                            "src": "18316:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">=",
                          "rightExpression": {
                            "id": 1052,
                            "name": "vestingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "18334:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "18316:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1076,
                          "nodeType": "Block",
                          "src": "18440:168:0",
                          "statements": [
                            {
                              "assignments": [
                                1062
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1062,
                                  "mutability": "mutable",
                                  "name": "amountVested",
                                  "nameLocation": "18463:12:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1076,
                                  "src": "18455:20:0",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1061,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "18455:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1070,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1066,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1063,
                                        "name": "elapsedSeconds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1038,
                                        "src": "18479:14:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "*",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 1064,
                                          "name": "tokenFunder",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1024,
                                          "src": "18494:11:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                            "typeString": "struct Seed.FunderPortfolio memory"
                                          }
                                        },
                                        "id": 1065,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "seedAmount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 107,
                                        "src": "18494:22:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "18479:37:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1067,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "18478:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1068,
                                  "name": "vestingDuration",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25,
                                  "src": "18520:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "18478:57:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "18455:80:0"
                            },
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1074,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1071,
                                  "name": "amountVested",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1062,
                                  "src": "18557:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1072,
                                    "name": "tokenFunder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "18572:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                      "typeString": "struct Seed.FunderPortfolio memory"
                                    }
                                  },
                                  "id": 1073,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalClaimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 109,
                                  "src": "18572:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18557:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1021,
                              "id": 1075,
                              "nodeType": "Return",
                              "src": "18550:46:0"
                            }
                          ]
                        },
                        "id": 1077,
                        "nodeType": "IfStatement",
                        "src": "18312:296:0",
                        "trueBody": {
                          "id": 1060,
                          "nodeType": "Block",
                          "src": "18351:83:0",
                          "statements": [
                            {
                              "expression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1058,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1054,
                                    "name": "tokenFunder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "18373:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                      "typeString": "struct Seed.FunderPortfolio memory"
                                    }
                                  },
                                  "id": 1055,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "seedAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 107,
                                  "src": "18373:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 1056,
                                    "name": "tokenFunder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1024,
                                    "src": "18398:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                                      "typeString": "struct Seed.FunderPortfolio memory"
                                    }
                                  },
                                  "id": 1057,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "totalClaimed",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 109,
                                  "src": "18398:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "18373:49:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 1021,
                              "id": 1059,
                              "nodeType": "Return",
                              "src": "18366:56:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1015,
                    "nodeType": "StructuredDocumentation",
                    "src": "17676:152:0",
                    "text": " @dev                     Calculates the maximum claim\n @param _funder           Address of funder to find the maximum claim"
                  },
                  "functionSelector": "ea345540",
                  "id": 1079,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "calculateClaim",
                  "nameLocation": "17843:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1018,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1017,
                        "mutability": "mutable",
                        "name": "_funder",
                        "nameLocation": "17866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1079,
                        "src": "17858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1016,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "17858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17857:17:0"
                  },
                  "returnParameters": {
                    "id": 1021,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1020,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1079,
                        "src": "17895:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1019,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "17895:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17894:9:0"
                  },
                  "scope": 1142,
                  "src": "17834:781:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1091,
                    "nodeType": "Block",
                    "src": "18843:45:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1087,
                            "name": "whitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74,
                            "src": "18861:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1089,
                          "indexExpression": {
                            "id": 1088,
                            "name": "_buyer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1082,
                            "src": "18873:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "18861:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1086,
                        "id": 1090,
                        "nodeType": "Return",
                        "src": "18854:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1080,
                    "nodeType": "StructuredDocumentation",
                    "src": "18623:146:0",
                    "text": " @dev                     check whitelist status of a buyer\n @param _buyer            address of buyer to check status"
                  },
                  "functionSelector": "20d8dad0",
                  "id": 1092,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkWhitelisted",
                  "nameLocation": "18784:16:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1083,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1082,
                        "mutability": "mutable",
                        "name": "_buyer",
                        "nameLocation": "18809:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "18801:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1081,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "18801:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18800:16:0"
                  },
                  "returnParameters": {
                    "id": 1086,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1085,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1092,
                        "src": "18837:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1084,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "18837:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "18836:6:0"
                  },
                  "scope": 1142,
                  "src": "18775:113:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1101,
                    "nodeType": "Block",
                    "src": "19066:41:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1098,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "19084:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "19084:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1097,
                        "id": 1100,
                        "nodeType": "Return",
                        "src": "19077:22:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1093,
                    "nodeType": "StructuredDocumentation",
                    "src": "18923:82:0",
                    "text": " @dev                      get current time or block.timestamp"
                  },
                  "id": 1102,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_currentTime",
                  "nameLocation": "19020:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19032:2:0"
                  },
                  "returnParameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1096,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1102,
                        "src": "19057:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19057:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19056:9:0"
                  },
                  "scope": 1142,
                  "src": "19011:96:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1140,
                    "nodeType": "Block",
                    "src": "19732:373:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1119,
                                "name": "_seedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1107,
                                "src": "19753:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1120,
                                "name": "vestingDuration",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25,
                                "src": "19768:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "19753:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "536565643a20616d6f756e745665737465645065725365636f6e64203e2030",
                              "id": 1122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19785:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50b1ee67bf17b7a96efbb51141e32cd12ded03300adf63badf99c0051e2b4f4e",
                                "typeString": "literal_string \"Seed: amountVestedPerSecond > 0\""
                              },
                              "value": "Seed: amountVestedPerSecond > 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50b1ee67bf17b7a96efbb51141e32cd12ded03300adf63badf99c0051e2b4f4e",
                                "typeString": "literal_string \"Seed: amountVestedPerSecond > 0\""
                              }
                            ],
                            "id": 1118,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "19745:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19745:74:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1124,
                        "nodeType": "ExpressionStatement",
                        "src": "19745:74:0"
                      },
                      {
                        "expression": {
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1125,
                              "name": "funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79,
                              "src": "19832:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_FunderPortfolio_$116_storage_$",
                                "typeString": "mapping(address => struct Seed.FunderPortfolio storage ref)"
                              }
                            },
                            "id": 1127,
                            "indexExpression": {
                              "id": 1126,
                              "name": "_recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1105,
                              "src": "19840:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "19832:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                              "typeString": "struct Seed.FunderPortfolio storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1129,
                                "name": "_seedAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1107,
                                "src": "19897:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1130,
                                "name": "_totalClaimed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1111,
                                "src": "19937:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1131,
                                "name": "_fundingAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1109,
                                "src": "19980:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1132,
                                "name": "_fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1113,
                                "src": "20014:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1133,
                                "name": "_feeClaimed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1115,
                                "src": "20045:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 1128,
                              "name": "FunderPortfolio",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116,
                              "src": "19854:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_FunderPortfolio_$116_storage_ptr_$",
                                "typeString": "type(struct Seed.FunderPortfolio storage pointer)"
                              }
                            },
                            "id": 1134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "seedAmount",
                              "totalClaimed",
                              "fundingAmount",
                              "fee",
                              "feeClaimed"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "19854:214:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FunderPortfolio_$116_memory_ptr",
                              "typeString": "struct Seed.FunderPortfolio memory"
                            }
                          },
                          "src": "19832:236:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FunderPortfolio_$116_storage",
                            "typeString": "struct Seed.FunderPortfolio storage ref"
                          }
                        },
                        "id": 1136,
                        "nodeType": "ExpressionStatement",
                        "src": "19832:236:0"
                      },
                      {
                        "expression": {
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "20079:18:0",
                          "subExpression": {
                            "id": 1137,
                            "name": "totalFunderCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "20079:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1139,
                        "nodeType": "ExpressionStatement",
                        "src": "20079:18:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1103,
                    "nodeType": "StructuredDocumentation",
                    "src": "19115:388:0",
                    "text": " @dev                      add/update funder portfolio\n @param _recipient         Address of funder recipient\n @param _seedAmount        seed amount of the funder\n @param _fundingAmount     funding amount contributed\n @param _totalClaimed      total seed token amount claimed\n @param _fee               fee on seed amount bought"
                  },
                  "id": 1141,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addFunder",
                  "nameLocation": "19518:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1116,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "_recipient",
                        "nameLocation": "19547:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "19539:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "19539:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1107,
                        "mutability": "mutable",
                        "name": "_seedAmount",
                        "nameLocation": "19576:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "19568:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19568:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1109,
                        "mutability": "mutable",
                        "name": "_fundingAmount",
                        "nameLocation": "19606:14:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "19598:22:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1108,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19598:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1111,
                        "mutability": "mutable",
                        "name": "_totalClaimed",
                        "nameLocation": "19639:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "19631:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1110,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19631:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1113,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "19671:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "19663:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1112,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19663:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1115,
                        "mutability": "mutable",
                        "name": "_feeClaimed",
                        "nameLocation": "19694:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "19686:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1114,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "19686:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "19528:184:0"
                  },
                  "returnParameters": {
                    "id": 1117,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "19732:0:0"
                  },
                  "scope": 1142,
                  "src": "19509:596:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1143,
              "src": "1504:18604:0",
              "usedErrors": []
            }
          ],
          "src": "1304:18806:0"
        },
        "id": 0
      },
      "contracts/seed/SeedFactory.sol": {
        "ast": {
          "absolutePath": "contracts/seed/SeedFactory.sol",
          "exportedSymbols": {
            "CloneFactory": [
              1331
            ],
            "Context": [
              1542
            ],
            "IERC20": [
              1519
            ],
            "Ownable": [
              1441
            ],
            "Seed": [
              1142
            ],
            "SeedFactory": [
              1294
            ]
          },
          "id": 1295,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1144,
              "literals": [
                "solidity",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "1266:22:1"
            },
            {
              "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
              "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
              "id": 1145,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1295,
              "sourceUnit": 1520,
              "src": "1292:64:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
              "file": "openzeppelin-solidity/contracts/access/Ownable.sol",
              "id": 1146,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1295,
              "sourceUnit": 1442,
              "src": "1358:60:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/seed/Seed.sol",
              "file": "./Seed.sol",
              "id": 1147,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1295,
              "sourceUnit": 1143,
              "src": "1420:20:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/utils/CloneFactory.sol",
              "file": "../utils/CloneFactory.sol",
              "id": 1148,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1295,
              "sourceUnit": 1332,
              "src": "1442:35:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1150,
                    "name": "CloneFactory",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1331,
                    "src": "1618:12:1"
                  },
                  "id": 1151,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1618:12:1"
                },
                {
                  "baseName": {
                    "id": 1152,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1441,
                    "src": "1632:7:1"
                  },
                  "id": 1153,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1632:7:1"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1149,
                "nodeType": "StructuredDocumentation",
                "src": "1483:109:1",
                "text": " @title PrimeDAO Seed Factory\n @dev   Enable PrimeDAO governance to create new Seed contracts."
              },
              "fullyImplemented": true,
              "id": 1294,
              "linearizedBaseContracts": [
                1294,
                1441,
                1542,
                1331
              ],
              "name": "SeedFactory",
              "nameLocation": "1603:11:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "a619486e",
                  "id": 1156,
                  "mutability": "mutable",
                  "name": "masterCopy",
                  "nameLocation": "1661:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1294,
                  "src": "1649:22:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Seed_$1142",
                    "typeString": "contract Seed"
                  },
                  "typeName": {
                    "id": 1155,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1154,
                      "name": "Seed",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1142,
                      "src": "1649:4:1"
                    },
                    "referencedDeclaration": 1142,
                    "src": "1649:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Seed_$1142",
                      "typeString": "contract Seed"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 1162,
                  "name": "SeedCreated",
                  "nameLocation": "1686:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1158,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newSeed",
                        "nameLocation": "1714:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1162,
                        "src": "1698:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1698:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1160,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "beneficiary",
                        "nameLocation": "1739:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1162,
                        "src": "1723:27:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1159,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1723:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1697:54:1"
                  },
                  "src": "1680:72:1"
                },
                {
                  "body": {
                    "id": 1188,
                    "nodeType": "Block",
                    "src": "1977:151:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1174,
                                    "name": "_masterCopy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1166,
                                    "src": "2004:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Seed_$1142",
                                      "typeString": "contract Seed"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Seed_$1142",
                                      "typeString": "contract Seed"
                                    }
                                  ],
                                  "id": 1173,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1996:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1172,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1996:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1996:20:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1178,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2028:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2020:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1176,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2020:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2020:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1996:34:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53656564466163746f72793a206e6577206d6173746572636f70792063616e6e6f74206265207a65726f2061646472657373",
                              "id": 1181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2032:52:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_be24ab5112e8e639e8285f1a6a18268a6b7944dc5b1ca17b6a6fa5299a654c61",
                                "typeString": "literal_string \"SeedFactory: new mastercopy cannot be zero address\""
                              },
                              "value": "SeedFactory: new mastercopy cannot be zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_be24ab5112e8e639e8285f1a6a18268a6b7944dc5b1ca17b6a6fa5299a654c61",
                                "typeString": "literal_string \"SeedFactory: new mastercopy cannot be zero address\""
                              }
                            ],
                            "id": 1171,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1988:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1988:97:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1183,
                        "nodeType": "ExpressionStatement",
                        "src": "1988:97:1"
                      },
                      {
                        "expression": {
                          "id": 1186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1184,
                            "name": "masterCopy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1156,
                            "src": "2096:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Seed_$1142",
                              "typeString": "contract Seed"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1185,
                            "name": "_masterCopy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1166,
                            "src": "2109:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Seed_$1142",
                              "typeString": "contract Seed"
                            }
                          },
                          "src": "2096:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Seed_$1142",
                            "typeString": "contract Seed"
                          }
                        },
                        "id": 1187,
                        "nodeType": "ExpressionStatement",
                        "src": "2096:24:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1163,
                    "nodeType": "StructuredDocumentation",
                    "src": "1760:153:1",
                    "text": " @dev               Set Seed contract which works as a base for clones.\n @param _masterCopy The address of the new Seed basis."
                  },
                  "functionSelector": "cf497e6c",
                  "id": 1189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1169,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1168,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1390,
                        "src": "1967:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1967:9:1"
                    }
                  ],
                  "name": "setMasterCopy",
                  "nameLocation": "1928:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "_masterCopy",
                        "nameLocation": "1947:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1189,
                        "src": "1942:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Seed_$1142",
                          "typeString": "contract Seed"
                        },
                        "typeName": {
                          "id": 1165,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1164,
                            "name": "Seed",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1142,
                            "src": "1942:4:1"
                          },
                          "referencedDeclaration": 1142,
                          "src": "1942:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Seed_$1142",
                            "typeString": "contract Seed"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1941:18:1"
                  },
                  "returnParameters": {
                    "id": 1170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:0:1"
                  },
                  "scope": 1294,
                  "src": "1919:209:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1292,
                    "nodeType": "Block",
                    "src": "4327:871:1",
                    "statements": [
                      {
                        "id": 1243,
                        "nodeType": "Block",
                        "src": "4338:243:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "id": 1231,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 1225,
                                        "name": "masterCopy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1156,
                                        "src": "4369:10:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Seed_$1142",
                                          "typeString": "contract Seed"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Seed_$1142",
                                          "typeString": "contract Seed"
                                        }
                                      ],
                                      "id": 1224,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4361:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1223,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4361:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1226,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4361:19:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 1229,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "4392:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 1228,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "4384:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1227,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "4384:7:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4384:10:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "src": "4361:33:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "53656564466163746f72793a206d6173746572636f70792063616e6e6f74206265207a65726f2061646472657373",
                                  "id": 1232,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4396:48:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_1d200676b9be04b72c45c6fec23dc08db2353d6f38857aa1673784dca7e20ffa",
                                    "typeString": "literal_string \"SeedFactory: mastercopy cannot be zero address\""
                                  },
                                  "value": "SeedFactory: mastercopy cannot be zero address"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_1d200676b9be04b72c45c6fec23dc08db2353d6f38857aa1673784dca7e20ffa",
                                    "typeString": "literal_string \"SeedFactory: mastercopy cannot be zero address\""
                                  }
                                ],
                                "id": 1222,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "4353:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4353:92:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1234,
                            "nodeType": "ExpressionStatement",
                            "src": "4353:92:1"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1239,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 1236,
                                      "name": "_vestingDurationAndCliff",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1209,
                                      "src": "4468:24:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                        "typeString": "uint32[] memory"
                                      }
                                    },
                                    "id": 1237,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4468:31:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "hexValue": "32",
                                    "id": 1238,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4503:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "src": "4468:36:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "53656564466163746f72793a204861736e27742070726f766964656420626f74682076657374696e67206475726174696f6e20616e6420636c696666",
                                  "id": 1240,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4506:62:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_f9e1acc34705ed760bb539d2dd0e9ca091c37d70263869adbe440563acd80b15",
                                    "typeString": "literal_string \"SeedFactory: Hasn't provided both vesting duration and cliff\""
                                  },
                                  "value": "SeedFactory: Hasn't provided both vesting duration and cliff"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_f9e1acc34705ed760bb539d2dd0e9ca091c37d70263869adbe440563acd80b15",
                                    "typeString": "literal_string \"SeedFactory: Hasn't provided both vesting duration and cliff\""
                                  }
                                ],
                                "id": 1235,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "4460:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4460:109:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1242,
                            "nodeType": "ExpressionStatement",
                            "src": "4460:109:1"
                          }
                        ]
                      },
                      {
                        "assignments": [
                          1245
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1245,
                            "mutability": "mutable",
                            "name": "_newSeed",
                            "nameLocation": "4626:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1292,
                            "src": "4618:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4618:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1252,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1249,
                                  "name": "masterCopy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1156,
                                  "src": "4657:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Seed_$1142",
                                    "typeString": "contract Seed"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Seed_$1142",
                                    "typeString": "contract Seed"
                                  }
                                ],
                                "id": 1248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4649:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1247,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4649:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4649:19:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1246,
                            "name": "createClone",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1312,
                            "src": "4637:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_address_$",
                              "typeString": "function (address) returns (address)"
                            }
                          },
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4637:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4618:51:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1257,
                              "name": "_metadata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1215,
                              "src": "4712:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1254,
                                  "name": "_newSeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "4687:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1253,
                                "name": "Seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1142,
                                "src": "4682:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Seed_$1142_$",
                                  "typeString": "type(contract Seed)"
                                }
                              },
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4682:14:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Seed_$1142",
                                "typeString": "contract Seed"
                              }
                            },
                            "id": 1256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "updateMetadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1014,
                            "src": "4682:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (bytes memory) external"
                            }
                          },
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4682:40:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1259,
                        "nodeType": "ExpressionStatement",
                        "src": "4682:40:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1264,
                              "name": "_beneficiary",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "4798:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1265,
                              "name": "_admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "4825:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1266,
                              "name": "_tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1197,
                              "src": "4846:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            {
                              "id": 1267,
                              "name": "_softHardThresholds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1200,
                              "src": "4868:19:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 1268,
                              "name": "_price",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1202,
                              "src": "4902:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1269,
                              "name": "_startTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1204,
                              "src": "4923:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1270,
                              "name": "_endTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1206,
                              "src": "4948:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1271,
                                "name": "_vestingDurationAndCliff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "4971:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                  "typeString": "uint32[] memory"
                                }
                              },
                              "id": 1273,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 1272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4996:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4971:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 1274,
                                "name": "_vestingDurationAndCliff",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "5013:24:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                                  "typeString": "uint32[] memory"
                                }
                              },
                              "id": 1276,
                              "indexExpression": {
                                "hexValue": "31",
                                "id": 1275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5038:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5013:27:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 1277,
                              "name": "_permissionedSeed",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1211,
                              "src": "5055:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "id": 1278,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1213,
                              "src": "5087:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1261,
                                  "name": "_newSeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "4763:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1260,
                                "name": "Seed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1142,
                                "src": "4758:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Seed_$1142_$",
                                  "typeString": "type(contract Seed)"
                                }
                              },
                              "id": 1262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4758:14:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Seed_$1142",
                                "typeString": "contract Seed"
                              }
                            },
                            "id": 1263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 411,
                            "src": "4758:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint32_$_t_bool_$_t_uint8_$returns$__$",
                              "typeString": "function (address,address,address[] memory,uint256[] memory,uint256,uint256,uint256,uint32,uint32,bool,uint8) external"
                            }
                          },
                          "id": 1279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4758:344:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1280,
                        "nodeType": "ExpressionStatement",
                        "src": "4758:344:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1284,
                                  "name": "_newSeed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1245,
                                  "src": "5140:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5132:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1282,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5132:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5132:17:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1286,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5151:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5151:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1281,
                            "name": "SeedCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "5120:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5120:42:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1289,
                        "nodeType": "EmitStatement",
                        "src": "5115:47:1"
                      },
                      {
                        "expression": {
                          "id": 1290,
                          "name": "_newSeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1245,
                          "src": "5182:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1221,
                        "id": 1291,
                        "nodeType": "Return",
                        "src": "5175:15:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1190,
                    "nodeType": "StructuredDocumentation",
                    "src": "2136:1760:1",
                    "text": " @dev                                Deploys Seed contract.\n @param _beneficiary                 The address that recieves fees.\n @param _admin                       The address of the admin of this contract. Funds contract\nand has permissions to whitelist users, pause and close contract.\n @param _tokens                      Array containing two params:\n- The address of the seed token being distributed.\n                                         - The address of the funding token being exchanged for seed token.\n @param _softHardThresholds          Array containing two params:\n- the minimum funding token collection threshold in wei denomination.\n- the highest possible funding token amount to be raised in wei denomination.\n @param _price                       1 Funding Token = _price amount of Seed Token.\n @param _startTime                   Distribution start time in unix timecode.\n @param _endTime                     Distribution end time in unix timecode.\n @param _vestingDurationAndCliff       Array containing two params:\n- Vesting period duration in days.\n- Cliff duration in days.\n @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\n @param _fee                   Success fee expressed in Wei as a % (e.g. 2 = 2% fee)\n @param _metadata              Seed contract metadata, that is IPFS URI"
                  },
                  "functionSelector": "4a7eb3c2",
                  "id": 1293,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1218,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1217,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1390,
                        "src": "4294:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4294:9:1"
                    }
                  ],
                  "name": "deploySeed",
                  "nameLocation": "3911:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1192,
                        "mutability": "mutable",
                        "name": "_beneficiary",
                        "nameLocation": "3940:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "3932:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1191,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3932:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1194,
                        "mutability": "mutable",
                        "name": "_admin",
                        "nameLocation": "3971:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "3963:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1193,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3963:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "_tokens",
                        "nameLocation": "4005:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "3988:24:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3988:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1196,
                          "nodeType": "ArrayTypeName",
                          "src": "3988:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1200,
                        "mutability": "mutable",
                        "name": "_softHardThresholds",
                        "nameLocation": "4040:19:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "4023:36:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1198,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4023:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1199,
                          "nodeType": "ArrayTypeName",
                          "src": "4023:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1202,
                        "mutability": "mutable",
                        "name": "_price",
                        "nameLocation": "4078:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "4070:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1201,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4070:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1204,
                        "mutability": "mutable",
                        "name": "_startTime",
                        "nameLocation": "4103:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "4095:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4095:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1206,
                        "mutability": "mutable",
                        "name": "_endTime",
                        "nameLocation": "4132:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "4124:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1205,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4124:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1209,
                        "mutability": "mutable",
                        "name": "_vestingDurationAndCliff",
                        "nameLocation": "4167:24:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "4151:40:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
                          "typeString": "uint32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1207,
                            "name": "uint32",
                            "nodeType": "ElementaryTypeName",
                            "src": "4151:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "id": 1208,
                          "nodeType": "ArrayTypeName",
                          "src": "4151:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
                            "typeString": "uint32[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1211,
                        "mutability": "mutable",
                        "name": "_permissionedSeed",
                        "nameLocation": "4208:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "4202:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1210,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4202:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1213,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "4242:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "4236:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1212,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4236:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1215,
                        "mutability": "mutable",
                        "name": "_metadata",
                        "nameLocation": "4270:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "4257:22:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1214,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "4257:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3921:365:1"
                  },
                  "returnParameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1220,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1293,
                        "src": "4313:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4313:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4312:9:1"
                  },
                  "scope": 1294,
                  "src": "3902:1296:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1295,
              "src": "1594:3607:1",
              "usedErrors": []
            }
          ],
          "src": "1266:3937:1"
        },
        "id": 1
      },
      "contracts/utils/CloneFactory.sol": {
        "ast": {
          "absolutePath": "contracts/utils/CloneFactory.sol",
          "exportedSymbols": {
            "CloneFactory": [
              1331
            ]
          },
          "id": 1332,
          "license": "GPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1296,
              "literals": [
                "solidity",
                "0.8",
                ".4"
              ],
              "nodeType": "PragmaDirective",
              "src": "1451:22:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1331,
              "linearizedBaseContracts": [
                1331
              ],
              "name": "CloneFactory",
              "nameLocation": "1486:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1311,
                    "nodeType": "Block",
                    "src": "1579:423:2",
                    "statements": [
                      {
                        "assignments": [
                          1304
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1304,
                            "mutability": "mutable",
                            "name": "targetBytes",
                            "nameLocation": "1598:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1311,
                            "src": "1590:19:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            },
                            "typeName": {
                              "id": 1303,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "1590:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1309,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1307,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1298,
                              "src": "1620:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1612:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes20_$",
                              "typeString": "type(bytes20)"
                            },
                            "typeName": {
                              "id": 1305,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "1612:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1612:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1590:37:2"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "1647:348:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1662:24:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1681:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1675:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1675:11:2"
                              },
                              "variables": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulTypedName",
                                  "src": "1666:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "clone",
                                    "nodeType": "YulIdentifier",
                                    "src": "1707:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1714:66:2",
                                    "type": "",
                                    "value": "0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1700:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1700:81:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1700:81:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "clone",
                                        "nodeType": "YulIdentifier",
                                        "src": "1806:5:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1813:4:2",
                                        "type": "",
                                        "value": "0x14"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1802:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1802:16:2"
                                  },
                                  {
                                    "name": "targetBytes",
                                    "nodeType": "YulIdentifier",
                                    "src": "1820:11:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1795:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1795:37:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1795:37:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "clone",
                                        "nodeType": "YulIdentifier",
                                        "src": "1857:5:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1864:4:2",
                                        "type": "",
                                        "value": "0x28"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1853:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1853:16:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1871:66:2",
                                    "type": "",
                                    "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1846:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1846:92:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1846:92:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1952:32:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1969:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "clone",
                                    "nodeType": "YulIdentifier",
                                    "src": "1972:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1979:4:2",
                                    "type": "",
                                    "value": "0x37"
                                  }
                                ],
                                "functionName": {
                                  "name": "create",
                                  "nodeType": "YulIdentifier",
                                  "src": "1962:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1962:22:2"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "1952:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1301,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1952:6:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1304,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "1820:11:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 1310,
                        "nodeType": "InlineAssembly",
                        "src": "1638:357:2"
                      }
                    ]
                  },
                  "id": 1312,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createClone",
                  "nameLocation": "1517:11:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1299,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1298,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "1537:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1312,
                        "src": "1529:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1297,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1529:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1528:16:2"
                  },
                  "returnParameters": {
                    "id": 1302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1301,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "1571:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1312,
                        "src": "1563:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1563:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1562:16:2"
                  },
                  "scope": 1331,
                  "src": "1508:494:2",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1329,
                    "nodeType": "Block",
                    "src": "2094:621:2",
                    "statements": [
                      {
                        "assignments": [
                          1322
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1322,
                            "mutability": "mutable",
                            "name": "targetBytes",
                            "nameLocation": "2113:11:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1329,
                            "src": "2105:19:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes20",
                              "typeString": "bytes20"
                            },
                            "typeName": {
                              "id": 1321,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "2105:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes20",
                                "typeString": "bytes20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1327,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1325,
                              "name": "target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1314,
                              "src": "2135:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2127:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes20_$",
                              "typeString": "type(bytes20)"
                            },
                            "typeName": {
                              "id": 1323,
                              "name": "bytes20",
                              "nodeType": "ElementaryTypeName",
                              "src": "2127:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2127:15:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes20",
                            "typeString": "bytes20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2105:37:2"
                      },
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2162:546:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2177:24:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2196:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2190:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2190:11:2"
                              },
                              "variables": [
                                {
                                  "name": "clone",
                                  "nodeType": "YulTypedName",
                                  "src": "2181:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "clone",
                                    "nodeType": "YulIdentifier",
                                    "src": "2222:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2229:66:2",
                                    "type": "",
                                    "value": "0x363d3d373d3d3d363d7300000000000000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2215:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2215:81:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2215:81:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "clone",
                                        "nodeType": "YulIdentifier",
                                        "src": "2321:5:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2328:3:2",
                                        "type": "",
                                        "value": "0xa"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2317:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2317:15:2"
                                  },
                                  {
                                    "name": "targetBytes",
                                    "nodeType": "YulIdentifier",
                                    "src": "2334:11:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2310:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2310:36:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2310:36:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "clone",
                                        "nodeType": "YulIdentifier",
                                        "src": "2371:5:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2378:4:2",
                                        "type": "",
                                        "value": "0x1e"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2367:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2367:16:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2385:66:2",
                                    "type": "",
                                    "value": "0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2360:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2360:92:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2360:92:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2468:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "clone",
                                    "nodeType": "YulIdentifier",
                                    "src": "2485:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2492:4:2",
                                    "type": "",
                                    "value": "0x40"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2481:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2481:16:2"
                              },
                              "variables": [
                                {
                                  "name": "other",
                                  "nodeType": "YulTypedName",
                                  "src": "2472:5:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "query",
                                    "nodeType": "YulIdentifier",
                                    "src": "2523:5:2"
                                  },
                                  {
                                    "name": "other",
                                    "nodeType": "YulIdentifier",
                                    "src": "2530:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2537:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2540:4:2",
                                    "type": "",
                                    "value": "0x2d"
                                  }
                                ],
                                "functionName": {
                                  "name": "extcodecopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "2511:11:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2511:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2511:34:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2559:138:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "clone",
                                            "nodeType": "YulIdentifier",
                                            "src": "2596:5:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2590:5:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2590:12:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "other",
                                            "nodeType": "YulIdentifier",
                                            "src": "2610:5:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2604:5:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2604:12:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2587:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2587:30:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "clone",
                                                "nodeType": "YulIdentifier",
                                                "src": "2645:5:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2652:3:2",
                                                "type": "",
                                                "value": "0xd"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2641:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2641:15:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2635:5:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2635:22:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "other",
                                                "nodeType": "YulIdentifier",
                                                "src": "2669:5:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2676:3:2",
                                                "type": "",
                                                "value": "0xd"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2665:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2665:15:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "2659:5:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2659:22:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2632:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2632:50:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2569:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2569:128:2"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "2559:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "istanbul",
                        "externalReferences": [
                          {
                            "declaration": 1316,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2523:5:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1319,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2559:6:2",
                            "valueSize": 1
                          },
                          {
                            "declaration": 1322,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2334:11:2",
                            "valueSize": 1
                          }
                        ],
                        "id": 1328,
                        "nodeType": "InlineAssembly",
                        "src": "2153:555:2"
                      }
                    ]
                  },
                  "id": 1330,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isClone",
                  "nameLocation": "2019:7:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1314,
                        "mutability": "mutable",
                        "name": "target",
                        "nameLocation": "2035:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1330,
                        "src": "2027:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1313,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2027:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1316,
                        "mutability": "mutable",
                        "name": "query",
                        "nameLocation": "2051:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1330,
                        "src": "2043:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1315,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2043:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2026:31:2"
                  },
                  "returnParameters": {
                    "id": 1320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1319,
                        "mutability": "mutable",
                        "name": "result",
                        "nameLocation": "2086:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 1330,
                        "src": "2081:11:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1318,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2081:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2080:13:2"
                  },
                  "scope": 1331,
                  "src": "2010:705:2",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 1332,
              "src": "1477:1241:2",
              "usedErrors": []
            }
          ],
          "src": "1451:1269:2"
        },
        "id": 2
      },
      "openzeppelin-solidity/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "openzeppelin-solidity/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1542
            ],
            "Ownable": [
              1441
            ]
          },
          "id": 1442,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1333,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:3"
            },
            {
              "absolutePath": "openzeppelin-solidity/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1334,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1442,
              "sourceUnit": 1543,
              "src": "58:30:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1336,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1542,
                    "src": "613:7:3"
                  },
                  "id": 1337,
                  "nodeType": "InheritanceSpecifier",
                  "src": "613:7:3"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1335,
                "nodeType": "StructuredDocumentation",
                "src": "89:494:3",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 1441,
              "linearizedBaseContracts": [
                1441,
                1542
              ],
              "name": "Ownable",
              "nameLocation": "602:7:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1339,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "643:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "627:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "627:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 1345,
                  "name": "OwnershipTransferred",
                  "nameLocation": "662:20:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1341,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "699:13:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1345,
                        "src": "683:29:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1340,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1343,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "730:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1345,
                        "src": "714:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "714:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "682:57:3"
                  },
                  "src": "656:84:3"
                },
                {
                  "body": {
                    "id": 1366,
                    "nodeType": "Block",
                    "src": "857:135:3",
                    "statements": [
                      {
                        "assignments": [
                          1350
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1350,
                            "mutability": "mutable",
                            "name": "msgSender",
                            "nameLocation": "875:9:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1366,
                            "src": "867:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1349,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "867:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1353,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1351,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1530,
                            "src": "887:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "887:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "867:32:3"
                      },
                      {
                        "expression": {
                          "id": 1356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1354,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1339,
                            "src": "909:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1355,
                            "name": "msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1350,
                            "src": "918:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "909:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1357,
                        "nodeType": "ExpressionStatement",
                        "src": "909:18:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "971:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "963:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1359,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "963:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "963:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1363,
                              "name": "msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1350,
                              "src": "975:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1358,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "942:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "942:43:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1365,
                        "nodeType": "EmitStatement",
                        "src": "937:48:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1346,
                    "nodeType": "StructuredDocumentation",
                    "src": "746:91:3",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 1367,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1347,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "854:2:3"
                  },
                  "returnParameters": {
                    "id": 1348,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "857:0:3"
                  },
                  "scope": 1441,
                  "src": "842:150:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1375,
                    "nodeType": "Block",
                    "src": "1123:30:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1373,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1339,
                          "src": "1140:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1372,
                        "id": 1374,
                        "nodeType": "Return",
                        "src": "1133:13:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1368,
                    "nodeType": "StructuredDocumentation",
                    "src": "998:65:3",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 1376,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1077:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1082:2:3"
                  },
                  "returnParameters": {
                    "id": 1372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1371,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1376,
                        "src": "1114:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1370,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1113:9:3"
                  },
                  "scope": 1441,
                  "src": "1068:85:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1389,
                    "nodeType": "Block",
                    "src": "1262:96:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1380,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1376,
                                  "src": "1280:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 1381,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1280:7:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1382,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1530,
                                  "src": "1291:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 1383,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1291:12:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1280:23:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 1385,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1305:34:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 1379,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1272:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1272:68:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1387,
                        "nodeType": "ExpressionStatement",
                        "src": "1272:68:3"
                      },
                      {
                        "id": 1388,
                        "nodeType": "PlaceholderStatement",
                        "src": "1350:1:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1377,
                    "nodeType": "StructuredDocumentation",
                    "src": "1159:77:3",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 1390,
                  "name": "onlyOwner",
                  "nameLocation": "1250:9:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1378,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:2:3"
                  },
                  "src": "1241:117:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1411,
                    "nodeType": "Block",
                    "src": "1754:91:3",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1397,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "1790:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1806:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1798:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1398,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1798:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1798:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1396,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "1769:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1769:40:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1403,
                        "nodeType": "EmitStatement",
                        "src": "1764:45:3"
                      },
                      {
                        "expression": {
                          "id": 1409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1404,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1339,
                            "src": "1819:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1836:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1828:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1405,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1828:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1828:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1819:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1410,
                        "nodeType": "ExpressionStatement",
                        "src": "1819:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1391,
                    "nodeType": "StructuredDocumentation",
                    "src": "1364:331:3",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 1412,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1394,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1393,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1390,
                        "src": "1744:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1744:9:3"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1709:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1392,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1726:2:3"
                  },
                  "returnParameters": {
                    "id": 1395,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1754:0:3"
                  },
                  "scope": 1441,
                  "src": "1700:145:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1439,
                    "nodeType": "Block",
                    "src": "2064:170:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1421,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1415,
                                "src": "2082:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1424,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2102:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1423,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2094:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1422,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2094:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2094:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2082:22:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 1427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2106:40:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 1420,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2074:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2074:73:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1429,
                        "nodeType": "ExpressionStatement",
                        "src": "2074:73:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1431,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1339,
                              "src": "2183:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1432,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1415,
                              "src": "2191:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1430,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1345,
                            "src": "2162:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2162:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1434,
                        "nodeType": "EmitStatement",
                        "src": "2157:43:3"
                      },
                      {
                        "expression": {
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1435,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1339,
                            "src": "2210:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1436,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1415,
                            "src": "2219:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2210:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1438,
                        "nodeType": "ExpressionStatement",
                        "src": "2210:17:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1413,
                    "nodeType": "StructuredDocumentation",
                    "src": "1851:138:3",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 1440,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1418,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1417,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1390,
                        "src": "2054:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2054:9:3"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2003:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1415,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2029:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1440,
                        "src": "2021:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1414,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2021:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2020:18:3"
                  },
                  "returnParameters": {
                    "id": 1419,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2064:0:3"
                  },
                  "scope": 1441,
                  "src": "1994:240:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1442,
              "src": "584:1652:3",
              "usedErrors": []
            }
          ],
          "src": "33:2204:3"
        },
        "id": 3
      },
      "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1519
            ]
          },
          "id": 1520,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1443,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1444,
                "nodeType": "StructuredDocumentation",
                "src": "58:70:4",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1519,
              "linearizedBaseContracts": [
                1519
              ],
              "name": "IERC20",
              "nameLocation": "139:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1445,
                    "nodeType": "StructuredDocumentation",
                    "src": "152:66:4",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1450,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "232:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1446,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:4"
                  },
                  "returnParameters": {
                    "id": 1449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1448,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1450,
                        "src": "269:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1447,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "268:9:4"
                  },
                  "scope": 1519,
                  "src": "223:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1451,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:72:4",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1458,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "370:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1453,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "388:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1458,
                        "src": "380:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "379:17:4"
                  },
                  "returnParameters": {
                    "id": 1457,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1456,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1458,
                        "src": "420:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1455,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:9:4"
                  },
                  "scope": 1519,
                  "src": "361:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1459,
                    "nodeType": "StructuredDocumentation",
                    "src": "435:209:4",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1468,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "658:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1464,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1461,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "675:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1468,
                        "src": "667:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1460,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1463,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "694:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1468,
                        "src": "686:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1462,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:35:4"
                  },
                  "returnParameters": {
                    "id": 1467,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1466,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1468,
                        "src": "720:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1465,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:6:4"
                  },
                  "scope": 1519,
                  "src": "649:77:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1469,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1478,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1010:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1474,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1471,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1028:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "1020:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1473,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1043:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "1035:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1472,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:32:4"
                  },
                  "returnParameters": {
                    "id": 1477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1476,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1478,
                        "src": "1075:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1074:9:4"
                  },
                  "scope": 1519,
                  "src": "1001:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1479,
                    "nodeType": "StructuredDocumentation",
                    "src": "1090:642:4",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1488,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1746:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1481,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1762:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1488,
                        "src": "1754:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1480,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1483,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1779:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1488,
                        "src": "1771:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1482,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:33:4"
                  },
                  "returnParameters": {
                    "id": 1487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1486,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1488,
                        "src": "1805:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1485,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:6:4"
                  },
                  "scope": 1519,
                  "src": "1737:74:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1489,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:296:4",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1500,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2127:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1491,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2148:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1500,
                        "src": "2140:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1490,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2140:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1493,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2164:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1500,
                        "src": "2156:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2156:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1495,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2183:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1500,
                        "src": "2175:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1494,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2175:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:51:4"
                  },
                  "returnParameters": {
                    "id": 1499,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1498,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1500,
                        "src": "2209:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1497,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2209:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2208:6:4"
                  },
                  "scope": 1519,
                  "src": "2118:97:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1501,
                    "nodeType": "StructuredDocumentation",
                    "src": "2221:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 1509,
                  "name": "Transfer",
                  "nameLocation": "2390:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1508,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1503,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2415:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "2399:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1502,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2399:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1505,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2437:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "2421:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2421:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1507,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2449:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1509,
                        "src": "2441:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1506,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2441:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2398:57:4"
                  },
                  "src": "2384:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1510,
                    "nodeType": "StructuredDocumentation",
                    "src": "2462:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 1518,
                  "name": "Approval",
                  "nameLocation": "2621:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1512,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2646:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "2630:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1511,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2630:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1514,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2669:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "2653:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2653:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1516,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2686:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1518,
                        "src": "2678:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1515,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2678:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2629:63:4"
                  },
                  "src": "2615:78:4"
                }
              ],
              "scope": 1520,
              "src": "129:2566:4",
              "usedErrors": []
            }
          ],
          "src": "33:2663:4"
        },
        "id": 4
      },
      "openzeppelin-solidity/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "openzeppelin-solidity/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1542
            ]
          },
          "id": 1543,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1521,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:5"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 1542,
              "linearizedBaseContracts": [
                1542
              ],
              "name": "Context",
              "nameLocation": "572:7:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1529,
                    "nodeType": "Block",
                    "src": "648:34:5",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1526,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "665:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "665:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1525,
                        "id": 1528,
                        "nodeType": "Return",
                        "src": "658:17:5"
                      }
                    ]
                  },
                  "id": 1530,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "595:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1522,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "605:2:5"
                  },
                  "returnParameters": {
                    "id": 1525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1524,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1530,
                        "src": "639:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1523,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "639:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "638:9:5"
                  },
                  "scope": 1542,
                  "src": "586:96:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1540,
                    "nodeType": "Block",
                    "src": "755:165:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1535,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "765:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Context_$1542",
                            "typeString": "contract Context"
                          }
                        },
                        "id": 1536,
                        "nodeType": "ExpressionStatement",
                        "src": "765:4:5"
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 1537,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "905:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "905:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1534,
                        "id": 1539,
                        "nodeType": "Return",
                        "src": "898:15:5"
                      }
                    ]
                  },
                  "id": 1541,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "697:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1531,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "705:2:5"
                  },
                  "returnParameters": {
                    "id": 1534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1533,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1541,
                        "src": "739:14:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "739:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "738:16:5"
                  },
                  "scope": 1542,
                  "src": "688:232:5",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1543,
              "src": "554:368:5",
              "usedErrors": []
            }
          ],
          "src": "33:890:5"
        },
        "id": 5
      }
    }
  }
}
