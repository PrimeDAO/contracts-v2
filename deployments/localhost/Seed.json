{
  "address": "0xd8605eB4e66B6bdC39Cd8cf17655a749A59e4611",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReclaimed",
          "type": "uint256"
        }
      ],
      "name": "FundingReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPurchased",
          "type": "uint256"
        }
      ],
      "name": "SeedsPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "calculateClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "checkWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "seedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fundingAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeClaimed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_softHardThresholds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_vestingDuration",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_vestingCliff",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "_permissionedSeed",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "_fee",
          "type": "uint8"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionedSeed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveFundingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFunderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "unwhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCliff",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_buyers",
          "type": "address[]"
        }
      ],
      "name": "whitelistBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa1884ded268914c715e9cbcd3a135c7a852a2af8421c45c810dee1d78440e27a",
  "receipt": {
    "to": null,
    "from": "0xB718DBe1366301B505Dcf6877ba855458B6B74c3",
    "contractAddress": "0xd8605eB4e66B6bdC39Cd8cf17655a749A59e4611",
    "transactionIndex": 0,
    "gasUsed": "2407416",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x5bce522e5cea379c594366985a418085c2f8a2afc5317f5c3e24260c9b90ed6e",
    "transactionHash": "0xa1884ded268914c715e9cbcd3a135c7a852a2af8421c45c810dee1d78440e27a",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "2407416",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "43a917893e49ec304360da382db54194",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReclaimed\",\"type\":\"uint256\"}],\"name\":\"FundingReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPurchased\",\"type\":\"uint256\"}],\"name\":\"SeedsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"calculateClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"checkWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"seedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_softHardThresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_vestingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_vestingCliff\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"_permissionedSeed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"_fee\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionedSeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveFundingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"unwhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCliff\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_buyers\",\"type\":\"address[]\"}],\"name\":\"whitelistBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for seed phases of liquid launch.\",\"kind\":\"dev\",\"methods\":{\"buy(uint256)\":{\"details\":\"Buy seed tokens.\",\"params\":{\"_fundingAmount\":\"The amount of funding tokens to contribute.\"}},\"calculateClaim(address)\":{\"details\":\"Calculates the maximum claim\",\"params\":{\"_funder\":\"Address of funder to find the maximum claim\"}},\"checkWhitelisted(address)\":{\"details\":\"check whitelist status of a buyer\",\"params\":{\"_buyer\":\"address of buyer to check status\"}},\"claim(address,uint256)\":{\"details\":\"Claim vested seed tokens.\",\"params\":{\"_claimAmount\":\"The amount of seed token a users wants to claim.\",\"_funder\":\"Address of funder to calculate seconds and amount claimable\"}},\"close()\":{\"details\":\"Close distribution.\"},\"initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint8)\":{\"details\":\"Initialize Seed.\",\"params\":{\"_admin\":\"The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.\",\"_beneficiary\":\"The address that recieves fees.\",\"_endTime\":\"Distribution end time in unix timecode.\",\"_fee\":\"Success fee expressed as a % (e.g. 2 = 2% fee)\",\"_permissionedSeed\":\"Set to true if only whitelisted adresses are allowed to participate.\",\"_price\":\"The price in wei of fundingTokens when exchanged for seedTokens.\",\"_softHardThresholds\":\"Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.\",\"_startTime\":\"Distribution start time in unix timecode.\",\"_tokens\":\"Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.\",\"_vestingCliff\":\"Cliff duration in seconds.\",\"_vestingDuration\":\"Vesting period duration in seconds.\"}},\"pause()\":{\"details\":\"Pause distribution.\"},\"retrieveFundingTokens()\":{\"details\":\"Returns funding tokens to user.\"},\"unpause()\":{\"details\":\"Unpause distribution.\"},\"unwhitelist(address)\":{\"details\":\"Remove address from whitelist.\",\"params\":{\"buyer\":\"Address which needs to be unwhitelisted\"}},\"updateMetadata(bytes)\":{\"details\":\"Updates metadata.\",\"params\":{\"_metadata\":\"Seed contract metadata, that is IPFS Hash\"}},\"whitelist(address)\":{\"details\":\"Add address to whitelist.\",\"params\":{\"_buyer\":\"Address which needs to be whitelisted\"}},\"whitelistBatch(address[])\":{\"details\":\"Add multiple addresses to whitelist.\",\"params\":{\"_buyers\":\"Array of addresses to whitelist addresses in batch\"}},\"withdraw()\":{\"details\":\"Withdraw funds from the contract\"}},\"title\":\"PrimeDAO Seed contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/seed/Seed.sol\":\"Seed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/seed/Seed.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0-or-later\\n/* solhint-disable space-after-comma */\\n/* solhint-disable max-states-count */\\n// solium-disable linebreak-style\\npragma solidity 0.8.4;\\n\\nimport \\\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\\\";\\n\\n\\n/**\\n * @title PrimeDAO Seed contract\\n * @dev   Smart contract for seed phases of liquid launch.\\n */\\ncontract Seed {\\n    // Locked parameters\\n    address public beneficiary;\\n    address public admin;\\n    uint256 public softCap;\\n    uint256 public hardCap;\\n    uint256 public seedAmountRequired;    // Amount of seed required for distribution\\n    uint256 public feeAmountRequired;     // Amount of seed required for fee\\n    uint256 public price;\\n    uint256 public startTime;\\n    uint256 public endTime;               // set by project admin, this is the last resort endTime to be applied when\\n                                          //     maximumReached has not been reached by then\\n    bool    public permissionedSeed;\\n    uint32  public vestingDuration;\\n    uint32  public vestingCliff;\\n    IERC20  public seedToken;\\n    IERC20  public fundingToken;\\n    uint8   public fee;\\n\\n    bytes   public metadata;           // IPFS Hash\\n\\n    uint256 constant internal PCT_BASE        = 10 ** 18;  // // 0% = 0; 1% = 10 ** 16; 100% = 10 ** 18\\n\\n    // Contract logic\\n    bool    public closed;                 // is the distribution closed\\n    bool    public paused;                 // is the distribution paused\\n    bool    public isFunded;               // distribution can only start when required seed tokens have been funded\\n    bool    public initialized;            // is this contract initialized [not necessary that it is funded]\\n    bool    public minimumReached;         // if the softCap[minimum limit of funding token] is reached\\n    bool    public maximumReached;         // if the hardCap[maximum limit of funding token] is reached\\n    uint256 public vestingStartTime;       // timestamp for when vesting starts, by default == endTime,\\n                                           //     otherwise when maximumReached is reached\\n    uint256 public totalFunderCount;       // Total funders that have contributed.\\n    uint256 public seedRemainder;          // Amount of seed tokens remaining to be distributed\\n    uint256 public seedClaimed;            // Amount of seed token claimed by the user.\\n    uint256 public feeRemainder;           // Amount of seed tokens remaining for the fee\\n    uint256 public feeClaimed;             // Amount of seed tokens claimed as fee\\n    uint256 public fundingCollected;       // Amount of funding tokens collected by the seed contract.\\n    uint256 public fundingWithdrawn;       // Amount of funding token withdrawn from the seed contract.\\n\\n    mapping (address => bool) public whitelisted;        // funders that are whitelisted and allowed to contribute\\n    mapping (address => FunderPortfolio) public funders; // funder address to funder portfolio\\n\\n    event SeedsPurchased(address indexed recipient, uint256 amountPurchased);\\n    event TokensClaimed(address indexed recipient,uint256 amount,address indexed beneficiary,uint256 feeAmount);\\n    event FundingReclaimed(address indexed recipient, uint256 amountReclaimed);\\n    event MetadataUpdated(bytes indexed metadata);\\n\\n    struct FunderPortfolio {\\n        uint256 seedAmount;                 // Total amount of seed tokens bought\\n        uint256 totalClaimed;               // Total amount of seed tokens claimed\\n        uint256 fundingAmount;              // Total amount of funding tokens contributed\\n        uint256 fee;                        // Total amount of fee in seed amount for this portfolio\\n        uint256 feeClaimed;                 // Total amount of fee sent to beneficiary for this portfolio\\n    }\\n\\n    modifier initializer() {\\n        require(!initialized, \\\"Seed: contract already initialized\\\");\\n        initialized = true;\\n        _;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Seed: caller should be admin\\\");\\n        _;\\n    }\\n\\n    modifier isActive() {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(!paused, \\\"Seed: should not be paused\\\");\\n        _;\\n    }\\n\\n    modifier allowedToBuy() {\\n        require(!maximumReached, \\\"Seed: maximum funding reached\\\");\\n        require(!permissionedSeed || whitelisted[msg.sender], \\\"Seed: sender has no rights\\\");\\n        require(endTime >= block.timestamp && startTime <= block.timestamp,\\n            \\\"Seed: only allowed during distribution period\\\");\\n        _;\\n    }\\n\\n    modifier allowedToClaim() {\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\n        require(endTime <= block.timestamp || maximumReached,\\\"Seed: the distribution has not yet finished\\\");\\n        _;\\n    }\\n\\n    modifier allowedToRetrieve() {\\n        require(!paused, \\\"Seed: should not be paused\\\");\\n        require(startTime <= block.timestamp, \\\"Seed: distribution haven't started\\\");\\n        require(!minimumReached, \\\"Seed: minimum already met\\\");\\n        _;\\n    }\\n\\n    modifier allowedToWithdraw() {\\n        require(!paused, \\\"Seed: should not be paused\\\");\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\n        _;\\n    }\\n\\n    /**\\n      * @dev                          Initialize Seed.\\n      * @param _beneficiary           The address that recieves fees.\\n      * @param _admin                 The address of the admin of this contract. Funds contract\\n                                      and has permissions to whitelist users, pause and close contract.\\n      * @param _tokens                Array containing two params:\\n                                        - The address of the seed token being distributed.\\n      *                                 - The address of the funding token being exchanged for seed token.\\n      * @param _softHardThresholds     Array containing two params:\\n                                        - the minimum funding token collection threshold in wei denomination.\\n                                        - the highest possible funding token amount to be raised in wei denomination.\\n      * @param _price                 The price in wei of fundingTokens when exchanged for seedTokens.\\n      * @param _startTime             Distribution start time in unix timecode.\\n      * @param _endTime               Distribution end time in unix timecode.\\n      * @param _vestingDuration       Vesting period duration in seconds.\\n      * @param _vestingCliff          Cliff duration in seconds.\\n      * @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\\n      * @param _fee                   Success fee expressed as a % (e.g. 2 = 2% fee)\\n    */\\n    function initialize(\\n        address _beneficiary,\\n        address _admin,\\n        address[] memory _tokens,\\n        uint256[] memory _softHardThresholds,\\n        uint256 _price,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        uint32  _vestingDuration,\\n        uint32  _vestingCliff,\\n        bool    _permissionedSeed,\\n        uint8   _fee\\n    ) public initializer\\n    {\\n\\n        // parameter check\\n        require(_tokens[0] != _tokens[1], \\\"SeedFactory: seedToken cannot be fundingToken\\\");\\n        require(_softHardThresholds[1] >= _softHardThresholds[0],\\\"SeedFactory: hardCap cannot be less than softCap\\\");\\n        require(_vestingDuration >= _vestingCliff, \\\"SeedFactory: vestingDuration cannot be less than vestingCliff\\\");\\n        require(_endTime > _startTime, \\\"SeedFactory: endTime cannot be less than equal to startTime\\\");\\n\\n        beneficiary       = _beneficiary;\\n        admin             = _admin;\\n        softCap           = _softHardThresholds[0];\\n        hardCap           = _softHardThresholds[1];\\n        price             = _price;\\n        startTime         = _startTime;\\n        endTime           = _endTime;\\n        vestingStartTime  = endTime;\\n        vestingDuration   = _vestingDuration;\\n        vestingCliff      = _vestingCliff;\\n        permissionedSeed  = _permissionedSeed;\\n        seedToken         = IERC20(_tokens[0]);\\n        fundingToken      = IERC20(_tokens[1]);\\n        fee               = _fee;\\n\\n        seedAmountRequired = (hardCap*PCT_BASE) / _price;\\n        feeAmountRequired  = (seedAmountRequired*_fee) / 100;\\n        seedRemainder      = seedAmountRequired;\\n        feeRemainder       = feeAmountRequired;\\n    }\\n\\n    /**\\n      * @dev                     Buy seed tokens.\\n      * @param _fundingAmount    The amount of funding tokens to contribute.\\n    */\\n    function buy(uint256 _fundingAmount) public isActive allowedToBuy returns(uint256, uint256) {\\n        if (!isFunded) {\\n            require(seedToken.balanceOf(address(this)) >= seedAmountRequired + feeAmountRequired,\\n                \\\"Seed: sufficient seeds not provided\\\");\\n            isFunded = true;\\n        }\\n        // fundingAmount is an amount of fundingTokens required to buy _seedAmount of SeedTokens\\n        uint256 seedAmount = (_fundingAmount*PCT_BASE)/price;\\n\\n        // Funding Token balance of this contract;\\n        uint256 fundingBalance = fundingCollected;\\n\\n        // feeAmount is an amount of fee we are going to get in seedTokens\\n        uint256 feeAmount = (seedAmount*fee) / 100;\\n\\n        // total fundingAmount should not be greater than the hardCap\\n        require( fundingBalance + _fundingAmount <= hardCap,\\n            \\\"Seed: amount exceeds contract sale hardCap\\\");\\n\\n        require( seedRemainder >= seedAmount,\\n            \\\"Seed: seed distribution would be exceeded\\\");\\n\\n        fundingCollected = fundingBalance + _fundingAmount;\\n\\n        // the amount of seed tokens still to be distributed\\n        seedRemainder -= seedAmount;\\n        feeRemainder  -= feeAmount;\\n\\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\\n        require(fundingToken.transferFrom(msg.sender, address(this), _fundingAmount), \\\"Seed: no tokens\\\");\\n\\n        if (fundingCollected >= softCap) {\\n            minimumReached = true;\\n        }\\n        if (fundingCollected >= hardCap) {\\n            maximumReached = true;\\n            vestingStartTime = _currentTime();\\n        }\\n\\n        _addFunder(\\n            msg.sender,\\n            (funders[msg.sender].seedAmount + seedAmount),         // Previous Seed Amount + new seed amount\\n            (funders[msg.sender].fundingAmount + _fundingAmount),  // Previous Funding Amount + new funding amount\\n            funders[msg.sender].totalClaimed,\\n            (funders[msg.sender].fee + feeAmount),                  // Previous Fee + new fee\\n            funders[msg.sender].feeClaimed\\n            );\\n\\n        // buyer, seed token purchased in this transaction (not the total amount of seed purchased)\\n        emit SeedsPurchased(msg.sender, seedAmount);\\n\\n        return (seedAmount, feeAmount);\\n    }\\n\\n    /**\\n      * @dev                     Claim vested seed tokens.\\n      * @param _funder           Address of funder to calculate seconds and amount claimable\\n      * @param _claimAmount      The amount of seed token a users wants to claim.\\n    */\\n    function claim(address _funder, uint256 _claimAmount) public allowedToClaim returns(uint256) {\\n        uint256 amountClaimable;\\n\\n        amountClaimable = calculateClaim(_funder);\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\n        require(amountClaimable >= _claimAmount, \\\"Seed: request is greater than claimable amount\\\");\\n        uint256 feeAmountOnClaim = (_claimAmount * fee) / 100;\\n\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\n\\n        tokenFunder.totalClaimed    += _claimAmount;\\n        tokenFunder.feeClaimed      += feeAmountOnClaim;\\n        funders[_funder] = tokenFunder;\\n\\n        seedClaimed += _claimAmount;\\n        feeClaimed  += feeAmountOnClaim;\\n        require(seedToken.transfer(beneficiary, feeAmountOnClaim), \\\"Seed: cannot transfer to beneficiary\\\");\\n        require(seedToken.transfer(_funder, _claimAmount), \\\"Seed: no tokens\\\");\\n\\n        emit TokensClaimed(_funder, _claimAmount, beneficiary, feeAmountOnClaim);\\n\\n        // fee on the distributed reward collected from admin\\n        return (feeAmountOnClaim);\\n    }\\n\\n    /**\\n      * @dev         Returns funding tokens to user.\\n    */\\n    function retrieveFundingTokens() public allowedToRetrieve returns(uint256) {\\n        require(funders[msg.sender].fundingAmount > 0, \\\"Seed: zero funding amount\\\");\\n        FunderPortfolio memory tokenFunder = funders[msg.sender];\\n        uint256 fundingAmount = tokenFunder.fundingAmount;\\n        seedRemainder += tokenFunder.seedAmount;\\n        feeRemainder += tokenFunder.fee;\\n        tokenFunder.seedAmount    = 0;\\n        tokenFunder.fee           = 0;\\n        tokenFunder.fundingAmount = 0;\\n        funders[msg.sender]  = tokenFunder;\\n        fundingCollected -= fundingAmount;\\n        require(\\n            fundingToken.transfer(msg.sender, fundingAmount),\\n            \\\"Seed: cannot return funding tokens to msg.sender\\\"\\n        );\\n        emit FundingReclaimed(msg.sender, fundingAmount);\\n\\n        return fundingAmount;\\n    }\\n\\n    // ADMIN ACTIONS\\n\\n    /**\\n      * @dev                     Pause distribution.\\n    */\\n    function pause() public onlyAdmin isActive {\\n        paused = true;\\n    }\\n\\n    /**\\n      * @dev                     Unpause distribution.\\n    */\\n    function unpause() public onlyAdmin {\\n        require(closed != true, \\\"Seed: should not be closed\\\");\\n        require(paused == true, \\\"Seed: should be paused\\\");\\n\\n        paused = false;\\n    }\\n\\n    /**\\n      * @dev                     Close distribution.\\n    */\\n    function close() public onlyAdmin isActive {\\n        // transfer seed tokens back to admin\\n        if (minimumReached) {\\n            // remaining seeds = seedRemainder + feeRemainder\\n            uint256 seedToTransfer = seedRemainder+feeRemainder;\\n            require(\\n                seedToken.transfer(admin, seedToTransfer),\\n                \\\"Seed: should transfer seed tokens to admin\\\"\\n            );\\n            paused = false;\\n        } else {\\n            require(\\n                seedToken.transfer(admin, seedAmountRequired+feeAmountRequired),\\n                \\\"Seed: should transfer seed tokens to admin\\\"\\n            );\\n            closed = true;\\n            paused = false;\\n        }\\n    }\\n\\n    /**\\n      * @dev                     Add address to whitelist.\\n      * @param _buyer            Address which needs to be whitelisted\\n    */\\n    function whitelist(address _buyer) public onlyAdmin isActive {\\n        require(permissionedSeed == true, \\\"Seed: module is not whitelisted\\\");\\n\\n        whitelisted[_buyer] = true;\\n    }\\n\\n    /**\\n      * @dev                     Add multiple addresses to whitelist.\\n      * @param _buyers           Array of addresses to whitelist addresses in batch\\n    */\\n    function whitelistBatch(address[] memory _buyers) public onlyAdmin isActive {\\n        require(permissionedSeed == true, \\\"Seed: module is not whitelisted\\\");\\n        for (uint256 i = 0; i < _buyers.length; i++) {\\n            whitelisted[_buyers[i]] = true;\\n        }\\n    }\\n\\n    /**\\n      * @dev                     Remove address from whitelist.\\n      * @param buyer             Address which needs to be unwhitelisted\\n    */\\n    function unwhitelist(address buyer) public onlyAdmin isActive {\\n        require(permissionedSeed == true, \\\"Seed: module is not whitelisted\\\");\\n\\n        whitelisted[buyer] = false;\\n    }\\n\\n    /**\\n      * @dev                     Withdraw funds from the contract\\n    */\\n    function withdraw() public onlyAdmin allowedToWithdraw {\\n        uint pendingFundingBalance = fundingCollected - fundingWithdrawn;\\n        fundingWithdrawn = fundingCollected;\\n        fundingToken.transfer(msg.sender, pendingFundingBalance);\\n    }\\n\\n    /**\\n      * @dev                     Updates metadata.\\n      * @param _metadata         Seed contract metadata, that is IPFS Hash\\n    */\\n    function updateMetadata(bytes memory _metadata) public {\\n        require(\\n            initialized != true || msg.sender == admin,\\n            \\\"Seed: contract should not be initialized or caller should be admin\\\"\\n        );\\n        metadata = _metadata;\\n        emit MetadataUpdated(_metadata);\\n    }\\n\\n    // GETTER FUNCTIONS\\n    /**\\n      * @dev                     Calculates the maximum claim\\n      * @param _funder           Address of funder to find the maximum claim\\n    */\\n    function calculateClaim(address _funder) public view returns(uint256) {\\n        FunderPortfolio memory tokenFunder = funders[_funder];\\n\\n        if (_currentTime() < vestingStartTime) {\\n            return 0;\\n        }\\n\\n        // Check cliff was reached\\n        uint256 elapsedSeconds = _currentTime() - vestingStartTime;\\n\\n        if (elapsedSeconds < vestingCliff) {\\n            return 0;\\n        }\\n\\n        // If over vesting duration, all tokens vested\\n        if (elapsedSeconds >= vestingDuration) {\\n            return tokenFunder.seedAmount - tokenFunder.totalClaimed;\\n        } else {\\n            uint256 amountVested = (elapsedSeconds*tokenFunder.seedAmount) / vestingDuration;\\n            return amountVested - tokenFunder.totalClaimed;\\n        }\\n    }\\n\\n    /**\\n      * @dev                     check whitelist status of a buyer\\n      * @param _buyer            address of buyer to check status\\n    */\\n    function checkWhitelisted(address _buyer) public view returns(bool) {\\n        return whitelisted[_buyer];\\n    }\\n\\n    // INTERNAL FUNCTIONS\\n    /**\\n      * @dev                      get current time or block.timestamp\\n    */\\n    function _currentTime() internal view returns(uint256) {\\n        return block.timestamp;\\n    }\\n\\n    /**\\n      * @dev                      add/update funder portfolio\\n      * @param _recipient         Address of funder recipient\\n      * @param _seedAmount        seed amount of the funder\\n      * @param _fundingAmount     funding amount contributed\\n      * @param _totalClaimed      total seed token amount claimed\\n      * @param _fee               fee on seed amount bought\\n    */\\n    function _addFunder(\\n        address _recipient,\\n        uint256 _seedAmount,\\n        uint256 _fundingAmount,\\n        uint256 _totalClaimed,\\n        uint256 _fee,\\n        uint256 _feeClaimed\\n    )\\n    internal\\n    {\\n\\n        require(_seedAmount >= vestingDuration, \\\"Seed: amountVestedPerSecond > 0\\\");\\n\\n        funders[_recipient] = FunderPortfolio({\\n            seedAmount: _seedAmount,\\n            totalClaimed: _totalClaimed,\\n            fundingAmount: _fundingAmount,\\n            fee: _fee,\\n            feeClaimed: _feeClaimed\\n        });\\n        totalFunderCount++;\\n    }\\n}\\n\",\"keccak256\":\"0x3ab965b48ee8a872044b623ef721c7c6c25089ebe7625e55b16ce94f15c69824\",\"license\":\"GPL-3.0-or-later\"},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612a98806100206000396000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c806383d59e001161015c578063d8039364116100ce578063ea34554011610087578063ea345540146105bb578063eaa53523146105ce578063f3640e74146105e1578063f851a440146105f8578063fb86a4041461060b578063fc582d411461061457600080fd5b8063d803936414610519578063d936547e1461052c578063d96a094a1461054f578063ddca3f4314610577578063e565eb4c1461059d578063e6e36ebb146105b257600080fd5b80639b19251a116101205780639b19251a146104cf578063a035b1fe146104e2578063a8660a78146104eb578063aad3ec96146104f4578063b774682f14610507578063bc0f5f841461051057600080fd5b806383d59e001461049a5780638456cb59146104a35780638a2448aa146104ab578063906a26e0146104b35780639a590427146104bc57600080fd5b80633ccfd60b116102005780635c975abb116101b95780635c975abb146104475780635e9777e81461045957806371f4b8e81461046257806378065f271461046b57806378e979251461047e5780637c6543031461048757600080fd5b80633ccfd60b1461040a5780633dba9e41146104145780633f4ba83a1461042157806343d726d61461042957806347d02f1b14610431578063597e1fb51461043a57600080fd5b80631cfe562e116102525780631cfe562e1461037257806320d8dad01461037b578063311f8483146103a75780633197cbb6146103d957806338af3eed146103e2578063392f37e9146103f557600080fd5b8063031b36771461028f5780630826d2c7146102f9578063117a36d1146103105780631514617e14610334578063158ef93e1461035e575b600080fd5b6102cc61029d3660046124e5565b601660205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b610302600f5481565b6040519081526020016102f0565b600c5461032490600160281b900460ff1681565b60405190151581526020016102f0565b60095461034990610100900463ffffffff1681565b60405163ffffffff90911681526020016102f0565b600c54610324906301000000900460ff1681565b61030260135481565b6103246103893660046124e5565b6001600160a01b031660009081526015602052604090205460ff1690565b6009546103c190600160481b90046001600160a01b031681565b6040516001600160a01b0390911681526020016102f0565b61030260085481565b6000546103c1906001600160a01b031681565b6103fd610627565b6040516102f0919061273f565b6104126106b5565b005b6009546103249060ff1681565b6104126107db565b610412610890565b61030260105481565b600c546103249060ff1681565b600c5461032490610100900460ff1681565b610302600e5481565b61030260125481565b600a546103c1906001600160a01b031681565b61030260075481565b600c546103249062010000900460ff1681565b61030260145481565b610412610ac0565b610302610b46565b61030260025481565b6104126104ca3660046124e5565b610e8b565b6104126104dd3660046124e5565b610f48565b61030260065481565b610302600d5481565b6103026105023660046125ee565b611008565b61030260115481565b61030260045481565b610412610527366004612506565b611495565b61032461053a3660046124e5565b60156020526000908152604090205460ff1681565b61056261055d3660046126f3565b61196c565b604080519283526020830191909152016102f0565b600a5461058b90600160a01b900460ff1681565b60405160ff90911681526020016102f0565b600c5461032490640100000000900460ff1681565b61030260055481565b6103026105c93660046124e5565b611f3b565b6104126105dc366004612617565b61204a565b60095461034990600160281b900463ffffffff1681565b6001546103c1906001600160a01b031681565b61030260035481565b610412610622366004612666565b61215c565b600b8054610634906129cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610660906129cf565b80156106ad5780601f10610682576101008083540402835291602001916106ad565b820191906000526020600020905b81548152906001019060200180831161069057829003601f168201915b505050505081565b6001546001600160a01b031633146106e85760405162461bcd60e51b81526004016106df90612772565b60405180910390fd5b600c54610100900460ff16156107105760405162461bcd60e51b81526004016106df9061282a565b600c54640100000000900460ff1661073a5760405162461bcd60e51b81526004016106df90612898565b600060145460135461074c9190612988565b601354601455600a5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b15801561079f57600080fd5b505af11580156107b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d7919061264a565b5050565b6001546001600160a01b031633146108055760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615156001141561082d5760405162461bcd60e51b81526004016106df906127a9565b600c5460ff6101009091041615156001146108835760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b60448201526064016106df565b600c805461ff0019169055565b6001546001600160a01b031633146108ba5760405162461bcd60e51b81526004016106df90612772565b600c5460ff16156108dd5760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff16156109055760405162461bcd60e51b81526004016106df9061282a565b600c54640100000000900460ff16156109e6576000601154600f5461092a9190612931565b60095460015460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052929350600160481b909104169063a9059cbb90604401602060405180830381600087803b15801561098457600080fd5b505af1158015610998573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bc919061264a565b6109d85760405162461bcd60e51b81526004016106df906127e0565b50600c805461ff0019169055565b6009546001546005546004546001600160a01b03600160481b90940484169363a9059cbb931691610a1691612931565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610a5c57600080fd5b505af1158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a94919061264a565b610ab05760405162461bcd60e51b81526004016106df906127e0565b600c805461ffff19166001179055565b6001546001600160a01b03163314610aea5760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615610b0d5760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff1615610b355760405162461bcd60e51b81526004016106df9061282a565b600c805461ff001916610100179055565b600c54600090610100900460ff1615610b715760405162461bcd60e51b81526004016106df9061282a565b426007541115610bce5760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b60648201526084016106df565b600c54640100000000900460ff1615610c295760405162461bcd60e51b815260206004820152601960248201527f536565643a206d696e696d756d20616c7265616479206d65740000000000000060448201526064016106df565b33600090815260166020526040902060020154610c885760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e740000000000000060448201526064016106df565b336000908152601660209081526040808320815160a08101835281548082526001830154948201949094526002820154928101839052600382015460608201526004909101546080820152600f805491949293929091610ce9908490612931565b9091555050606082015160118054600090610d05908490612931565b90915550506000808352606083018181526040808501838152338452601660209081529184208651815591860151600183015551600282015590516003820155608084015160049091015560138054839290610d62908490612988565b9091555050600a5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b158015610db357600080fd5b505af1158015610dc7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610deb919061264a565b610e505760405162461bcd60e51b815260206004820152603060248201527f536565643a2063616e6e6f742072657475726e2066756e64696e6720746f6b6560448201526f3739903a379036b9b39739b2b73232b960811b60648201526084016106df565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a291505090565b6001546001600160a01b03163314610eb55760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615610ed85760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff1615610f005760405162461bcd60e51b81526004016106df9061282a565b60095460ff161515600114610f275760405162461bcd60e51b81526004016106df90612861565b6001600160a01b03166000908152601560205260409020805460ff19169055565b6001546001600160a01b03163314610f725760405162461bcd60e51b81526004016106df90612772565b600c5460ff1615610f955760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff1615610fbd5760405162461bcd60e51b81526004016106df9061282a565b60095460ff161515600114610fe45760405162461bcd60e51b81526004016106df90612861565b6001600160a01b03166000908152601560205260409020805460ff19166001179055565b600c54600090640100000000900460ff166110355760405162461bcd60e51b81526004016106df90612898565b4260085411158061104f5750600c54600160281b900460ff165b6110af5760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b60648201526084016106df565b60006110ba84611f3b565b90506000811161110c5760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c652069732030000000000060448201526064016106df565b828110156111735760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b60648201526084016106df565b600a5460009060649061119090600160a01b900460ff1686612969565b61119a9190612949565b6001600160a01b038616600090815260166020908152604091829020825160a0810184528154815260018201549281018381526002830154948201949094526003820154606082015260049091015460808201529293508691906111ff908390612931565b905250608081018051839190611216908390612931565b9052506001600160a01b038616600090815260166020908152604080832084518155918401516001830155830151600282015560608301516003820155608083015160049091015560108054879290611270908490612931565b9250508190555081601260008282546112899190612931565b909155505060095460005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101859052600160481b909204169063a9059cbb90604401602060405180830381600087803b1580156112e557600080fd5b505af11580156112f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061131d919061264a565b6113755760405162461bcd60e51b8152602060048201526024808201527f536565643a2063616e6e6f74207472616e7366657220746f2062656e656669636044820152636961727960e01b60648201526084016106df565b60095460405163a9059cbb60e01b81526001600160a01b03888116600483015260248201889052600160481b9092049091169063a9059cbb90604401602060405180830381600087803b1580156113cb57600080fd5b505af11580156113df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611403919061264a565b6114415760405162461bcd60e51b815260206004820152600f60248201526e536565643a206e6f20746f6b656e7360881b60448201526064016106df565b60005460408051878152602081018590526001600160a01b03928316928916917f9bd10be98695714f5cb43cefb59ba6417808b354710acafafe05e81b26492231910160405180910390a350949350505050565b600c546301000000900460ff16156114fa5760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b60648201526084016106df565b600c805463ff0000001916630100000017905588518990600190811061153057634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03168960008151811061156257634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031614156115d75760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b60648201526084016106df565b876000815181106115f857634e487b7160e01b600052603260045260246000fd5b60200260200101518860018151811061162157634e487b7160e01b600052603260045260246000fd5b602002602001015110156116905760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b60648201526084016106df565b8263ffffffff168463ffffffff1610156117125760405162461bcd60e51b815260206004820152603d60248201527f53656564466163746f72793a2076657374696e674475726174696f6e2063616e60448201527f6e6f74206265206c657373207468616e2076657374696e67436c69666600000060648201526084016106df565b8585116117875760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d65000000000060648201526084016106df565b600080546001600160a01b03808e166001600160a01b031992831617835560018054918e169190921617905588518991906117d257634e487b7160e01b600052603260045260246000fd5b60200260200101516002819055508760018151811061180157634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600355600687905560078690556008859055600d8590556009805468ffffffffffffffff00191661010063ffffffff8781169190910268ffffffff0000000000191691909117600160281b918616919091021760ff19168315151790558851899060009061188a57634e487b7160e01b600052603260045260246000fd5b60200260200101516009806101000a8154816001600160a01b0302191690836001600160a01b03160217905550886001815181106118d857634e487b7160e01b600052603260045260246000fd5b6020908102919091010151600a80546001600160a01b039092166001600160a81b031990921691909117600160a01b60ff841602179055600354879061192790670de0b6b3a764000090612969565b6119319190612949565b60048190556064906119479060ff841690612969565b6119519190612949565b6005819055600454600f556011555050505050505050505050565b600c54600090819060ff16156119945760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff16156119bc5760405162461bcd60e51b81526004016106df9061282a565b600c54600160281b900460ff1615611a165760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e67207265616368656400000060448201526064016106df565b60095460ff161580611a3757503360009081526015602052604090205460ff165b611a835760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f2072696768747300000000000060448201526064016106df565b4260085410158015611a9757504260075411155b611af95760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b60648201526084016106df565b600c5462010000900460ff16611c0657600554600454611b199190612931565b6009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b0316906370a082319060240160206040518083038186803b158015611b6257600080fd5b505afa158015611b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b9a919061270b565b1015611bf45760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b60648201526084016106df565b600c805462ff00001916620100001790555b600654600090611c1e670de0b6b3a764000086612969565b611c289190612949565b601354600a5491925090600090606490611c4c90600160a01b900460ff1685612969565b611c569190612949565b600354909150611c668784612931565b1115611cc75760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b60648201526084016106df565b82600f541015611d2b5760405162461bcd60e51b815260206004820152602960248201527f536565643a207365656420646973747269627574696f6e20776f756c6420626560448201526808195e18d95959195960ba1b60648201526084016106df565b611d358683612931565b60138190555082600f6000828254611d4d9190612988565b925050819055508060116000828254611d669190612988565b9091555050600a546040516323b872dd60e01b8152336004820152306024820152604481018890526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611dbd57600080fd5b505af1158015611dd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611df5919061264a565b611e335760405162461bcd60e51b815260206004820152600f60248201526e536565643a206e6f20746f6b656e7360881b60448201526064016106df565b60025460135410611e5457600c805464ff0000000019166401000000001790555b60035460135410611e7f57600c805465ff00000000001916600160281b179055611e7b4290565b600d555b33600081815260166020526040902054611efa9190611e9f908690612931565b33600090815260166020526040902060020154611ebd908a90612931565b3360009081526016602052604090206001810154600390910154611ee2908790612931565b33600090815260166020526040902060040154612256565b60405183815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a291935090915050915091565b6001600160a01b0381166000908152601660209081526040808320815160a0810183528154815260018201549381019390935260028101549183019190915260038101546060830152600401546080820152600d54421015611fa05750600092915050565b6000600d54611fac4290565b611fb69190612988565b600954909150600160281b900463ffffffff16811015611fda575060009392505050565b600954610100900463ffffffff1681106120075760208201518251611fff9190612988565b949350505050565b6009548251600091610100900463ffffffff16906120259084612969565b61202f9190612949565b90508260200151816120419190612988565b95945050505050565b6001546001600160a01b031633146120745760405162461bcd60e51b81526004016106df90612772565b600c5460ff16156120975760405162461bcd60e51b81526004016106df906127a9565b600c54610100900460ff16156120bf5760405162461bcd60e51b81526004016106df9061282a565b60095460ff1615156001146120e65760405162461bcd60e51b81526004016106df90612861565b60005b81518110156107d75760016015600084848151811061211857634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061215481612a0a565b9150506120e9565b600c546301000000900460ff161515600114158061218457506001546001600160a01b031633145b6122015760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a4016106df565b805161221490600b90602084019061232d565b50806040516122239190612723565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b600954610100900463ffffffff168510156122b35760405162461bcd60e51b815260206004820152601f60248201527f536565643a20616d6f756e745665737465645065725365636f6e64203e20300060448201526064016106df565b6040805160a081018252868152602080820186815282840188815260608401878152608085018781526001600160a01b038d166000908152601690955295842094518555915160018501555160028401555160038301559151600490910155600e80549161232083612a0a565b9190505550505050505050565b828054612339906129cf565b90600052602060002090601f01602090048101928261235b57600085556123a1565b82601f1061237457805160ff19168380011785556123a1565b828001600101855582156123a1579182015b828111156123a1578251825591602001919060010190612386565b506123ad9291506123b1565b5090565b5b808211156123ad57600081556001016123b2565b80356001600160a01b03811681146123dd57600080fd5b919050565b600082601f8301126123f2578081fd5b813560206124076124028361290d565b6128dc565b80838252828201915082860187848660051b8901011115612426578586fd5b855b8581101561244b57612439826123c6565b84529284019290840190600101612428565b5090979650505050505050565b600082601f830112612468578081fd5b813560206124786124028361290d565b80838252828201915082860187848660051b8901011115612497578586fd5b855b8581101561244b57813584529284019290840190600101612499565b80356123dd81612a51565b803563ffffffff811681146123dd57600080fd5b803560ff811681146123dd57600080fd5b6000602082840312156124f6578081fd5b6124ff826123c6565b9392505050565b60008060008060008060008060008060006101608c8e031215612527578687fd5b6125308c6123c6565b9a5061253e60208d016123c6565b995067ffffffffffffffff8060408e01351115612559578788fd5b6125698e60408f01358f016123e2565b99508060608e0135111561257b578788fd5b5061258c8d60608e01358e01612458565b975060808c0135965060a08c0135955060c08c013594506125af60e08d016124c0565b93506125be6101008d016124c0565b92506125cd6101208d016124b5565b91506125dc6101408d016124d4565b90509295989b509295989b9093969950565b60008060408385031215612600578182fd5b612609836123c6565b946020939093013593505050565b600060208284031215612628578081fd5b813567ffffffffffffffff81111561263e578182fd5b611fff848285016123e2565b60006020828403121561265b578081fd5b81516124ff81612a51565b60006020808385031215612678578182fd5b823567ffffffffffffffff8082111561268f578384fd5b818501915085601f8301126126a2578384fd5b8135818111156126b4576126b4612a3b565b6126c6601f8201601f191685016128dc565b915080825286848285010111156126db578485fd5b80848401858401378101909201929092529392505050565b600060208284031215612704578081fd5b5035919050565b60006020828403121561271c578081fd5b5051919050565b6000825161273581846020870161299f565b9190910192915050565b602081526000825180602084015261275e81604085016020870161299f565b601f01601f19169190910160400192915050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6020808252602a908201527f536565643a2073686f756c64207472616e73666572207365656420746f6b656e60408201526939903a379030b236b4b760b11b606082015260800190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520706175736564000000000000604082015260600190565b6020808252601f908201527f536565643a206d6f64756c65206973206e6f742077686974656c697374656400604082015260600190565b60208082526024908201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604082015263081b595d60e21b606082015260800190565b604051601f8201601f1916810167ffffffffffffffff8111828210171561290557612905612a3b565b604052919050565b600067ffffffffffffffff82111561292757612927612a3b565b5060051b60200190565b6000821982111561294457612944612a25565b500190565b60008261296457634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561298357612983612a25565b500290565b60008282101561299a5761299a612a25565b500390565b60005b838110156129ba5781810151838201526020016129a2565b838111156129c9576000848401525b50505050565b600181811c908216806129e357607f821691505b60208210811415612a0457634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415612a1e57612a1e612a25565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8015158114612a5f57600080fd5b5056fea26469706673582212209d178427657b8432ba1f17287d4c70365ae4957ae2f620a317b334046c6437bc64736f6c63430008040033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "Smart contract for seed phases of liquid launch.",
    "kind": "dev",
    "methods": {
      "buy(uint256)": {
        "details": "Buy seed tokens.",
        "params": {
          "_fundingAmount": "The amount of funding tokens to contribute."
        }
      },
      "calculateClaim(address)": {
        "details": "Calculates the maximum claim",
        "params": {
          "_funder": "Address of funder to find the maximum claim"
        }
      },
      "checkWhitelisted(address)": {
        "details": "check whitelist status of a buyer",
        "params": {
          "_buyer": "address of buyer to check status"
        }
      },
      "claim(address,uint256)": {
        "details": "Claim vested seed tokens.",
        "params": {
          "_claimAmount": "The amount of seed token a users wants to claim.",
          "_funder": "Address of funder to calculate seconds and amount claimable"
        }
      },
      "close()": {
        "details": "Close distribution."
      },
      "initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint8)": {
        "details": "Initialize Seed.",
        "params": {
          "_admin": "The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.",
          "_beneficiary": "The address that recieves fees.",
          "_endTime": "Distribution end time in unix timecode.",
          "_fee": "Success fee expressed as a % (e.g. 2 = 2% fee)",
          "_permissionedSeed": "Set to true if only whitelisted adresses are allowed to participate.",
          "_price": "The price in wei of fundingTokens when exchanged for seedTokens.",
          "_softHardThresholds": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
          "_startTime": "Distribution start time in unix timecode.",
          "_tokens": "Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.",
          "_vestingCliff": "Cliff duration in seconds.",
          "_vestingDuration": "Vesting period duration in seconds."
        }
      },
      "pause()": {
        "details": "Pause distribution."
      },
      "retrieveFundingTokens()": {
        "details": "Returns funding tokens to user."
      },
      "unpause()": {
        "details": "Unpause distribution."
      },
      "unwhitelist(address)": {
        "details": "Remove address from whitelist.",
        "params": {
          "buyer": "Address which needs to be unwhitelisted"
        }
      },
      "updateMetadata(bytes)": {
        "details": "Updates metadata.",
        "params": {
          "_metadata": "Seed contract metadata, that is IPFS Hash"
        }
      },
      "whitelist(address)": {
        "details": "Add address to whitelist.",
        "params": {
          "_buyer": "Address which needs to be whitelisted"
        }
      },
      "whitelistBatch(address[])": {
        "details": "Add multiple addresses to whitelist.",
        "params": {
          "_buyers": "Array of addresses to whitelist addresses in batch"
        }
      },
      "withdraw()": {
        "details": "Withdraw funds from the contract"
      }
    },
    "title": "PrimeDAO Seed contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "beneficiary",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 11,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 13,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedAmountRequired",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 15,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeAmountRequired",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 17,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "price",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 19,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "startTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 21,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "endTime",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 23,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "permissionedSeed",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 25,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingDuration",
        "offset": 1,
        "slot": "9",
        "type": "t_uint32"
      },
      {
        "astId": 27,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingCliff",
        "offset": 5,
        "slot": "9",
        "type": "t_uint32"
      },
      {
        "astId": 30,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedToken",
        "offset": 9,
        "slot": "9",
        "type": "t_contract(IERC20)1519"
      },
      {
        "astId": 33,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingToken",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IERC20)1519"
      },
      {
        "astId": 35,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fee",
        "offset": 20,
        "slot": "10",
        "type": "t_uint8"
      },
      {
        "astId": 37,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "metadata",
        "offset": 0,
        "slot": "11",
        "type": "t_bytes_storage"
      },
      {
        "astId": 44,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "closed",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 46,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "paused",
        "offset": 1,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 48,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "isFunded",
        "offset": 2,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 50,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "initialized",
        "offset": 3,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 52,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "minimumReached",
        "offset": 4,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 54,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "maximumReached",
        "offset": 5,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 56,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingStartTime",
        "offset": 0,
        "slot": "13",
        "type": "t_uint256"
      },
      {
        "astId": 58,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "totalFunderCount",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 60,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedRemainder",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 62,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedClaimed",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 64,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeRemainder",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 66,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeClaimed",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 68,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingCollected",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 70,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingWithdrawn",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 74,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "whitelisted",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 79,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "funders",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_struct(FunderPortfolio)116_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)1519": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(FunderPortfolio)116_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Seed.FunderPortfolio)",
        "numberOfBytes": "32",
        "value": "t_struct(FunderPortfolio)116_storage"
      },
      "t_struct(FunderPortfolio)116_storage": {
        "encoding": "inplace",
        "label": "struct Seed.FunderPortfolio",
        "members": [
          {
            "astId": 107,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "seedAmount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 109,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 111,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "fundingAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 113,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "fee",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 115,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "feeClaimed",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}