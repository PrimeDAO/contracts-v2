{
  "address": "0x0788407B68acdd4009AE6c31411808c6fA24BEb3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReclaimed",
          "type": "uint256"
        }
      ],
      "name": "FundingReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPurchased",
          "type": "uint256"
        }
      ],
      "name": "SeedsPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "calculateClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "feeClaimedForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "feeForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fundingAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_softHardThresholds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_vestingDuration",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_vestingCliff",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "_permissionedSeed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isWhitelistBatchInvoked",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionedSeed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveFundingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_refundReceiver",
          "type": "address"
        }
      ],
      "name": "retrieveSeedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "seedAmountForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFunderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "unwhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCliff",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_buyers",
          "type": "address[]"
        }
      ],
      "name": "whitelistBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb6d5b5a7ef51061ad4f4c0d64c633f28551b104b558858f477abbb619cff3f69",
  "receipt": {
    "to": null,
    "from": "0xc039897eE5A0d14A3d1F212922FaF7e159Ab619F",
    "contractAddress": "0x0788407B68acdd4009AE6c31411808c6fA24BEb3",
    "transactionIndex": 0,
    "gasUsed": "54478049",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x29bf98da2b9152fa7b73bc3b32f5f2088c92ce37342bb52090c2a070b31c9547",
    "transactionHash": "0xb6d5b5a7ef51061ad4f4c0d64c633f28551b104b558858f477abbb619cff3f69",
    "logs": [],
    "blockNumber": 4855024,
    "cumulativeGasUsed": "34287269",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "93e257eeaf50825eb965de2e0b15f618",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReclaimed\",\"type\":\"uint256\"}],\"name\":\"FundingReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPurchased\",\"type\":\"uint256\"}],\"name\":\"SeedsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"calculateClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"feeClaimedForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"feeForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_softHardThresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_vestingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_vestingCliff\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"_permissionedSeed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhitelistBatchInvoked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionedSeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveFundingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refundReceiver\",\"type\":\"address\"}],\"name\":\"retrieveSeedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"seedAmountForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"unwhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCliff\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_buyers\",\"type\":\"address[]\"}],\"name\":\"whitelistBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for seed phases of liquid launch.\",\"kind\":\"dev\",\"methods\":{\"buy(uint256)\":{\"details\":\"Buy seed tokens.\",\"params\":{\"_fundingAmount\":\"The amount of funding tokens to contribute.\"}},\"calculateClaim(address)\":{\"details\":\"Calculates the maximum claim\",\"params\":{\"_funder\":\"Address of funder to find the maximum claim\"}},\"claim(address,uint256)\":{\"details\":\"Claim vested seed tokens.\",\"params\":{\"_claimAmount\":\"The amount of seed token a users wants to claim.\",\"_funder\":\"Address of funder to calculate seconds and amount claimable\"}},\"close()\":{\"details\":\"Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist.\"},\"feeClaimed()\":{\"details\":\"Amount of seed tokens claimed as fee\"},\"feeClaimedForFunder(address)\":{\"details\":\"get fee claimed for funder\",\"params\":{\"_funder\":\"address of funder to check fee claimed\"}},\"feeForFunder(address)\":{\"details\":\"get fee for funder\",\"params\":{\"_funder\":\"address of funder to check fee\"}},\"initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint256)\":{\"details\":\"Initialize Seed.\",\"params\":{\"_admin\":\"The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.\",\"_beneficiary\":\"The address that recieves fees.\",\"_endTime\":\"Distribution end time in unix timecode.\",\"_fee\":\"Success fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)\",\"_permissionedSeed\":\"Set to true if only whitelisted adresses are allowed to participate.\",\"_price\":\"price of a SeedToken, expressed in fundingTokens, with precision of 10**18\",\"_softHardThresholds\":\"Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.\",\"_startTime\":\"Distribution start time in unix timecode.\",\"_tokens\":\"Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.\",\"_vestingCliff\":\"Cliff duration in seconds.\",\"_vestingDuration\":\"Vesting period duration in seconds.\"}},\"pause()\":{\"details\":\"Pause distribution.\"},\"retrieveFundingTokens()\":{\"details\":\"Returns funding tokens to user.\"},\"retrieveSeedTokens(address)\":{\"details\":\"retrieve remaining seed tokens back to project.\",\"params\":{\"_refundReceiver\":\"refund receiver address\"}},\"seedAmountForFunder(address)\":{\"details\":\"get seed amount for funder\",\"params\":{\"_funder\":\"address of funder to seed amount\"}},\"unpause()\":{\"details\":\"Unpause distribution.\"},\"unwhitelist(address)\":{\"details\":\"Remove address from whitelist.\",\"params\":{\"buyer\":\"Address which needs to be unwhitelisted\"}},\"updateMetadata(bytes)\":{\"details\":\"Updates metadata.\",\"params\":{\"_metadata\":\"Seed contract metadata, that is IPFS Hash\"}},\"whitelist(address)\":{\"details\":\"Add address to whitelist.\",\"params\":{\"_buyer\":\"Address which needs to be whitelisted\"}},\"whitelistBatch(address[])\":{\"details\":\"Add multiple addresses to whitelist.\",\"params\":{\"_buyers\":\"Array of addresses to whitelist addresses in batch\"}},\"withdraw()\":{\"details\":\"Withdraw funds from the contract\"}},\"title\":\"PrimeDAO Seed contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/seed/Seed.sol\":\"Seed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/seed/Seed.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0-or-later\\n// PrimeDAO Seed contract. Smart contract for seed phases of liquid launch.\\n// Copyright (C) 2021 PrimeDao\\n\\n// solium-disable operator-whitespace\\n/* solhint-disable space-after-comma */\\n/* solhint-disable max-states-count */\\n// solium-disable linebreak-style\\npragma solidity 0.8.9;\\n\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\\\";\\n\\n/**\\n * @title PrimeDAO Seed contract\\n * @dev   Smart contract for seed phases of liquid launch.\\n */\\ncontract Seed {\\n    // Locked parameters\\n    address public beneficiary;\\n    address public admin;\\n    uint256 public softCap;\\n    uint256 public hardCap;\\n    uint256 public seedAmountRequired; // Amount of seed required for distribution\\n    uint256 public feeAmountRequired; // Amount of seed required for fee\\n    uint256 public price; // price of a SeedToken, expressed in fundingTokens, with precision of 10**18\\n    uint256 public startTime;\\n    uint256 public endTime; // set by project admin, this is the last resort endTime to be applied when\\n    //     maximumReached has not been reached by then\\n    bool public permissionedSeed;\\n    uint32 public vestingDuration;\\n    uint32 public vestingCliff;\\n    IERC20 public seedToken;\\n    IERC20 public fundingToken;\\n    uint256 public fee; // Success fee expressed as a % (e.g. 10**18 = 100% fee, 10**16 = 1%)\\n\\n    bytes public metadata; // IPFS Hash\\n\\n    uint256 internal constant PRECISION = 10**18; // used for precision e.g. 1 ETH = 10**18 wei; toWei(\\\"1\\\") = 10**18\\n\\n    // Contract logic\\n    bool public closed; // is the distribution closed\\n    bool public paused; // is the distribution paused\\n    bool public isFunded; // distribution can only start when required seed tokens have been funded\\n    bool public initialized; // is this contract initialized [not necessary that it is funded]\\n    bool public minimumReached; // if the softCap[minimum limit of funding token] is reached\\n    bool public maximumReached; // if the hardCap[maximum limit of funding token] is reached\\n    bool public isWhitelistBatchInvoked; // if the whitelistBatch method have been invoked\\n    uint256 public vestingStartTime; // timestamp for when vesting starts, by default == endTime,\\n    //     otherwise when maximumReached is reached\\n    uint256 public totalFunderCount; // Total funders that have contributed.\\n    uint256 public seedRemainder; // Amount of seed tokens remaining to be distributed\\n    uint256 public seedClaimed; // Amount of seed token claimed by the user.\\n    uint256 public feeRemainder; // Amount of seed tokens remaining for the fee\\n    uint256 public fundingCollected; // Amount of funding tokens collected by the seed contract.\\n    uint256 public fundingWithdrawn; // Amount of funding token withdrawn from the seed contract.\\n\\n    mapping(address => bool) public whitelisted; // funders that are whitelisted and allowed to contribute\\n    mapping(address => FunderPortfolio) public funders; // funder address to funder portfolio\\n\\n    event SeedsPurchased(address indexed recipient, uint256 amountPurchased);\\n    event TokensClaimed(\\n        address indexed recipient,\\n        uint256 amount,\\n        address indexed beneficiary,\\n        uint256 feeAmount\\n    );\\n    event FundingReclaimed(address indexed recipient, uint256 amountReclaimed);\\n    event MetadataUpdated(bytes indexed metadata);\\n\\n    struct FunderPortfolio {\\n        uint256 totalClaimed; // Total amount of seed tokens claimed\\n        uint256 fundingAmount; // Total amount of funding tokens contributed\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Seed: caller should be admin\\\");\\n        _;\\n    }\\n\\n    modifier isActive() {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(!paused, \\\"Seed: should not be paused\\\");\\n        _;\\n    }\\n\\n    /**\\n      * @dev                          Initialize Seed.\\n      * @param _beneficiary           The address that recieves fees.\\n      * @param _admin                 The address of the admin of this contract. Funds contract\\n                                      and has permissions to whitelist users, pause and close contract.\\n      * @param _tokens                Array containing two params:\\n                                        - The address of the seed token being distributed.\\n      *                                 - The address of the funding token being exchanged for seed token.\\n      * @param _softHardThresholds    Array containing two params:\\n                                        - the minimum funding token collection threshold in wei denomination.\\n                                        - the highest possible funding token amount to be raised in wei denomination.\\n      * @param _price                 price of a SeedToken, expressed in fundingTokens, with precision of 10**18\\n      * @param _startTime             Distribution start time in unix timecode.\\n      * @param _endTime               Distribution end time in unix timecode.\\n      * @param _vestingDuration       Vesting period duration in seconds.\\n      * @param _vestingCliff          Cliff duration in seconds.\\n      * @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\\n      * @param _fee                   Success fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)\\n    */\\n    function initialize(\\n        address _beneficiary,\\n        address _admin,\\n        address[] memory _tokens,\\n        uint256[] memory _softHardThresholds,\\n        uint256 _price,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        uint32 _vestingDuration,\\n        uint32 _vestingCliff,\\n        bool _permissionedSeed,\\n        uint256 _fee\\n    ) external {\\n        require(!initialized, \\\"Seed: contract already initialized\\\");\\n        initialized = true;\\n\\n        // parameter check\\n        require(\\n            _tokens[0] != _tokens[1],\\n            \\\"SeedFactory: seedToken cannot be fundingToken\\\"\\n        );\\n        require(\\n            _softHardThresholds[1] >= _softHardThresholds[0],\\n            \\\"SeedFactory: hardCap cannot be less than softCap\\\"\\n        );\\n        require(\\n            _vestingDuration >= _vestingCliff,\\n            \\\"SeedFactory: vestingDuration cannot be less than vestingCliff\\\"\\n        );\\n        require(\\n            _endTime > _startTime,\\n            \\\"SeedFactory: endTime cannot be less than equal to startTime\\\"\\n        );\\n\\n        beneficiary = _beneficiary;\\n        admin = _admin;\\n        softCap = _softHardThresholds[0];\\n        hardCap = _softHardThresholds[1];\\n        price = _price;\\n        startTime = _startTime;\\n        endTime = _endTime;\\n        vestingStartTime = endTime;\\n        vestingDuration = _vestingDuration;\\n        vestingCliff = _vestingCliff;\\n        permissionedSeed = _permissionedSeed;\\n        seedToken = IERC20(_tokens[0]);\\n        fundingToken = IERC20(_tokens[1]);\\n        fee = _fee;\\n\\n        seedAmountRequired = (hardCap * PRECISION) / _price;\\n        // (seedAmountRequired*fee) / (100*FEE_PRECISION) = (seedAmountRequired*fee) / PRECISION\\n        //  where FEE_PRECISION = 10**16\\n        feeAmountRequired = (seedAmountRequired * fee) / PRECISION;\\n        seedRemainder = seedAmountRequired;\\n        feeRemainder = feeAmountRequired;\\n    }\\n\\n    /**\\n     * @dev                     Buy seed tokens.\\n     * @param _fundingAmount    The amount of funding tokens to contribute.\\n     */\\n    function buy(uint256 _fundingAmount)\\n        external\\n        isActive\\n        returns (uint256, uint256)\\n    {\\n        require(!maximumReached, \\\"Seed: maximum funding reached\\\");\\n        require(\\n            !permissionedSeed || whitelisted[msg.sender],\\n            \\\"Seed: sender has no rights\\\"\\n        );\\n        require(\\n            endTime >= block.timestamp && startTime <= block.timestamp,\\n            \\\"Seed: only allowed during distribution period\\\"\\n        );\\n        if (!isFunded) {\\n            require(\\n                seedToken.balanceOf(address(this)) >=\\n                    seedAmountRequired + feeAmountRequired,\\n                \\\"Seed: sufficient seeds not provided\\\"\\n            );\\n            isFunded = true;\\n        }\\n        // fundingAmount is an amount of fundingTokens required to buy _seedAmount of SeedTokens\\n        uint256 seedAmount = (_fundingAmount * PRECISION) / price;\\n\\n        // feeAmount is an amount of fee we are going to get in seedTokens\\n        uint256 feeAmount = (seedAmount * fee) / PRECISION;\\n\\n        // seed amount vested per second > zero, i.e. amountVestedPerSecond = seedAmount/vestingDuration\\n        require(\\n            seedAmount >= vestingDuration,\\n            \\\"Seed: amountVestedPerSecond > 0\\\"\\n        );\\n\\n        // total fundingAmount should not be greater than the hardCap\\n        require(\\n            fundingCollected + _fundingAmount <= hardCap,\\n            \\\"Seed: amount exceeds contract sale hardCap\\\"\\n        );\\n\\n        fundingCollected += _fundingAmount;\\n\\n        // the amount of seed tokens still to be distributed\\n        seedRemainder -= seedAmount;\\n        feeRemainder -= feeAmount;\\n\\n        if (fundingCollected >= softCap) {\\n            minimumReached = true;\\n        }\\n        if (fundingCollected >= hardCap) {\\n            maximumReached = true;\\n            vestingStartTime = block.timestamp;\\n        }\\n\\n        //functionality of addFunder\\n        if (funders[msg.sender].fundingAmount == 0) {\\n            totalFunderCount++;\\n        }\\n        funders[msg.sender].fundingAmount += _fundingAmount;\\n\\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\\n        require(\\n            fundingToken.transferFrom(\\n                msg.sender,\\n                address(this),\\n                _fundingAmount\\n            ),\\n            \\\"Seed: funding token transferFrom failed\\\"\\n        );\\n\\n        emit SeedsPurchased(msg.sender, seedAmount);\\n\\n        return (seedAmount, feeAmount);\\n    }\\n\\n    /**\\n     * @dev                     Claim vested seed tokens.\\n     * @param _funder           Address of funder to calculate seconds and amount claimable\\n     * @param _claimAmount      The amount of seed token a users wants to claim.\\n     */\\n    function claim(address _funder, uint256 _claimAmount)\\n        external\\n        returns (uint256)\\n    {\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\n        require(\\n            endTime < block.timestamp || maximumReached,\\n            \\\"Seed: the distribution has not yet finished\\\"\\n        );\\n        uint256 amountClaimable;\\n\\n        amountClaimable = calculateClaim(_funder);\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\n        require(\\n            amountClaimable >= _claimAmount,\\n            \\\"Seed: request is greater than claimable amount\\\"\\n        );\\n        uint256 feeAmountOnClaim = (_claimAmount * fee) / PRECISION;\\n\\n        funders[_funder].totalClaimed += _claimAmount;\\n\\n        seedClaimed += _claimAmount;\\n        require(\\n            seedToken.transfer(beneficiary, feeAmountOnClaim) &&\\n                seedToken.transfer(_funder, _claimAmount),\\n            \\\"Seed: seed token transfer failed\\\"\\n        );\\n\\n        emit TokensClaimed(\\n            _funder,\\n            _claimAmount,\\n            beneficiary,\\n            feeAmountOnClaim\\n        );\\n\\n        return feeAmountOnClaim;\\n    }\\n\\n    /**\\n     * @dev         Returns funding tokens to user.\\n     */\\n    function retrieveFundingTokens() external returns (uint256) {\\n        require(\\n            startTime <= block.timestamp,\\n            \\\"Seed: distribution haven't started\\\"\\n        );\\n        require(!minimumReached, \\\"Seed: minimum funding amount met\\\");\\n        FunderPortfolio storage tokenFunder = funders[msg.sender];\\n        uint256 fundingAmount = tokenFunder.fundingAmount;\\n        require(fundingAmount > 0, \\\"Seed: zero funding amount\\\");\\n        seedRemainder += seedAmountForFunder(msg.sender);\\n        feeRemainder += feeForFunder(msg.sender);\\n        totalFunderCount--;\\n        tokenFunder.fundingAmount = 0;\\n        fundingCollected -= fundingAmount;\\n        require(\\n            fundingToken.transfer(msg.sender, fundingAmount),\\n            \\\"Seed: cannot return funding tokens to msg.sender\\\"\\n        );\\n        emit FundingReclaimed(msg.sender, fundingAmount);\\n\\n        return fundingAmount;\\n    }\\n\\n    // ADMIN ACTIONS\\n\\n    /**\\n     * @dev                     Pause distribution.\\n     */\\n    function pause() external onlyAdmin isActive {\\n        paused = true;\\n    }\\n\\n    /**\\n     * @dev                     Unpause distribution.\\n     */\\n    function unpause() external onlyAdmin {\\n        require(closed != true, \\\"Seed: should not be closed\\\");\\n        require(paused == true, \\\"Seed: should be paused\\\");\\n\\n        paused = false;\\n    }\\n\\n    /**\\n      * @dev                Shut down contributions (buying).\\n                            Supersedes the normal logic that eventually shuts down buying anyway.\\n                            Also shuts down the admin's ability to alter the whitelist.\\n    */\\n    function close() external onlyAdmin {\\n        // close seed token distribution\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        closed = true;\\n        paused = false;\\n    }\\n\\n    /**\\n     * @dev                     retrieve remaining seed tokens back to project.\\n     * @param _refundReceiver   refund receiver address\\n     */\\n    function retrieveSeedTokens(address _refundReceiver) external onlyAdmin {\\n        // transfer seed tokens back to admin\\n        /*\\n            Can't withdraw seed tokens until buying has ended and\\n            therefore the number of distributable seed tokens can no longer change.\\n        */\\n        require(\\n            closed || maximumReached || block.timestamp >= endTime,\\n            \\\"Seed: The ability to buy seed tokens must have ended before remaining seed tokens can be withdrawn\\\"\\n        );\\n        if (!minimumReached) {\\n            require(\\n                seedToken.transfer(\\n                    _refundReceiver,\\n                    seedToken.balanceOf(address(this))\\n                ),\\n                \\\"Seed: should transfer seed tokens to refund receiver\\\"\\n            );\\n        } else {\\n            // seed tokens to transfer = balance of seed tokens - totalSeedDistributed\\n            uint256 totalSeedDistributed = (seedAmountRequired +\\n                feeAmountRequired) - (seedRemainder + feeRemainder);\\n            uint256 amountToTransfer = seedToken.balanceOf(address(this)) -\\n                totalSeedDistributed;\\n            require(\\n                seedToken.transfer(_refundReceiver, amountToTransfer),\\n                \\\"Seed: should transfer seed tokens to refund receiver\\\"\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Add address to whitelist.\\n     * @param _buyer            Address which needs to be whitelisted\\n     */\\n    function whitelist(address _buyer) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n\\n        whitelisted[_buyer] = true;\\n    }\\n\\n    /**\\n     * @dev                     Add multiple addresses to whitelist.\\n     * @param _buyers           Array of addresses to whitelist addresses in batch\\n     */\\n    function whitelistBatch(address[] memory _buyers) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n        isWhitelistBatchInvoked = true;\\n        for (uint256 i = 0; i < _buyers.length; i++) {\\n            whitelisted[_buyers[i]] = true;\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Remove address from whitelist.\\n     * @param buyer             Address which needs to be unwhitelisted\\n     */\\n    function unwhitelist(address buyer) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n\\n        whitelisted[buyer] = false;\\n    }\\n\\n    /**\\n     * @dev                     Withdraw funds from the contract\\n     */\\n    function withdraw() external onlyAdmin {\\n        /*\\n            Admin can't withdraw funding tokens until buying has ended and\\n            therefore contributors can no longer withdraw their funding tokens.\\n        */\\n        require(\\n            maximumReached || (minimumReached && block.timestamp >= endTime),\\n            \\\"Seed: cannot withdraw while funding tokens can still be withdrawn by contributors\\\"\\n        );\\n        uint256 pendingFundingBalance = fundingCollected - fundingWithdrawn;\\n        fundingWithdrawn = fundingCollected;\\n        fundingToken.transfer(msg.sender, pendingFundingBalance);\\n    }\\n\\n    /**\\n     * @dev                     Updates metadata.\\n     * @param _metadata         Seed contract metadata, that is IPFS Hash\\n     */\\n    function updateMetadata(bytes memory _metadata) external {\\n        require(\\n            initialized != true || msg.sender == admin,\\n            \\\"Seed: contract should not be initialized or caller should be admin\\\"\\n        );\\n        metadata = _metadata;\\n        emit MetadataUpdated(_metadata);\\n    }\\n\\n    // GETTER FUNCTIONS\\n    /**\\n     * @dev                     Calculates the maximum claim\\n     * @param _funder           Address of funder to find the maximum claim\\n     */\\n    function calculateClaim(address _funder) public view returns (uint256) {\\n        FunderPortfolio storage tokenFunder = funders[_funder];\\n\\n        if (block.timestamp < vestingStartTime) {\\n            return 0;\\n        }\\n\\n        // Check cliff was reached\\n        uint256 elapsedSeconds = block.timestamp - vestingStartTime;\\n\\n        if (elapsedSeconds < vestingCliff) {\\n            return 0;\\n        }\\n\\n        // If over vesting duration, all tokens vested\\n        if (elapsedSeconds >= vestingDuration) {\\n            return seedAmountForFunder(_funder) - tokenFunder.totalClaimed;\\n        } else {\\n            uint256 amountVested = (elapsedSeconds *\\n                seedAmountForFunder(_funder)) / vestingDuration;\\n            return amountVested - tokenFunder.totalClaimed;\\n        }\\n    }\\n\\n    /**\\n     * @dev                     Amount of seed tokens claimed as fee\\n     */\\n    function feeClaimed() public view returns (uint256) {\\n        return (seedClaimed * fee) / PRECISION;\\n    }\\n\\n    /**\\n     * @dev                     get fee claimed for funder\\n     * @param _funder           address of funder to check fee claimed\\n     */\\n    function feeClaimedForFunder(address _funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return (funders[_funder].totalClaimed * fee) / PRECISION;\\n    }\\n\\n    /**\\n     * @dev                     get fee for funder\\n     * @param _funder           address of funder to check fee\\n     */\\n    function feeForFunder(address _funder) public view returns (uint256) {\\n        return (seedAmountForFunder(_funder) * fee) / PRECISION;\\n    }\\n\\n    /**\\n     * @dev                     get seed amount for funder\\n     * @param _funder           address of funder to seed amount\\n     */\\n    function seedAmountForFunder(address _funder)\\n        public\\n        view\\n        returns (uint256)\\n    {\\n        return (funders[_funder].fundingAmount * PRECISION) / price;\\n    }\\n}\\n\",\"keccak256\":\"0x71a830db2ee5159947875099d1e0603b580d7da3f1af87ad64aff6ce964c92d8\",\"license\":\"GPL-3.0-or-later\"},\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612a7f806100206000396000f3fe608060405234801561001057600080fd5b50600436106102d65760003560e01c80637c65430311610182578063d936547e116100e9578063e6e36ebb116100a2578063f3640e741161007c578063f3640e7414610608578063f851a4401461061f578063fb86a40414610632578063fc582d411461063b57600080fd5b8063e6e36ebb146105d9578063ea345540146105e2578063eaa53523146105f557600080fd5b8063d936547e1461055b578063d96a094a1461057e578063dc4b9e3814610591578063ddca3f43146105a4578063e5087c60146105ad578063e565eb4c146105c457600080fd5b80639b19251a1161013b5780639b19251a14610511578063a035b1fe14610524578063a8660a781461052d578063aad3ec9614610536578063b774682f14610549578063bc0f5f841461055257600080fd5b80637c654303146104c957806383d59e00146104dc5780638456cb59146104e55780638a2448aa146104ed578063906a26e0146104f55780639a590427146104fe57600080fd5b80633dba9e4111610241578063597e1fb5116101fa5780635e9777e8116101d45780635e9777e81461049c57806371f4b8e8146104a557806378065f27146104ad57806378e97925146104c057600080fd5b8063597e1fb51461046a5780635c975abb146104775780635d85ac0d1461048957600080fd5b80633dba9e411461041e5780633f4ba83a1461042b578063430e99a41461043357806343d726d61461044657806344f9abb81461044e57806347d02f1b1461046157600080fd5b80631cfe562e116102935780631cfe562e146103aa578063311f8483146103b35780633197cbb6146103e557806338af3eed146103ee578063392f37e9146104015780633ccfd60b1461041657600080fd5b8063031b3677146102db57806303aabe311461031c5780630826d2c714610331578063117a36d1146103485780631514617e1461036c578063158ef93e14610396575b600080fd5b6103026102e936600461241a565b6016602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b61032f61032a36600461241a565b61064e565b005b61033a60105481565b604051908152602001610313565b600d5461035c90600160281b900460ff1681565b6040519015158152602001610313565b60095461038190610100900463ffffffff1681565b60405163ffffffff9091168152602001610313565b600d5461035c906301000000900460ff1681565b61033a60135481565b6009546103cd90600160481b90046001600160a01b031681565b6040516001600160a01b039091168152602001610313565b61033a60085481565b6000546103cd906001600160a01b031681565b6104096109f5565b604051610313919061246c565b61032f610a83565b60095461035c9060ff1681565b61032f610c09565b61033a61044136600461241a565b610cbe565b61032f610d00565b61032f61045c366004612604565b610d5d565b61033a60115481565b600d5461035c9060ff1681565b600d5461035c90610100900460ff1681565b61033a61049736600461241a565b6111c7565b61033a600f5481565b61033a6111e8565b600a546103cd906001600160a01b031681565b61033a60075481565b600d5461035c9062010000900460ff1681565b61033a60145481565b61032f611212565b61033a6112c8565b61033a60025481565b61032f61050c36600461241a565b61157c565b61032f61051f36600461241a565b611611565b61033a60065481565b61033a600e5481565b61033a6105443660046126e8565b6116a9565b61033a60125481565b61033a60045481565b61035c61056936600461241a565b60156020526000908152604090205460ff1681565b61030261058c366004612712565b611a80565b61033a61059f36600461241a565b61206b565b61033a600b5481565b600d5461035c906601000000000000900460ff1681565b600d5461035c90640100000000900460ff1681565b61033a60055481565b61033a6105f036600461241a565b6120a0565b61032f61060336600461272b565b612176565b60095461038190600160281b900463ffffffff1681565b6001546103cd906001600160a01b031681565b61033a60035481565b61032f610649366004612760565b61226b565b6001546001600160a01b031633146106815760405162461bcd60e51b8152600401610678906127f5565b60405180910390fd5b600d5460ff168061069b5750600d54600160281b900460ff165b806106a857506008544210155b61074b5760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c401610678565b600d54640100000000900460ff16610885576009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b03169063a9059cbb90839083906370a082319060240160206040518083038186803b1580156107b057600080fd5b505afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e8919061282c565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561082e57600080fd5b505af1158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190612845565b6108825760405162461bcd60e51b815260040161067890612862565b50565b600060125460105461089791906128cc565b6005546004546108a791906128cc565b6108b191906128e4565b6009546040516370a0823160e01b81523060048201529192506000918391600160481b90046001600160a01b0316906370a082319060240160206040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610939919061282c565b61094391906128e4565b60095460405163a9059cbb60e01b81526001600160a01b03868116600483015260248201849052929350600160481b9091049091169063a9059cbb90604401602060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d49190612845565b6109f05760405162461bcd60e51b815260040161067890612862565b505050565b600c8054610a02906128fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2e906128fb565b8015610a7b5780601f10610a5057610100808354040283529160200191610a7b565b820191906000526020600020905b815481529060010190602001808311610a5e57829003601f168201915b505050505081565b6001546001600160a01b03163314610aad5760405162461bcd60e51b8152600401610678906127f5565b600d54600160281b900460ff1680610adc5750600d54640100000000900460ff168015610adc57506008544210155b610b685760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a401610678565b6000601454601354610b7a91906128e4565b601354601455600a5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b158015610bcd57600080fd5b505af1158015610be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c059190612845565b5050565b6001546001600160a01b03163314610c335760405162461bcd60e51b8152600401610678906127f5565b600d5460ff16151560011415610c5b5760405162461bcd60e51b815260040161067890612936565b600d5460ff610100909104161515600114610cb15760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b6044820152606401610678565b600d805461ff0019169055565b600b546001600160a01b0382166000908152601660205260408120549091670de0b6b3a764000091610cf0919061296d565b610cfa919061298c565b92915050565b6001546001600160a01b03163314610d2a5760405162461bcd60e51b8152600401610678906127f5565b600d5460ff1615610d4d5760405162461bcd60e51b815260040161067890612936565b600d805461ffff19166001179055565b600d546301000000900460ff1615610dc25760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b6064820152608401610678565b600d805463ff00000019166301000000179055885189906001908110610dea57610dea6129ae565b60200260200101516001600160a01b031689600081518110610e0e57610e0e6129ae565b60200260200101516001600160a01b03161415610e835760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b6064820152608401610678565b87600081518110610e9657610e966129ae565b602002602001015188600181518110610eb157610eb16129ae565b60200260200101511015610f205760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b6064820152608401610678565b8263ffffffff168463ffffffff161015610fa25760405162461bcd60e51b815260206004820152603d60248201527f53656564466163746f72793a2076657374696e674475726174696f6e2063616e60448201527f6e6f74206265206c657373207468616e2076657374696e67436c6966660000006064820152608401610678565b8585116110175760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d6500000000006064820152608401610678565b600080546001600160a01b03808e166001600160a01b031992831617835560018054918e16919092161790558851899190611054576110546129ae565b602002602001015160028190555087600181518110611075576110756129ae565b6020908102919091010151600355600687905560078690556008859055600e8590556009805468ffffffffffffffff00191661010063ffffffff8781169190910268ffffffff0000000000191691909117600160281b918616919091021760ff1916831515179055885189906000906110f0576110f06129ae565b60200260200101516009806101000a8154816001600160a01b0302191690836001600160a01b0316021790555088600181518110611130576111306129ae565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600b8190555086670de0b6b3a764000060035461117c919061296d565b611186919061298c565b6004819055600b54670de0b6b3a7640000916111a2919061296d565b6111ac919061298c565b60058190556004546010556012555050505050505050505050565b6000670de0b6b3a7640000600b546111de8461206b565b610cf0919061296d565b6000670de0b6b3a7640000600b54601154611203919061296d565b61120d919061298c565b905090565b6001546001600160a01b0316331461123c5760405162461bcd60e51b8152600401610678906127f5565b600d5460ff161561125f5760405162461bcd60e51b815260040161067890612936565b600d54610100900460ff16156112b75760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f74206265207061757365640000000000006044820152606401610678565b600d805461ff001916610100179055565b60004260075411156113275760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b6064820152608401610678565b600d54640100000000900460ff16156113825760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d65746044820152606401610678565b3360009081526016602052604090206001810154806113e35760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e74000000000000006044820152606401610678565b6113ec3361206b565b601060008282546113fd91906128cc565b9091555061140c9050336111c7565b6012600082825461141d91906128cc565b9091555050600f8054906000611432836129c4565b919050555060008260010181905550806013600082825461145391906128e4565b9091555050600a5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156114a457600080fd5b505af11580156114b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114dc9190612845565b6115415760405162461bcd60e51b815260206004820152603060248201527f536565643a2063616e6e6f742072657475726e2066756e64696e6720746f6b6560448201526f3739903a379036b9b39739b2b73232b960811b6064820152608401610678565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a292915050565b6001546001600160a01b031633146115a65760405162461bcd60e51b8152600401610678906127f5565b600d5460ff16156115c95760405162461bcd60e51b815260040161067890612936565b60095460ff1615156001146115f05760405162461bcd60e51b8152600401610678906129db565b6001600160a01b03166000908152601560205260409020805460ff19169055565b6001546001600160a01b0316331461163b5760405162461bcd60e51b8152600401610678906127f5565b600d5460ff161561165e5760405162461bcd60e51b815260040161067890612936565b60095460ff1615156001146116855760405162461bcd60e51b8152600401610678906129db565b6001600160a01b03166000908152601560205260409020805460ff19166001179055565b600d54600090640100000000900460ff166117125760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b6064820152608401610678565b42600854108061172b5750600d54600160281b900460ff165b61178b5760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b6064820152608401610678565b6000611796846120a0565b9050600081116117e85760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c65206973203000000000006044820152606401610678565b8281101561184f5760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b6064820152608401610678565b6000670de0b6b3a7640000600b5485611868919061296d565b611872919061298c565b6001600160a01b03861660009081526016602052604081208054929350869290919061189f9084906128cc565b9250508190555083601160008282546118b891906128cc565b909155505060095460005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052600160481b909204169063a9059cbb90604401602060405180830381600087803b15801561191457600080fd5b505af1158015611928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194c9190612845565b80156119e1575060095460405163a9059cbb60e01b81526001600160a01b03878116600483015260248201879052600160481b9092049091169063a9059cbb90604401602060405180830381600087803b1580156119a957600080fd5b505af11580156119bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e19190612845565b611a2d5760405162461bcd60e51b815260206004820181905260248201527f536565643a207365656420746f6b656e207472616e73666572206661696c65646044820152606401610678565b60005460408051868152602081018490526001600160a01b03928316928816917f9bd10be98695714f5cb43cefb59ba6417808b354710acafafe05e81b26492231910160405180910390a3949350505050565b600d54600090819060ff1615611aa85760405162461bcd60e51b815260040161067890612936565b600d54610100900460ff1615611b005760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f74206265207061757365640000000000006044820152606401610678565b600d54600160281b900460ff1615611b5a5760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e6720726561636865640000006044820152606401610678565b60095460ff161580611b7b57503360009081526015602052604090205460ff165b611bc75760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f207269676874730000000000006044820152606401610678565b4260085410158015611bdb57504260075411155b611c3d5760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b6064820152608401610678565b600d5462010000900460ff16611d4a57600554600454611c5d91906128cc565b6009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b0316906370a082319060240160206040518083038186803b158015611ca657600080fd5b505afa158015611cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cde919061282c565b1015611d385760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b6064820152608401610678565b600d805462ff00001916620100001790555b600654600090611d62670de0b6b3a76400008661296d565b611d6c919061298c565b90506000670de0b6b3a7640000600b5483611d87919061296d565b611d91919061298c565b600954909150610100900463ffffffff16821015611df15760405162461bcd60e51b815260206004820152601f60248201527f536565643a20616d6f756e745665737465645065725365636f6e64203e2030006044820152606401610678565b60035485601354611e0291906128cc565b1115611e635760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b6064820152608401610678565b8460136000828254611e7591906128cc565b925050819055508160106000828254611e8e91906128e4565b925050819055508060126000828254611ea791906128e4565b909155505060025460135410611ecd57600d805464ff0000000019166401000000001790555b60035460135410611ef257600d805465ff00000000001916600160281b17905542600e555b33600090815260166020526040902060010154611f1f57600f8054906000611f1983612a12565b91905055505b3360009081526016602052604081206001018054879290611f419084906128cc565b9091555050600a546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611f9857600080fd5b505af1158015611fac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd09190612845565b61202c5760405162461bcd60e51b815260206004820152602760248201527f536565643a2066756e64696e6720746f6b656e207472616e7366657246726f6d6044820152660819985a5b195960ca1b6064820152608401610678565b60405182815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a29092509050915091565b6006546001600160a01b038216600090815260166020526040812060010154909190610cf090670de0b6b3a76400009061296d565b6001600160a01b0381166000908152601660205260408120600e544210156120cb5750600092915050565b6000600e54426120db91906128e4565b600954909150600160281b900463ffffffff168110156120ff575060009392505050565b600954610100900463ffffffff16811061213057815461211e8561206b565b61212891906128e4565b949350505050565b600954600090610100900463ffffffff1661214a8661206b565b612154908461296d565b61215e919061298c565b835490915061216d90826128e4565b95945050505050565b6001546001600160a01b031633146121a05760405162461bcd60e51b8152600401610678906127f5565b600d5460ff16156121c35760405162461bcd60e51b815260040161067890612936565b60095460ff1615156001146121ea5760405162461bcd60e51b8152600401610678906129db565b600d805466ff0000000000001916660100000000000017905560005b8151811015610c0557600160156000848481518110612227576122276129ae565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061226381612a12565b915050612206565b600d546301000000900460ff161515600114158061229357506001546001600160a01b031633145b6123105760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a401610678565b805161232390600c906020840190612365565b50806040516123329190612a2d565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b828054612371906128fb565b90600052602060002090601f01602090048101928261239357600085556123d9565b82601f106123ac57805160ff19168380011785556123d9565b828001600101855582156123d9579182015b828111156123d95782518255916020019190600101906123be565b506123e59291506123e9565b5090565b5b808211156123e557600081556001016123ea565b80356001600160a01b038116811461241557600080fd5b919050565b60006020828403121561242c57600080fd5b612435826123fe565b9392505050565b60005b8381101561245757818101518382015260200161243f565b83811115612466576000848401525b50505050565b602081526000825180602084015261248b81604085016020870161243c565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156124de576124de61249f565b604052919050565b600067ffffffffffffffff8211156125005761250061249f565b5060051b60200190565b600082601f83011261251b57600080fd5b8135602061253061252b836124e6565b6124b5565b82815260059290921b8401810191818101908684111561254f57600080fd5b8286015b8481101561257157612564816123fe565b8352918301918301612553565b509695505050505050565b600082601f83011261258d57600080fd5b8135602061259d61252b836124e6565b82815260059290921b840181019181810190868411156125bc57600080fd5b8286015b8481101561257157803583529183019183016125c0565b803563ffffffff8116811461241557600080fd5b801515811461088257600080fd5b8035612415816125eb565b60008060008060008060008060008060006101608c8e03121561262657600080fd5b61262f8c6123fe565b9a5061263d60208d016123fe565b995067ffffffffffffffff8060408e0135111561265957600080fd5b6126698e60408f01358f0161250a565b99508060608e0135111561267c57600080fd5b5061268d8d60608e01358e0161257c565b975060808c0135965060a08c0135955060c08c013594506126b060e08d016125d7565b93506126bf6101008d016125d7565b92506126ce6101208d016125f9565b91506101408c013590509295989b509295989b9093969950565b600080604083850312156126fb57600080fd5b612704836123fe565b946020939093013593505050565b60006020828403121561272457600080fd5b5035919050565b60006020828403121561273d57600080fd5b813567ffffffffffffffff81111561275457600080fd5b6121288482850161250a565b6000602080838503121561277357600080fd5b823567ffffffffffffffff8082111561278b57600080fd5b818501915085601f83011261279f57600080fd5b8135818111156127b1576127b161249f565b6127c3601f8201601f191685016124b5565b915080825286848285010111156127d957600080fd5b8084840185840137600090820190930192909252509392505050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b60006020828403121561283e57600080fd5b5051919050565b60006020828403121561285757600080fd5b8151612435816125eb565b60208082526034908201527f536565643a2073686f756c64207472616e73666572207365656420746f6b656e60408201527339903a37903932b33ab732103932b1b2b4bb32b960611b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156128df576128df6128b6565b500190565b6000828210156128f6576128f66128b6565b500390565b600181811c9082168061290f57607f821691505b6020821081141561293057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6000816000190483118215151615612987576129876128b6565b500290565b6000826129a957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000816129d3576129d36128b6565b506000190190565b6020808252601d908201527f536565643a2073656564206973206e6f742077686974656c6973746564000000604082015260600190565b6000600019821415612a2657612a266128b6565b5060010190565b60008251612a3f81846020870161243c565b919091019291505056fea2646970667358221220a14ece37712203f0c7ef7861e390610160412ca20217b4f7555fe84e01ec5f8964736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102d65760003560e01c80637c65430311610182578063d936547e116100e9578063e6e36ebb116100a2578063f3640e741161007c578063f3640e7414610608578063f851a4401461061f578063fb86a40414610632578063fc582d411461063b57600080fd5b8063e6e36ebb146105d9578063ea345540146105e2578063eaa53523146105f557600080fd5b8063d936547e1461055b578063d96a094a1461057e578063dc4b9e3814610591578063ddca3f43146105a4578063e5087c60146105ad578063e565eb4c146105c457600080fd5b80639b19251a1161013b5780639b19251a14610511578063a035b1fe14610524578063a8660a781461052d578063aad3ec9614610536578063b774682f14610549578063bc0f5f841461055257600080fd5b80637c654303146104c957806383d59e00146104dc5780638456cb59146104e55780638a2448aa146104ed578063906a26e0146104f55780639a590427146104fe57600080fd5b80633dba9e4111610241578063597e1fb5116101fa5780635e9777e8116101d45780635e9777e81461049c57806371f4b8e8146104a557806378065f27146104ad57806378e97925146104c057600080fd5b8063597e1fb51461046a5780635c975abb146104775780635d85ac0d1461048957600080fd5b80633dba9e411461041e5780633f4ba83a1461042b578063430e99a41461043357806343d726d61461044657806344f9abb81461044e57806347d02f1b1461046157600080fd5b80631cfe562e116102935780631cfe562e146103aa578063311f8483146103b35780633197cbb6146103e557806338af3eed146103ee578063392f37e9146104015780633ccfd60b1461041657600080fd5b8063031b3677146102db57806303aabe311461031c5780630826d2c714610331578063117a36d1146103485780631514617e1461036c578063158ef93e14610396575b600080fd5b6103026102e936600461241a565b6016602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b61032f61032a36600461241a565b61064e565b005b61033a60105481565b604051908152602001610313565b600d5461035c90600160281b900460ff1681565b6040519015158152602001610313565b60095461038190610100900463ffffffff1681565b60405163ffffffff9091168152602001610313565b600d5461035c906301000000900460ff1681565b61033a60135481565b6009546103cd90600160481b90046001600160a01b031681565b6040516001600160a01b039091168152602001610313565b61033a60085481565b6000546103cd906001600160a01b031681565b6104096109f5565b604051610313919061246c565b61032f610a83565b60095461035c9060ff1681565b61032f610c09565b61033a61044136600461241a565b610cbe565b61032f610d00565b61032f61045c366004612604565b610d5d565b61033a60115481565b600d5461035c9060ff1681565b600d5461035c90610100900460ff1681565b61033a61049736600461241a565b6111c7565b61033a600f5481565b61033a6111e8565b600a546103cd906001600160a01b031681565b61033a60075481565b600d5461035c9062010000900460ff1681565b61033a60145481565b61032f611212565b61033a6112c8565b61033a60025481565b61032f61050c36600461241a565b61157c565b61032f61051f36600461241a565b611611565b61033a60065481565b61033a600e5481565b61033a6105443660046126e8565b6116a9565b61033a60125481565b61033a60045481565b61035c61056936600461241a565b60156020526000908152604090205460ff1681565b61030261058c366004612712565b611a80565b61033a61059f36600461241a565b61206b565b61033a600b5481565b600d5461035c906601000000000000900460ff1681565b600d5461035c90640100000000900460ff1681565b61033a60055481565b61033a6105f036600461241a565b6120a0565b61032f61060336600461272b565b612176565b60095461038190600160281b900463ffffffff1681565b6001546103cd906001600160a01b031681565b61033a60035481565b61032f610649366004612760565b61226b565b6001546001600160a01b031633146106815760405162461bcd60e51b8152600401610678906127f5565b60405180910390fd5b600d5460ff168061069b5750600d54600160281b900460ff165b806106a857506008544210155b61074b5760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c401610678565b600d54640100000000900460ff16610885576009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b03169063a9059cbb90839083906370a082319060240160206040518083038186803b1580156107b057600080fd5b505afa1580156107c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e8919061282c565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561082e57600080fd5b505af1158015610842573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108669190612845565b6108825760405162461bcd60e51b815260040161067890612862565b50565b600060125460105461089791906128cc565b6005546004546108a791906128cc565b6108b191906128e4565b6009546040516370a0823160e01b81523060048201529192506000918391600160481b90046001600160a01b0316906370a082319060240160206040518083038186803b15801561090157600080fd5b505afa158015610915573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610939919061282c565b61094391906128e4565b60095460405163a9059cbb60e01b81526001600160a01b03868116600483015260248201849052929350600160481b9091049091169063a9059cbb90604401602060405180830381600087803b15801561099c57600080fd5b505af11580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d49190612845565b6109f05760405162461bcd60e51b815260040161067890612862565b505050565b600c8054610a02906128fb565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2e906128fb565b8015610a7b5780601f10610a5057610100808354040283529160200191610a7b565b820191906000526020600020905b815481529060010190602001808311610a5e57829003601f168201915b505050505081565b6001546001600160a01b03163314610aad5760405162461bcd60e51b8152600401610678906127f5565b600d54600160281b900460ff1680610adc5750600d54640100000000900460ff168015610adc57506008544210155b610b685760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a401610678565b6000601454601354610b7a91906128e4565b601354601455600a5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b158015610bcd57600080fd5b505af1158015610be1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c059190612845565b5050565b6001546001600160a01b03163314610c335760405162461bcd60e51b8152600401610678906127f5565b600d5460ff16151560011415610c5b5760405162461bcd60e51b815260040161067890612936565b600d5460ff610100909104161515600114610cb15760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b6044820152606401610678565b600d805461ff0019169055565b600b546001600160a01b0382166000908152601660205260408120549091670de0b6b3a764000091610cf0919061296d565b610cfa919061298c565b92915050565b6001546001600160a01b03163314610d2a5760405162461bcd60e51b8152600401610678906127f5565b600d5460ff1615610d4d5760405162461bcd60e51b815260040161067890612936565b600d805461ffff19166001179055565b600d546301000000900460ff1615610dc25760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b6064820152608401610678565b600d805463ff00000019166301000000179055885189906001908110610dea57610dea6129ae565b60200260200101516001600160a01b031689600081518110610e0e57610e0e6129ae565b60200260200101516001600160a01b03161415610e835760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b6064820152608401610678565b87600081518110610e9657610e966129ae565b602002602001015188600181518110610eb157610eb16129ae565b60200260200101511015610f205760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b6064820152608401610678565b8263ffffffff168463ffffffff161015610fa25760405162461bcd60e51b815260206004820152603d60248201527f53656564466163746f72793a2076657374696e674475726174696f6e2063616e60448201527f6e6f74206265206c657373207468616e2076657374696e67436c6966660000006064820152608401610678565b8585116110175760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d6500000000006064820152608401610678565b600080546001600160a01b03808e166001600160a01b031992831617835560018054918e16919092161790558851899190611054576110546129ae565b602002602001015160028190555087600181518110611075576110756129ae565b6020908102919091010151600355600687905560078690556008859055600e8590556009805468ffffffffffffffff00191661010063ffffffff8781169190910268ffffffff0000000000191691909117600160281b918616919091021760ff1916831515179055885189906000906110f0576110f06129ae565b60200260200101516009806101000a8154816001600160a01b0302191690836001600160a01b0316021790555088600181518110611130576111306129ae565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600b8190555086670de0b6b3a764000060035461117c919061296d565b611186919061298c565b6004819055600b54670de0b6b3a7640000916111a2919061296d565b6111ac919061298c565b60058190556004546010556012555050505050505050505050565b6000670de0b6b3a7640000600b546111de8461206b565b610cf0919061296d565b6000670de0b6b3a7640000600b54601154611203919061296d565b61120d919061298c565b905090565b6001546001600160a01b0316331461123c5760405162461bcd60e51b8152600401610678906127f5565b600d5460ff161561125f5760405162461bcd60e51b815260040161067890612936565b600d54610100900460ff16156112b75760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f74206265207061757365640000000000006044820152606401610678565b600d805461ff001916610100179055565b60004260075411156113275760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b6064820152608401610678565b600d54640100000000900460ff16156113825760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d65746044820152606401610678565b3360009081526016602052604090206001810154806113e35760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e74000000000000006044820152606401610678565b6113ec3361206b565b601060008282546113fd91906128cc565b9091555061140c9050336111c7565b6012600082825461141d91906128cc565b9091555050600f8054906000611432836129c4565b919050555060008260010181905550806013600082825461145391906128e4565b9091555050600a5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156114a457600080fd5b505af11580156114b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114dc9190612845565b6115415760405162461bcd60e51b815260206004820152603060248201527f536565643a2063616e6e6f742072657475726e2066756e64696e6720746f6b6560448201526f3739903a379036b9b39739b2b73232b960811b6064820152608401610678565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a292915050565b6001546001600160a01b031633146115a65760405162461bcd60e51b8152600401610678906127f5565b600d5460ff16156115c95760405162461bcd60e51b815260040161067890612936565b60095460ff1615156001146115f05760405162461bcd60e51b8152600401610678906129db565b6001600160a01b03166000908152601560205260409020805460ff19169055565b6001546001600160a01b0316331461163b5760405162461bcd60e51b8152600401610678906127f5565b600d5460ff161561165e5760405162461bcd60e51b815260040161067890612936565b60095460ff1615156001146116855760405162461bcd60e51b8152600401610678906129db565b6001600160a01b03166000908152601560205260409020805460ff19166001179055565b600d54600090640100000000900460ff166117125760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b6064820152608401610678565b42600854108061172b5750600d54600160281b900460ff165b61178b5760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b6064820152608401610678565b6000611796846120a0565b9050600081116117e85760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c65206973203000000000006044820152606401610678565b8281101561184f5760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b6064820152608401610678565b6000670de0b6b3a7640000600b5485611868919061296d565b611872919061298c565b6001600160a01b03861660009081526016602052604081208054929350869290919061189f9084906128cc565b9250508190555083601160008282546118b891906128cc565b909155505060095460005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052600160481b909204169063a9059cbb90604401602060405180830381600087803b15801561191457600080fd5b505af1158015611928573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194c9190612845565b80156119e1575060095460405163a9059cbb60e01b81526001600160a01b03878116600483015260248201879052600160481b9092049091169063a9059cbb90604401602060405180830381600087803b1580156119a957600080fd5b505af11580156119bd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119e19190612845565b611a2d5760405162461bcd60e51b815260206004820181905260248201527f536565643a207365656420746f6b656e207472616e73666572206661696c65646044820152606401610678565b60005460408051868152602081018490526001600160a01b03928316928816917f9bd10be98695714f5cb43cefb59ba6417808b354710acafafe05e81b26492231910160405180910390a3949350505050565b600d54600090819060ff1615611aa85760405162461bcd60e51b815260040161067890612936565b600d54610100900460ff1615611b005760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f74206265207061757365640000000000006044820152606401610678565b600d54600160281b900460ff1615611b5a5760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e6720726561636865640000006044820152606401610678565b60095460ff161580611b7b57503360009081526015602052604090205460ff165b611bc75760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f207269676874730000000000006044820152606401610678565b4260085410158015611bdb57504260075411155b611c3d5760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b6064820152608401610678565b600d5462010000900460ff16611d4a57600554600454611c5d91906128cc565b6009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b0316906370a082319060240160206040518083038186803b158015611ca657600080fd5b505afa158015611cba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cde919061282c565b1015611d385760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b6064820152608401610678565b600d805462ff00001916620100001790555b600654600090611d62670de0b6b3a76400008661296d565b611d6c919061298c565b90506000670de0b6b3a7640000600b5483611d87919061296d565b611d91919061298c565b600954909150610100900463ffffffff16821015611df15760405162461bcd60e51b815260206004820152601f60248201527f536565643a20616d6f756e745665737465645065725365636f6e64203e2030006044820152606401610678565b60035485601354611e0291906128cc565b1115611e635760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b6064820152608401610678565b8460136000828254611e7591906128cc565b925050819055508160106000828254611e8e91906128e4565b925050819055508060126000828254611ea791906128e4565b909155505060025460135410611ecd57600d805464ff0000000019166401000000001790555b60035460135410611ef257600d805465ff00000000001916600160281b17905542600e555b33600090815260166020526040902060010154611f1f57600f8054906000611f1983612a12565b91905055505b3360009081526016602052604081206001018054879290611f419084906128cc565b9091555050600a546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611f9857600080fd5b505af1158015611fac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fd09190612845565b61202c5760405162461bcd60e51b815260206004820152602760248201527f536565643a2066756e64696e6720746f6b656e207472616e7366657246726f6d6044820152660819985a5b195960ca1b6064820152608401610678565b60405182815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a29092509050915091565b6006546001600160a01b038216600090815260166020526040812060010154909190610cf090670de0b6b3a76400009061296d565b6001600160a01b0381166000908152601660205260408120600e544210156120cb5750600092915050565b6000600e54426120db91906128e4565b600954909150600160281b900463ffffffff168110156120ff575060009392505050565b600954610100900463ffffffff16811061213057815461211e8561206b565b61212891906128e4565b949350505050565b600954600090610100900463ffffffff1661214a8661206b565b612154908461296d565b61215e919061298c565b835490915061216d90826128e4565b95945050505050565b6001546001600160a01b031633146121a05760405162461bcd60e51b8152600401610678906127f5565b600d5460ff16156121c35760405162461bcd60e51b815260040161067890612936565b60095460ff1615156001146121ea5760405162461bcd60e51b8152600401610678906129db565b600d805466ff0000000000001916660100000000000017905560005b8151811015610c0557600160156000848481518110612227576122276129ae565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061226381612a12565b915050612206565b600d546301000000900460ff161515600114158061229357506001546001600160a01b031633145b6123105760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a401610678565b805161232390600c906020840190612365565b50806040516123329190612a2d565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b828054612371906128fb565b90600052602060002090601f01602090048101928261239357600085556123d9565b82601f106123ac57805160ff19168380011785556123d9565b828001600101855582156123d9579182015b828111156123d95782518255916020019190600101906123be565b506123e59291506123e9565b5090565b5b808211156123e557600081556001016123ea565b80356001600160a01b038116811461241557600080fd5b919050565b60006020828403121561242c57600080fd5b612435826123fe565b9392505050565b60005b8381101561245757818101518382015260200161243f565b83811115612466576000848401525b50505050565b602081526000825180602084015261248b81604085016020870161243c565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156124de576124de61249f565b604052919050565b600067ffffffffffffffff8211156125005761250061249f565b5060051b60200190565b600082601f83011261251b57600080fd5b8135602061253061252b836124e6565b6124b5565b82815260059290921b8401810191818101908684111561254f57600080fd5b8286015b8481101561257157612564816123fe565b8352918301918301612553565b509695505050505050565b600082601f83011261258d57600080fd5b8135602061259d61252b836124e6565b82815260059290921b840181019181810190868411156125bc57600080fd5b8286015b8481101561257157803583529183019183016125c0565b803563ffffffff8116811461241557600080fd5b801515811461088257600080fd5b8035612415816125eb565b60008060008060008060008060008060006101608c8e03121561262657600080fd5b61262f8c6123fe565b9a5061263d60208d016123fe565b995067ffffffffffffffff8060408e0135111561265957600080fd5b6126698e60408f01358f0161250a565b99508060608e0135111561267c57600080fd5b5061268d8d60608e01358e0161257c565b975060808c0135965060a08c0135955060c08c013594506126b060e08d016125d7565b93506126bf6101008d016125d7565b92506126ce6101208d016125f9565b91506101408c013590509295989b509295989b9093969950565b600080604083850312156126fb57600080fd5b612704836123fe565b946020939093013593505050565b60006020828403121561272457600080fd5b5035919050565b60006020828403121561273d57600080fd5b813567ffffffffffffffff81111561275457600080fd5b6121288482850161250a565b6000602080838503121561277357600080fd5b823567ffffffffffffffff8082111561278b57600080fd5b818501915085601f83011261279f57600080fd5b8135818111156127b1576127b161249f565b6127c3601f8201601f191685016124b5565b915080825286848285010111156127d957600080fd5b8084840185840137600090820190930192909252509392505050565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b60006020828403121561283e57600080fd5b5051919050565b60006020828403121561285757600080fd5b8151612435816125eb565b60208082526034908201527f536565643a2073686f756c64207472616e73666572207365656420746f6b656e60408201527339903a37903932b33ab732103932b1b2b4bb32b960611b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b600082198211156128df576128df6128b6565b500190565b6000828210156128f6576128f66128b6565b500390565b600181811c9082168061290f57607f821691505b6020821081141561293057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6000816000190483118215151615612987576129876128b6565b500290565b6000826129a957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b6000816129d3576129d36128b6565b506000190190565b6020808252601d908201527f536565643a2073656564206973206e6f742077686974656c6973746564000000604082015260600190565b6000600019821415612a2657612a266128b6565b5060010190565b60008251612a3f81846020870161243c565b919091019291505056fea2646970667358221220a14ece37712203f0c7ef7861e390610160412ca20217b4f7555fe84e01ec5f8964736f6c63430008090033",
  "devdoc": {
    "details": "Smart contract for seed phases of liquid launch.",
    "kind": "dev",
    "methods": {
      "buy(uint256)": {
        "details": "Buy seed tokens.",
        "params": {
          "_fundingAmount": "The amount of funding tokens to contribute."
        }
      },
      "calculateClaim(address)": {
        "details": "Calculates the maximum claim",
        "params": {
          "_funder": "Address of funder to find the maximum claim"
        }
      },
      "claim(address,uint256)": {
        "details": "Claim vested seed tokens.",
        "params": {
          "_claimAmount": "The amount of seed token a users wants to claim.",
          "_funder": "Address of funder to calculate seconds and amount claimable"
        }
      },
      "close()": {
        "details": "Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist."
      },
      "feeClaimed()": {
        "details": "Amount of seed tokens claimed as fee"
      },
      "feeClaimedForFunder(address)": {
        "details": "get fee claimed for funder",
        "params": {
          "_funder": "address of funder to check fee claimed"
        }
      },
      "feeForFunder(address)": {
        "details": "get fee for funder",
        "params": {
          "_funder": "address of funder to check fee"
        }
      },
      "initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint256)": {
        "details": "Initialize Seed.",
        "params": {
          "_admin": "The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.",
          "_beneficiary": "The address that recieves fees.",
          "_endTime": "Distribution end time in unix timecode.",
          "_fee": "Success fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)",
          "_permissionedSeed": "Set to true if only whitelisted adresses are allowed to participate.",
          "_price": "price of a SeedToken, expressed in fundingTokens, with precision of 10**18",
          "_softHardThresholds": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
          "_startTime": "Distribution start time in unix timecode.",
          "_tokens": "Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.",
          "_vestingCliff": "Cliff duration in seconds.",
          "_vestingDuration": "Vesting period duration in seconds."
        }
      },
      "pause()": {
        "details": "Pause distribution."
      },
      "retrieveFundingTokens()": {
        "details": "Returns funding tokens to user."
      },
      "retrieveSeedTokens(address)": {
        "details": "retrieve remaining seed tokens back to project.",
        "params": {
          "_refundReceiver": "refund receiver address"
        }
      },
      "seedAmountForFunder(address)": {
        "details": "get seed amount for funder",
        "params": {
          "_funder": "address of funder to seed amount"
        }
      },
      "unpause()": {
        "details": "Unpause distribution."
      },
      "unwhitelist(address)": {
        "details": "Remove address from whitelist.",
        "params": {
          "buyer": "Address which needs to be unwhitelisted"
        }
      },
      "updateMetadata(bytes)": {
        "details": "Updates metadata.",
        "params": {
          "_metadata": "Seed contract metadata, that is IPFS Hash"
        }
      },
      "whitelist(address)": {
        "details": "Add address to whitelist.",
        "params": {
          "_buyer": "Address which needs to be whitelisted"
        }
      },
      "whitelistBatch(address[])": {
        "details": "Add multiple addresses to whitelist.",
        "params": {
          "_buyers": "Array of addresses to whitelist addresses in batch"
        }
      },
      "withdraw()": {
        "details": "Withdraw funds from the contract"
      }
    },
    "title": "PrimeDAO Seed contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1020,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "beneficiary",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1022,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1024,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 1026,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1028,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedAmountRequired",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1030,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeAmountRequired",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1032,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "price",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1034,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "startTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1036,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "endTime",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1038,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "permissionedSeed",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 1040,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingDuration",
        "offset": 1,
        "slot": "9",
        "type": "t_uint32"
      },
      {
        "astId": 1042,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingCliff",
        "offset": 5,
        "slot": "9",
        "type": "t_uint32"
      },
      {
        "astId": 1045,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedToken",
        "offset": 9,
        "slot": "9",
        "type": "t_contract(IERC20)2621"
      },
      {
        "astId": 1048,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingToken",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IERC20)2621"
      },
      {
        "astId": 1050,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 1052,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "metadata",
        "offset": 0,
        "slot": "12",
        "type": "t_bytes_storage"
      },
      {
        "astId": 1059,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "closed",
        "offset": 0,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 1061,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "paused",
        "offset": 1,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 1063,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "isFunded",
        "offset": 2,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 1065,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "initialized",
        "offset": 3,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 1067,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "minimumReached",
        "offset": 4,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 1069,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "maximumReached",
        "offset": 5,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 1071,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "isWhitelistBatchInvoked",
        "offset": 6,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 1073,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingStartTime",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 1075,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "totalFunderCount",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 1077,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedRemainder",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 1079,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedClaimed",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 1081,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeRemainder",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 1083,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingCollected",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 1085,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingWithdrawn",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 1089,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "whitelisted",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1094,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "funders",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_struct(FunderPortfolio)1125_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)2621": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(FunderPortfolio)1125_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Seed.FunderPortfolio)",
        "numberOfBytes": "32",
        "value": "t_struct(FunderPortfolio)1125_storage"
      },
      "t_struct(FunderPortfolio)1125_storage": {
        "encoding": "inplace",
        "label": "struct Seed.FunderPortfolio",
        "members": [
          {
            "astId": 1122,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1124,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "fundingAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}