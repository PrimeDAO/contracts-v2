{
  "address": "0x07b1bC3F815D6FC646B92A3636482163E6efBed3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountReclaimed",
          "type": "uint256"
        }
      ],
      "name": "FundingReclaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPurchased",
          "type": "uint256"
        }
      ],
      "name": "SeedsPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAmount",
          "type": "uint256"
        }
      ],
      "name": "TokensClaimed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fundingAmount",
          "type": "uint256"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "calculateClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_claimAmount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "close",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "feeClaimedForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "feeForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "fundingAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingCollected",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundingWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hardCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_softHardThresholds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_vestingDuration",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "_vestingCliff",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "_permissionedSeed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maximumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumReached",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "permissionedSeed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveFundingTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_refundReceiver",
          "type": "address"
        }
      ],
      "name": "retrieveSeedTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        }
      ],
      "name": "seedAmountForFunder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedAmountRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedClaimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedRemainder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "seedToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "softCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalFunderCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        }
      ],
      "name": "unwhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingCliff",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingDuration",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vestingStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_buyer",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_buyers",
          "type": "address[]"
        }
      ],
      "name": "whitelistBatch",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1969280009486f73519f49129a311c5d89400dc2bc5e9d72bcf9b236b5b0b8d2",
  "receipt": {
    "to": null,
    "from": "0x8634588DbcC282d22726b75FDf3dBf2004384216",
    "contractAddress": "0x07b1bC3F815D6FC646B92A3636482163E6efBed3",
    "transactionIndex": 79,
    "gasUsed": "2388050",
    "logsBloom": "0x
    "blockHash": "0x2b172f65d433954de7b71ee49213f3b4d1a6b1a5bdf180f72eb3af87a597573e",
    "transactionHash": "0x1969280009486f73519f49129a311c5d89400dc2bc5e9d72bcf9b236b5b0b8d2",
    "logs": [],
    "blockNumber": 12958300,
    "cumulativeGasUsed": "13467501",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "4fa05d88d37972a2790a1a0045c760b0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountReclaimed\",\"type\":\"uint256\"}],\"name\":\"FundingReclaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPurchased\",\"type\":\"uint256\"}],\"name\":\"SeedsPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fundingAmount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"calculateClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_claimAmount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"close\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"feeClaimedForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"feeForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fundingAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingCollected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundingWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hardCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_softHardThresholds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_vestingDuration\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_vestingCliff\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"_permissionedSeed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maximumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumReached\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"permissionedSeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveFundingTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_refundReceiver\",\"type\":\"address\"}],\"name\":\"retrieveSeedTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"}],\"name\":\"seedAmountForFunder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedAmountRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedClaimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedRemainder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"softCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFunderCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"name\":\"unwhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingCliff\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_buyer\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_buyers\",\"type\":\"address[]\"}],\"name\":\"whitelistBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for seed phases of liquid launch.\",\"kind\":\"dev\",\"methods\":{\"buy(uint256)\":{\"details\":\"Buy seed tokens.\",\"params\":{\"_fundingAmount\":\"The amount of funding tokens to contribute.\"}},\"calculateClaim(address)\":{\"details\":\"Calculates the maximum claim\",\"params\":{\"_funder\":\"Address of funder to find the maximum claim\"}},\"claim(address,uint256)\":{\"details\":\"Claim vested seed tokens.\",\"params\":{\"_claimAmount\":\"The amount of seed token a users wants to claim.\",\"_funder\":\"Address of funder to calculate seconds and amount claimable\"}},\"close()\":{\"details\":\"Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist.\"},\"feeClaimed()\":{\"details\":\"Amount of seed tokens claimed as fee\"},\"feeClaimedForFunder(address)\":{\"details\":\"get fee claimed for funder\",\"params\":{\"_funder\":\"address of funder to check fee claimed\"}},\"feeForFunder(address)\":{\"details\":\"get fee for funder\",\"params\":{\"_funder\":\"address of funder to check fee\"}},\"initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint256)\":{\"details\":\"Initialize Seed.\",\"params\":{\"_admin\":\"The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.\",\"_beneficiary\":\"The address that recieves fees.\",\"_endTime\":\"Distribution end time in unix timecode.\",\"_fee\":\"Success fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)\",\"_permissionedSeed\":\"Set to true if only whitelisted adresses are allowed to participate.\",\"_price\":\"price of a SeedToken, expressed in fundingTokens, with precision of 10**18\",\"_softHardThresholds\":\"Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.\",\"_startTime\":\"Distribution start time in unix timecode.\",\"_tokens\":\"Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.\",\"_vestingCliff\":\"Cliff duration in seconds.\",\"_vestingDuration\":\"Vesting period duration in seconds.\"}},\"pause()\":{\"details\":\"Pause distribution.\"},\"retrieveFundingTokens()\":{\"details\":\"Returns funding tokens to user.\"},\"retrieveSeedTokens(address)\":{\"details\":\"retrieve remaining seed tokens back to project.\",\"params\":{\"_refundReceiver\":\"refund receiver address\"}},\"seedAmountForFunder(address)\":{\"details\":\"get seed amount for funder\",\"params\":{\"_funder\":\"address of funder to seed amount\"}},\"unpause()\":{\"details\":\"Unpause distribution.\"},\"unwhitelist(address)\":{\"details\":\"Remove address from whitelist.\",\"params\":{\"buyer\":\"Address which needs to be unwhitelisted\"}},\"updateMetadata(bytes)\":{\"details\":\"Updates metadata.\",\"params\":{\"_metadata\":\"Seed contract metadata, that is IPFS Hash\"}},\"whitelist(address)\":{\"details\":\"Add address to whitelist.\",\"params\":{\"_buyer\":\"Address which needs to be whitelisted\"}},\"whitelistBatch(address[])\":{\"details\":\"Add multiple addresses to whitelist.\",\"params\":{\"_buyers\":\"Array of addresses to whitelist addresses in batch\"}},\"withdraw()\":{\"details\":\"Withdraw funds from the contract\"}},\"title\":\"PrimeDAO Seed contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/seed/Seed.sol\":\"Seed\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/seed/Seed.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0-or-later\\n// solium-disable operator-whitespace\\n/* solhint-disable space-after-comma */\\n/* solhint-disable max-states-count */\\n// solium-disable linebreak-style\\npragma solidity 0.8.6;\\n\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\\\";\\n\\n\\n/**\\n * @title PrimeDAO Seed contract\\n * @dev   Smart contract for seed phases of liquid launch.\\n */\\ncontract Seed {\\n    // Locked parameters\\n    address public beneficiary;\\n    address public admin;\\n    uint256 public softCap;\\n    uint256 public hardCap;\\n    uint256 public seedAmountRequired; // Amount of seed required for distribution\\n    uint256 public feeAmountRequired;  // Amount of seed required for fee\\n    uint256 public price;              // price of a SeedToken, expressed in fundingTokens, with precision of 10**18\\n    uint256 public startTime;\\n    uint256 public endTime;            // set by project admin, this is the last resort endTime to be applied when\\n                                       //     maximumReached has not been reached by then\\n    bool    public permissionedSeed;\\n    uint32  public vestingDuration;\\n    uint32  public vestingCliff;\\n    IERC20  public seedToken;\\n    IERC20  public fundingToken;\\n    uint256 public fee;                // Success fee expressed as a % (e.g. 10**18 = 100% fee, 10**16 = 1%)\\n\\n    bytes   public metadata;           // IPFS Hash\\n\\n    uint256 constant internal PRECISION = 10 ** 18; // used for precision e.g. 1 ETH = 10**18 wei; toWei(\\\"1\\\") = 10**18\\n\\n    // Contract logic\\n    bool    public closed;                 // is the distribution closed\\n    bool    public paused;                 // is the distribution paused\\n    bool    public isFunded;               // distribution can only start when required seed tokens have been funded\\n    bool    public initialized;            // is this contract initialized [not necessary that it is funded]\\n    bool    public minimumReached;         // if the softCap[minimum limit of funding token] is reached\\n    bool    public maximumReached;         // if the hardCap[maximum limit of funding token] is reached\\n    uint256 public vestingStartTime;       // timestamp for when vesting starts, by default == endTime,\\n                                           //     otherwise when maximumReached is reached\\n    uint256 public totalFunderCount;       // Total funders that have contributed.\\n    uint256 public seedRemainder;          // Amount of seed tokens remaining to be distributed\\n    uint256 public seedClaimed;            // Amount of seed token claimed by the user.\\n    uint256 public feeRemainder;           // Amount of seed tokens remaining for the fee\\n    uint256 public fundingCollected;       // Amount of funding tokens collected by the seed contract.\\n    uint256 public fundingWithdrawn;       // Amount of funding token withdrawn from the seed contract.\\n\\n    mapping (address => bool) public whitelisted;        // funders that are whitelisted and allowed to contribute\\n    mapping (address => FunderPortfolio) public funders; // funder address to funder portfolio\\n\\n    event SeedsPurchased(address indexed recipient, uint256 amountPurchased);\\n    event TokensClaimed(address indexed recipient,uint256 amount,address indexed beneficiary,uint256 feeAmount);\\n    event FundingReclaimed(address indexed recipient, uint256 amountReclaimed);\\n    event MetadataUpdated(bytes indexed metadata);\\n\\n    struct FunderPortfolio {\\n        uint256 totalClaimed;               // Total amount of seed tokens claimed\\n        uint256 fundingAmount;              // Total amount of funding tokens contributed\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Seed: caller should be admin\\\");\\n        _;\\n    }\\n\\n    modifier isActive() {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(!paused, \\\"Seed: should not be paused\\\");\\n        _;\\n    }\\n\\n    /**\\n      * @dev                          Initialize Seed.\\n      * @param _beneficiary           The address that recieves fees.\\n      * @param _admin                 The address of the admin of this contract. Funds contract\\n                                      and has permissions to whitelist users, pause and close contract.\\n      * @param _tokens                Array containing two params:\\n                                        - The address of the seed token being distributed.\\n      *                                 - The address of the funding token being exchanged for seed token.\\n      * @param _softHardThresholds    Array containing two params:\\n                                        - the minimum funding token collection threshold in wei denomination.\\n                                        - the highest possible funding token amount to be raised in wei denomination.\\n      * @param _price                 price of a SeedToken, expressed in fundingTokens, with precision of 10**18\\n      * @param _startTime             Distribution start time in unix timecode.\\n      * @param _endTime               Distribution end time in unix timecode.\\n      * @param _vestingDuration       Vesting period duration in seconds.\\n      * @param _vestingCliff          Cliff duration in seconds.\\n      * @param _permissionedSeed      Set to true if only whitelisted adresses are allowed to participate.\\n      * @param _fee                   Success fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)\\n    */\\n    function initialize(\\n        address _beneficiary,\\n        address _admin,\\n        address[] memory _tokens,\\n        uint256[] memory _softHardThresholds,\\n        uint256 _price,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        uint32  _vestingDuration,\\n        uint32  _vestingCliff,\\n        bool    _permissionedSeed,\\n        uint256   _fee\\n    ) external\\n    {\\n        require(!initialized, \\\"Seed: contract already initialized\\\");\\n        initialized = true;\\n\\n        // parameter check\\n        require(_tokens[0] != _tokens[1], \\\"SeedFactory: seedToken cannot be fundingToken\\\");\\n        require(_softHardThresholds[1] >= _softHardThresholds[0],\\\"SeedFactory: hardCap cannot be less than softCap\\\");\\n        require(_vestingDuration >= _vestingCliff, \\\"SeedFactory: vestingDuration cannot be less than vestingCliff\\\");\\n        require(_endTime > _startTime, \\\"SeedFactory: endTime cannot be less than equal to startTime\\\");\\n\\n        beneficiary       = _beneficiary;\\n        admin             = _admin;\\n        softCap           = _softHardThresholds[0];\\n        hardCap           = _softHardThresholds[1];\\n        price             = _price;\\n        startTime         = _startTime;\\n        endTime           = _endTime;\\n        vestingStartTime  = endTime;\\n        vestingDuration   = _vestingDuration;\\n        vestingCliff      = _vestingCliff;\\n        permissionedSeed  = _permissionedSeed;\\n        seedToken         = IERC20(_tokens[0]);\\n        fundingToken      = IERC20(_tokens[1]);\\n        fee               = _fee;\\n\\n        seedAmountRequired = (hardCap*PRECISION) / _price;\\n        // (seedAmountRequired*fee) / (100*FEE_PRECISION) = (seedAmountRequired*fee) / PRECISION\\n        //  where FEE_PRECISION = 10**16\\n        feeAmountRequired  = (seedAmountRequired*fee) / PRECISION;\\n        seedRemainder      = seedAmountRequired;\\n        feeRemainder       = feeAmountRequired;\\n    }\\n\\n    /**\\n      * @dev                     Buy seed tokens.\\n      * @param _fundingAmount    The amount of funding tokens to contribute.\\n    */\\n    function buy(uint256 _fundingAmount) external isActive returns(uint256, uint256) {\\n        require(!maximumReached, \\\"Seed: maximum funding reached\\\");\\n        require(!permissionedSeed || whitelisted[msg.sender], \\\"Seed: sender has no rights\\\");\\n        require(endTime >= block.timestamp && startTime <= block.timestamp,\\n            \\\"Seed: only allowed during distribution period\\\");\\n        if (!isFunded) {\\n            require(seedToken.balanceOf(address(this)) >= seedAmountRequired + feeAmountRequired,\\n                \\\"Seed: sufficient seeds not provided\\\");\\n            isFunded = true;\\n        }\\n        // fundingAmount is an amount of fundingTokens required to buy _seedAmount of SeedTokens\\n        uint256 seedAmount = (_fundingAmount*PRECISION)/price;\\n\\n        // feeAmount is an amount of fee we are going to get in seedTokens\\n        uint256 feeAmount = (seedAmount*fee) / PRECISION;\\n\\n        // seed amount vested per second > zero, i.e. amountVestedPerSecond = seedAmount/vestingDuration\\n        require(\\n            seedAmount >= vestingDuration,\\n            \\\"Seed: amountVestedPerSecond > 0\\\");\\n\\n        // total fundingAmount should not be greater than the hardCap\\n        require( fundingCollected + _fundingAmount <= hardCap,\\n            \\\"Seed: amount exceeds contract sale hardCap\\\");\\n\\n        fundingCollected += _fundingAmount;\\n\\n        // the amount of seed tokens still to be distributed\\n        seedRemainder -= seedAmount;\\n        feeRemainder  -= feeAmount;\\n\\n        if (fundingCollected >= softCap) {\\n            minimumReached = true;\\n        }\\n        if (fundingCollected >= hardCap) {\\n            maximumReached = true;\\n            vestingStartTime = block.timestamp;\\n        }\\n\\n        //functionality of addFunder\\n        if (funders[msg.sender].fundingAmount==0) {\\n            totalFunderCount++;\\n        }\\n        funders[msg.sender].fundingAmount += _fundingAmount;\\n\\n        // Here we are sending amount of tokens to pay for seed tokens to purchase\\n        require(\\n            fundingToken.transferFrom(msg.sender, address(this), _fundingAmount),\\n            \\\"Seed: funding token transferFrom failed\\\"\\n        );\\n\\n        emit SeedsPurchased(msg.sender, seedAmount);\\n\\n        return (seedAmount, feeAmount);\\n    }\\n\\n    /**\\n      * @dev                     Claim vested seed tokens.\\n      * @param _funder           Address of funder to calculate seconds and amount claimable\\n      * @param _claimAmount      The amount of seed token a users wants to claim.\\n    */\\n    function claim(address _funder, uint256 _claimAmount) external returns(uint256) {\\n        require(minimumReached, \\\"Seed: minimum funding amount not met\\\");\\n        require(endTime < block.timestamp || maximumReached,\\\"Seed: the distribution has not yet finished\\\");\\n        uint256 amountClaimable;\\n\\n        amountClaimable = calculateClaim(_funder);\\n        require(amountClaimable > 0, \\\"Seed: amount claimable is 0\\\");\\n        require(amountClaimable >= _claimAmount, \\\"Seed: request is greater than claimable amount\\\");\\n        uint256 feeAmountOnClaim = (_claimAmount * fee) / PRECISION;\\n\\n        funders[_funder].totalClaimed    += _claimAmount;\\n\\n        seedClaimed += _claimAmount;\\n        require(\\n            seedToken.transfer(beneficiary, feeAmountOnClaim) && seedToken.transfer(_funder, _claimAmount),\\n            \\\"Seed: seed token transfer failed\\\");\\n\\n        emit TokensClaimed(_funder, _claimAmount, beneficiary, feeAmountOnClaim);\\n\\n        return feeAmountOnClaim;\\n    }\\n\\n    /**\\n      * @dev         Returns funding tokens to user.\\n    */\\n    function retrieveFundingTokens() external returns(uint256) {\\n        require(startTime <= block.timestamp, \\\"Seed: distribution haven't started\\\");\\n        require(!minimumReached, \\\"Seed: minimum funding amount met\\\");\\n        FunderPortfolio storage tokenFunder = funders[msg.sender];\\n        uint256 fundingAmount = tokenFunder.fundingAmount;\\n        require(fundingAmount > 0, \\\"Seed: zero funding amount\\\");\\n        seedRemainder += seedAmountForFunder(msg.sender);\\n        feeRemainder += feeForFunder(msg.sender);\\n        totalFunderCount--;\\n        tokenFunder.fundingAmount = 0;\\n        fundingCollected -= fundingAmount;\\n        require(\\n            fundingToken.transfer(msg.sender, fundingAmount),\\n            \\\"Seed: cannot return funding tokens to msg.sender\\\"\\n        );\\n        emit FundingReclaimed(msg.sender, fundingAmount);\\n\\n        return fundingAmount;\\n    }\\n\\n    // ADMIN ACTIONS\\n\\n    /**\\n      * @dev                     Pause distribution.\\n    */\\n    function pause() external onlyAdmin isActive {\\n        paused = true;\\n    }\\n\\n    /**\\n      * @dev                     Unpause distribution.\\n    */\\n    function unpause() external onlyAdmin {\\n        require(closed != true, \\\"Seed: should not be closed\\\");\\n        require(paused == true, \\\"Seed: should be paused\\\");\\n\\n        paused = false;\\n    }\\n\\n    /**\\n      * @dev                Shut down contributions (buying).\\n                            Supersedes the normal logic that eventually shuts down buying anyway.\\n                            Also shuts down the admin's ability to alter the whitelist.\\n    */\\n    function close() external onlyAdmin {\\n        // close seed token distribution\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        closed = true;\\n        paused = false;\\n    }\\n\\n    /**\\n      * @dev                     retrieve remaining seed tokens back to project.\\n      * @param _refundReceiver   refund receiver address\\n    */\\n    function retrieveSeedTokens(address _refundReceiver) external onlyAdmin {\\n        // transfer seed tokens back to admin\\n        /*\\n            Can't withdraw seed tokens until buying has ended and\\n            therefore the number of distributable seed tokens can no longer change.\\n        */\\n        require(\\n            closed ||\\n            maximumReached ||\\n            block.timestamp >= endTime,\\n            \\\"Seed: The ability to buy seed tokens must have ended before remaining seed tokens can be withdrawn\\\"\\n        );\\n        if (!minimumReached) {\\n            require(\\n                seedToken.transfer(_refundReceiver, seedToken.balanceOf(address(this))),\\n                \\\"Seed: should transfer seed tokens to refund receiver\\\"\\n            );\\n        } else {\\n            // seed tokens to transfer = balance of seed tokens - totalSeedDistributed\\n            uint256 totalSeedDistributed = (seedAmountRequired+feeAmountRequired)-(seedRemainder+feeRemainder);\\n            uint256 amountToTransfer = seedToken.balanceOf(address(this))-totalSeedDistributed;\\n            require(\\n                seedToken.transfer(_refundReceiver, amountToTransfer),\\n                \\\"Seed: should transfer seed tokens to refund receiver\\\"\\n            );\\n        }\\n    }\\n\\n    /**\\n      * @dev                     Add address to whitelist.\\n      * @param _buyer            Address which needs to be whitelisted\\n    */\\n    function whitelist(address _buyer) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n\\n        whitelisted[_buyer] = true;\\n    }\\n\\n    /**\\n      * @dev                     Add multiple addresses to whitelist.\\n      * @param _buyers           Array of addresses to whitelist addresses in batch\\n    */\\n    function whitelistBatch(address[] memory _buyers) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n        for (uint256 i = 0; i < _buyers.length; i++) {\\n            whitelisted[_buyers[i]] = true;\\n        }\\n    }\\n\\n    /**\\n      * @dev                     Remove address from whitelist.\\n      * @param buyer             Address which needs to be unwhitelisted\\n    */\\n    function unwhitelist(address buyer) external onlyAdmin {\\n        require(!closed, \\\"Seed: should not be closed\\\");\\n        require(permissionedSeed == true, \\\"Seed: seed is not whitelisted\\\");\\n\\n        whitelisted[buyer] = false;\\n    }\\n\\n    /**\\n      * @dev                     Withdraw funds from the contract\\n    */\\n    function withdraw() external onlyAdmin {\\n        /*\\n            Admin can't withdraw funding tokens until buying has ended and\\n            therefore contributors can no longer withdraw their funding tokens.\\n        */\\n        require(\\n            maximumReached ||\\n            (minimumReached && block.timestamp >= endTime),\\n            \\\"Seed: cannot withdraw while funding tokens can still be withdrawn by contributors\\\"\\n        );\\n        uint pendingFundingBalance = fundingCollected - fundingWithdrawn;\\n        fundingWithdrawn = fundingCollected;\\n        fundingToken.transfer(msg.sender, pendingFundingBalance);\\n    }\\n\\n    /**\\n      * @dev                     Updates metadata.\\n      * @param _metadata         Seed contract metadata, that is IPFS Hash\\n    */\\n    function updateMetadata(bytes memory _metadata) external {\\n        require(\\n            initialized != true || msg.sender == admin,\\n            \\\"Seed: contract should not be initialized or caller should be admin\\\"\\n        );\\n        metadata = _metadata;\\n        emit MetadataUpdated(_metadata);\\n    }\\n\\n    // GETTER FUNCTIONS\\n    /**\\n      * @dev                     Calculates the maximum claim\\n      * @param _funder           Address of funder to find the maximum claim\\n    */\\n    function calculateClaim(address _funder) public view returns(uint256) {\\n        FunderPortfolio storage tokenFunder = funders[_funder];\\n\\n        if (block.timestamp < vestingStartTime) {\\n            return 0;\\n        }\\n\\n        // Check cliff was reached\\n        uint256 elapsedSeconds = block.timestamp - vestingStartTime;\\n\\n        if (elapsedSeconds < vestingCliff) {\\n            return 0;\\n        }\\n\\n        // If over vesting duration, all tokens vested\\n        if (elapsedSeconds >= vestingDuration) {\\n            return seedAmountForFunder(_funder) - tokenFunder.totalClaimed;\\n        } else {\\n            uint256 amountVested = (elapsedSeconds*seedAmountForFunder(_funder)) / vestingDuration;\\n            return amountVested - tokenFunder.totalClaimed;\\n        }\\n    }\\n\\n    /**\\n      * @dev                     Amount of seed tokens claimed as fee\\n    */\\n    function feeClaimed() public view returns(uint256) {\\n        return (seedClaimed*fee)/PRECISION;\\n    }\\n\\n    /**\\n      * @dev                     get fee claimed for funder\\n      * @param _funder           address of funder to check fee claimed\\n    */\\n    function feeClaimedForFunder(address _funder) public view returns(uint256) {\\n        return (funders[_funder].totalClaimed*fee)/PRECISION;\\n    }\\n\\n    /**\\n      * @dev                     get fee for funder\\n      * @param _funder           address of funder to check fee\\n    */\\n    function feeForFunder(address _funder) public view returns(uint256) {\\n        return (seedAmountForFunder(_funder)*fee)/PRECISION;\\n    }\\n\\n    /**\\n      * @dev                     get seed amount for funder\\n      * @param _funder           address of funder to seed amount\\n    */\\n    function seedAmountForFunder(address _funder) public view returns(uint256) {\\n        return (funders[_funder].fundingAmount*PRECISION)/price;\\n    }\\n}\\n\",\"keccak256\":\"0x546db1d63d5f19acaf96813568e5feaa5c73e8401591329c425c0bf090e1a31b\",\"license\":\"GPL-3.0-or-later\"},\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612a40806100206000396000f3fe608060405234801561001057600080fd5b50600436106102bb5760003560e01c806378e9792511610182578063bc0f5f84116100e9578063e6e36ebb116100a2578063f3640e741161007c578063f3640e74146105d6578063f851a440146105ed578063fb86a40414610600578063fc582d411461060957600080fd5b8063e6e36ebb146105a7578063ea345540146105b0578063eaa53523146105c357600080fd5b8063bc0f5f8414610537578063d936547e14610540578063d96a094a14610563578063dc4b9e3814610576578063ddca3f4314610589578063e565eb4c1461059257600080fd5b80639a5904271161013b5780639a590427146104e35780639b19251a146104f6578063a035b1fe14610509578063a8660a7814610512578063aad3ec961461051b578063b774682f1461052e57600080fd5b806378e97925146104a55780637c654303146104ae57806383d59e00146104c15780638456cb59146104ca5780638a2448aa146104d2578063906a26e0146104da57600080fd5b80633dba9e4111610226578063597e1fb5116101df578063597e1fb51461044f5780635c975abb1461045c5780635d85ac0d1461046e5780635e9777e81461048157806371f4b8e81461048a57806378065f271461049257600080fd5b80633dba9e41146104035780633f4ba83a14610410578063430e99a41461041857806343d726d61461042b57806344f9abb81461043357806347d02f1b1461044657600080fd5b80631cfe562e116102785780631cfe562e1461038f578063311f8483146103985780633197cbb6146103ca57806338af3eed146103d3578063392f37e9146103e65780633ccfd60b146103fb57600080fd5b8063031b3677146102c057806303aabe31146103015780630826d2c714610316578063117a36d11461032d5780631514617e14610351578063158ef93e1461037b575b600080fd5b6102e76102ce3660046124c7565b6016602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b61031461030f3660046124c7565b61061c565b005b61031f60105481565b6040519081526020016102f8565b600d5461034190600160281b900460ff1681565b60405190151581526020016102f8565b60095461036690610100900463ffffffff1681565b60405163ffffffff90911681526020016102f8565b600d54610341906301000000900460ff1681565b61031f60135481565b6009546103b290600160481b90046001600160a01b031681565b6040516001600160a01b0390911681526020016102f8565b61031f60085481565b6000546103b2906001600160a01b031681565b6103ee6109c3565b6040516102f8919061272c565b610314610a51565b6009546103419060ff1681565b610314610bd7565b61031f6104263660046124c7565b610c8c565b610314610cce565b6103146104413660046124e9565b610d2b565b61031f60115481565b600d546103419060ff1681565b600d5461034190610100900460ff1681565b61031f61047c3660046124c7565b611195565b61031f600f5481565b61031f6111b6565b600a546103b2906001600160a01b031681565b61031f60075481565b600d546103419062010000900460ff1681565b61031f60145481565b6103146111e0565b61031f611296565b61031f60025481565b6103146104f13660046124c7565b61154a565b6103146105043660046124c7565b6115df565b61031f60065481565b61031f600e5481565b61031f6105293660046125cd565b611677565b61031f60125481565b61031f60045481565b61034161054e3660046124c7565b60156020526000908152604090205460ff1681565b6102e76105713660046126de565b611a4e565b61031f6105843660046124c7565b612039565b61031f600b5481565b600d5461034190640100000000900460ff1681565b61031f60055481565b61031f6105be3660046124c7565b61206e565b6103146105d13660046125f7565b612144565b60095461036690600160281b900463ffffffff1681565b6001546103b2906001600160a01b031681565b61031f60035481565b610314610617366004612649565b612220565b6001546001600160a01b0316331461064f5760405162461bcd60e51b8152600401610646906127b3565b60405180910390fd5b600d5460ff16806106695750600d54600160281b900460ff165b8061067657506008544210155b6107195760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c401610646565b600d54640100000000900460ff16610853576009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b03169063a9059cbb90839083906370a082319060240160206040518083038186803b15801561077e57600080fd5b505afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b691906126f7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107fc57600080fd5b505af1158015610810573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610834919061262c565b6108505760405162461bcd60e51b81526004016106469061275f565b50565b600060125460105461086591906128ad565b60055460045461087591906128ad565b61087f9190612906565b6009546040516370a0823160e01b81523060048201529192506000918391600160481b90046001600160a01b0316906370a082319060240160206040518083038186803b1580156108cf57600080fd5b505afa1580156108e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090791906126f7565b6109119190612906565b60095460405163a9059cbb60e01b81526001600160a01b03868116600483015260248201849052929350600160481b9091049091169063a9059cbb90604401602060405180830381600087803b15801561096a57600080fd5b505af115801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a2919061262c565b6109be5760405162461bcd60e51b81526004016106469061275f565b505050565b600c80546109d090612964565b80601f01602080910402602001604051908101604052809291908181526020018280546109fc90612964565b8015610a495780601f10610a1e57610100808354040283529160200191610a49565b820191906000526020600020905b815481529060010190602001808311610a2c57829003601f168201915b505050505081565b6001546001600160a01b03163314610a7b5760405162461bcd60e51b8152600401610646906127b3565b600d54600160281b900460ff1680610aaa5750600d54640100000000900460ff168015610aaa57506008544210155b610b365760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a401610646565b6000601454601354610b489190612906565b601354601455600a5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b158015610b9b57600080fd5b505af1158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd3919061262c565b5050565b6001546001600160a01b03163314610c015760405162461bcd60e51b8152600401610646906127b3565b600d5460ff16151560011415610c295760405162461bcd60e51b8152600401610646906127ea565b600d5460ff610100909104161515600114610c7f5760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b6044820152606401610646565b600d805461ff0019169055565b600b546001600160a01b0382166000908152601660205260408120549091670de0b6b3a764000091610cbe91906128e7565b610cc891906128c5565b92915050565b6001546001600160a01b03163314610cf85760405162461bcd60e51b8152600401610646906127b3565b600d5460ff1615610d1b5760405162461bcd60e51b8152600401610646906127ea565b600d805461ffff19166001179055565b600d546301000000900460ff1615610d905760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b6064820152608401610646565b600d805463ff00000019166301000000179055885189906001908110610db857610db86129d0565b60200260200101516001600160a01b031689600081518110610ddc57610ddc6129d0565b60200260200101516001600160a01b03161415610e515760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b6064820152608401610646565b87600081518110610e6457610e646129d0565b602002602001015188600181518110610e7f57610e7f6129d0565b60200260200101511015610eee5760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b6064820152608401610646565b8263ffffffff168463ffffffff161015610f705760405162461bcd60e51b815260206004820152603d60248201527f53656564466163746f72793a2076657374696e674475726174696f6e2063616e60448201527f6e6f74206265206c657373207468616e2076657374696e67436c6966660000006064820152608401610646565b858511610fe55760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d6500000000006064820152608401610646565b600080546001600160a01b03808e166001600160a01b031992831617835560018054918e16919092161790558851899190611022576110226129d0565b602002602001015160028190555087600181518110611043576110436129d0565b6020908102919091010151600355600687905560078690556008859055600e8590556009805468ffffffffffffffff00191661010063ffffffff8781169190910268ffffffff0000000000191691909117600160281b918616919091021760ff1916831515179055885189906000906110be576110be6129d0565b60200260200101516009806101000a8154816001600160a01b0302191690836001600160a01b03160217905550886001815181106110fe576110fe6129d0565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600b8190555086670de0b6b3a764000060035461114a91906128e7565b61115491906128c5565b6004819055600b54670de0b6b3a76400009161117091906128e7565b61117a91906128c5565b60058190556004546010556012555050505050505050505050565b6000670de0b6b3a7640000600b546111ac84612039565b610cbe91906128e7565b6000670de0b6b3a7640000600b546011546111d191906128e7565b6111db91906128c5565b905090565b6001546001600160a01b0316331461120a5760405162461bcd60e51b8152600401610646906127b3565b600d5460ff161561122d5760405162461bcd60e51b8152600401610646906127ea565b600d54610100900460ff16156112855760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f74206265207061757365640000000000006044820152606401610646565b600d805461ff001916610100179055565b60004260075411156112f55760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b6064820152608401610646565b600d54640100000000900460ff16156113505760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d65746044820152606401610646565b3360009081526016602052604090206001810154806113b15760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e74000000000000006044820152606401610646565b6113ba33612039565b601060008282546113cb91906128ad565b909155506113da905033611195565b601260008282546113eb91906128ad565b9091555050600f80549060006114008361294d565b91905055506000826001018190555080601360008282546114219190612906565b9091555050600a5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561147257600080fd5b505af1158015611486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114aa919061262c565b61150f5760405162461bcd60e51b815260206004820152603060248201527f536565643a2063616e6e6f742072657475726e2066756e64696e6720746f6b6560448201526f3739903a379036b9b39739b2b73232b960811b6064820152608401610646565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a292915050565b6001546001600160a01b031633146115745760405162461bcd60e51b8152600401610646906127b3565b600d5460ff16156115975760405162461bcd60e51b8152600401610646906127ea565b60095460ff1615156001146115be5760405162461bcd60e51b815260040161064690612821565b6001600160a01b03166000908152601560205260409020805460ff19169055565b6001546001600160a01b031633146116095760405162461bcd60e51b8152600401610646906127b3565b600d5460ff161561162c5760405162461bcd60e51b8152600401610646906127ea565b60095460ff1615156001146116535760405162461bcd60e51b815260040161064690612821565b6001600160a01b03166000908152601560205260409020805460ff19166001179055565b600d54600090640100000000900460ff166116e05760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b6064820152608401610646565b4260085410806116f95750600d54600160281b900460ff165b6117595760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b6064820152608401610646565b60006117648461206e565b9050600081116117b65760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c65206973203000000000006044820152606401610646565b8281101561181d5760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b6064820152608401610646565b6000670de0b6b3a7640000600b548561183691906128e7565b61184091906128c5565b6001600160a01b03861660009081526016602052604081208054929350869290919061186d9084906128ad565b92505081905550836011600082825461188691906128ad565b909155505060095460005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052600160481b909204169063a9059cbb90604401602060405180830381600087803b1580156118e257600080fd5b505af11580156118f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191a919061262c565b80156119af575060095460405163a9059cbb60e01b81526001600160a01b03878116600483015260248201879052600160481b9092049091169063a9059cbb90604401602060405180830381600087803b15801561197757600080fd5b505af115801561198b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119af919061262c565b6119fb5760405162461bcd60e51b815260206004820181905260248201527f536565643a207365656420746f6b656e207472616e73666572206661696c65646044820152606401610646565b60005460408051868152602081018490526001600160a01b03928316928816917f9bd10be98695714f5cb43cefb59ba6417808b354710acafafe05e81b26492231910160405180910390a3949350505050565b600d54600090819060ff1615611a765760405162461bcd60e51b8152600401610646906127ea565b600d54610100900460ff1615611ace5760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f74206265207061757365640000000000006044820152606401610646565b600d54600160281b900460ff1615611b285760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e6720726561636865640000006044820152606401610646565b60095460ff161580611b4957503360009081526015602052604090205460ff165b611b955760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f207269676874730000000000006044820152606401610646565b4260085410158015611ba957504260075411155b611c0b5760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b6064820152608401610646565b600d5462010000900460ff16611d1857600554600454611c2b91906128ad565b6009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b0316906370a082319060240160206040518083038186803b158015611c7457600080fd5b505afa158015611c88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cac91906126f7565b1015611d065760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b6064820152608401610646565b600d805462ff00001916620100001790555b600654600090611d30670de0b6b3a7640000866128e7565b611d3a91906128c5565b90506000670de0b6b3a7640000600b5483611d5591906128e7565b611d5f91906128c5565b600954909150610100900463ffffffff16821015611dbf5760405162461bcd60e51b815260206004820152601f60248201527f536565643a20616d6f756e745665737465645065725365636f6e64203e2030006044820152606401610646565b60035485601354611dd091906128ad565b1115611e315760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b6064820152608401610646565b8460136000828254611e4391906128ad565b925050819055508160106000828254611e5c9190612906565b925050819055508060126000828254611e759190612906565b909155505060025460135410611e9b57600d805464ff0000000019166401000000001790555b60035460135410611ec057600d805465ff00000000001916600160281b17905542600e555b33600090815260166020526040902060010154611eed57600f8054906000611ee78361299f565b91905055505b3360009081526016602052604081206001018054879290611f0f9084906128ad565b9091555050600a546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611f6657600080fd5b505af1158015611f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9e919061262c565b611ffa5760405162461bcd60e51b815260206004820152602760248201527f536565643a2066756e64696e6720746f6b656e207472616e7366657246726f6d6044820152660819985a5b195960ca1b6064820152608401610646565b60405182815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a29092509050915091565b6006546001600160a01b038216600090815260166020526040812060010154909190610cbe90670de0b6b3a7640000906128e7565b6001600160a01b0381166000908152601660205260408120600e544210156120995750600092915050565b6000600e54426120a99190612906565b600954909150600160281b900463ffffffff168110156120cd575060009392505050565b600954610100900463ffffffff1681106120fe5781546120ec85612039565b6120f69190612906565b949350505050565b600954600090610100900463ffffffff1661211886612039565b61212290846128e7565b61212c91906128c5565b835490915061213b9082612906565b95945050505050565b6001546001600160a01b0316331461216e5760405162461bcd60e51b8152600401610646906127b3565b600d5460ff16156121915760405162461bcd60e51b8152600401610646906127ea565b60095460ff1615156001146121b85760405162461bcd60e51b815260040161064690612821565b60005b8151811015610bd3576001601560008484815181106121dc576121dc6129d0565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806122188161299f565b9150506121bb565b600d546301000000900460ff161515600114158061224857506001546001600160a01b031633145b6122c55760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a401610646565b80516122d890600c90602084019061231a565b50806040516122e79190612710565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b82805461232690612964565b90600052602060002090601f016020900481019282612348576000855561238e565b82601f1061236157805160ff191683800117855561238e565b8280016001018555821561238e579182015b8281111561238e578251825591602001919060010190612373565b5061239a92915061239e565b5090565b5b8082111561239a576000815560010161239f565b80356001600160a01b03811681146123ca57600080fd5b919050565b600082601f8301126123e057600080fd5b813560206123f56123f083612889565b612858565b80838252828201915082860187848660051b890101111561241557600080fd5b60005b8581101561243b57612429826123b3565b84529284019290840190600101612418565b5090979650505050505050565b600082601f83011261245957600080fd5b813560206124696123f083612889565b80838252828201915082860187848660051b890101111561248957600080fd5b60005b8581101561243b5781358452928401929084019060010161248c565b80356123ca816129fc565b803563ffffffff811681146123ca57600080fd5b6000602082840312156124d957600080fd5b6124e2826123b3565b9392505050565b60008060008060008060008060008060006101608c8e03121561250b57600080fd5b6125148c6123b3565b9a5061252260208d016123b3565b995067ffffffffffffffff8060408e0135111561253e57600080fd5b61254e8e60408f01358f016123cf565b99508060608e0135111561256157600080fd5b506125728d60608e01358e01612448565b975060808c0135965060a08c0135955060c08c0135945061259560e08d016124b3565b93506125a46101008d016124b3565b92506125b36101208d016124a8565b91506101408c013590509295989b509295989b9093969950565b600080604083850312156125e057600080fd5b6125e9836123b3565b946020939093013593505050565b60006020828403121561260957600080fd5b813567ffffffffffffffff81111561262057600080fd5b6120f6848285016123cf565b60006020828403121561263e57600080fd5b81516124e2816129fc565b6000602080838503121561265c57600080fd5b823567ffffffffffffffff8082111561267457600080fd5b818501915085601f83011261268857600080fd5b81358181111561269a5761269a6129e6565b6126ac601f8201601f19168501612858565b915080825286848285010111156126c257600080fd5b8084840185840137600090820190930192909252509392505050565b6000602082840312156126f057600080fd5b5035919050565b60006020828403121561270957600080fd5b5051919050565b6000825161272281846020870161291d565b9190910192915050565b602081526000825180602084015261274b81604085016020870161291d565b601f01601f19169190910160400192915050565b60208082526034908201527f536565643a2073686f756c64207472616e73666572207365656420746f6b656e60408201527339903a37903932b33ab732103932b1b2b4bb32b960611b606082015260800190565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6020808252601d908201527f536565643a2073656564206973206e6f742077686974656c6973746564000000604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715612881576128816129e6565b604052919050565b600067ffffffffffffffff8211156128a3576128a36129e6565b5060051b60200190565b600082198211156128c0576128c06129ba565b500190565b6000826128e257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612901576129016129ba565b500290565b600082821015612918576129186129ba565b500390565b60005b83811015612938578181015183820152602001612920565b83811115612947576000848401525b50505050565b60008161295c5761295c6129ba565b506000190190565b600181811c9082168061297857607f821691505b6020821081141561299957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156129b3576129b36129ba565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461085057600080fdfea264697066735822122050b510a0633d8c634e38c0624d33359d09e01fd966118bbd48cd7b77ad796e6c64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102bb5760003560e01c806378e9792511610182578063bc0f5f84116100e9578063e6e36ebb116100a2578063f3640e741161007c578063f3640e74146105d6578063f851a440146105ed578063fb86a40414610600578063fc582d411461060957600080fd5b8063e6e36ebb146105a7578063ea345540146105b0578063eaa53523146105c357600080fd5b8063bc0f5f8414610537578063d936547e14610540578063d96a094a14610563578063dc4b9e3814610576578063ddca3f4314610589578063e565eb4c1461059257600080fd5b80639a5904271161013b5780639a590427146104e35780639b19251a146104f6578063a035b1fe14610509578063a8660a7814610512578063aad3ec961461051b578063b774682f1461052e57600080fd5b806378e97925146104a55780637c654303146104ae57806383d59e00146104c15780638456cb59146104ca5780638a2448aa146104d2578063906a26e0146104da57600080fd5b80633dba9e4111610226578063597e1fb5116101df578063597e1fb51461044f5780635c975abb1461045c5780635d85ac0d1461046e5780635e9777e81461048157806371f4b8e81461048a57806378065f271461049257600080fd5b80633dba9e41146104035780633f4ba83a14610410578063430e99a41461041857806343d726d61461042b57806344f9abb81461043357806347d02f1b1461044657600080fd5b80631cfe562e116102785780631cfe562e1461038f578063311f8483146103985780633197cbb6146103ca57806338af3eed146103d3578063392f37e9146103e65780633ccfd60b146103fb57600080fd5b8063031b3677146102c057806303aabe31146103015780630826d2c714610316578063117a36d11461032d5780631514617e14610351578063158ef93e1461037b575b600080fd5b6102e76102ce3660046124c7565b6016602052600090815260409020805460019091015482565b604080519283526020830191909152015b60405180910390f35b61031461030f3660046124c7565b61061c565b005b61031f60105481565b6040519081526020016102f8565b600d5461034190600160281b900460ff1681565b60405190151581526020016102f8565b60095461036690610100900463ffffffff1681565b60405163ffffffff90911681526020016102f8565b600d54610341906301000000900460ff1681565b61031f60135481565b6009546103b290600160481b90046001600160a01b031681565b6040516001600160a01b0390911681526020016102f8565b61031f60085481565b6000546103b2906001600160a01b031681565b6103ee6109c3565b6040516102f8919061272c565b610314610a51565b6009546103419060ff1681565b610314610bd7565b61031f6104263660046124c7565b610c8c565b610314610cce565b6103146104413660046124e9565b610d2b565b61031f60115481565b600d546103419060ff1681565b600d5461034190610100900460ff1681565b61031f61047c3660046124c7565b611195565b61031f600f5481565b61031f6111b6565b600a546103b2906001600160a01b031681565b61031f60075481565b600d546103419062010000900460ff1681565b61031f60145481565b6103146111e0565b61031f611296565b61031f60025481565b6103146104f13660046124c7565b61154a565b6103146105043660046124c7565b6115df565b61031f60065481565b61031f600e5481565b61031f6105293660046125cd565b611677565b61031f60125481565b61031f60045481565b61034161054e3660046124c7565b60156020526000908152604090205460ff1681565b6102e76105713660046126de565b611a4e565b61031f6105843660046124c7565b612039565b61031f600b5481565b600d5461034190640100000000900460ff1681565b61031f60055481565b61031f6105be3660046124c7565b61206e565b6103146105d13660046125f7565b612144565b60095461036690600160281b900463ffffffff1681565b6001546103b2906001600160a01b031681565b61031f60035481565b610314610617366004612649565b612220565b6001546001600160a01b0316331461064f5760405162461bcd60e51b8152600401610646906127b3565b60405180910390fd5b600d5460ff16806106695750600d54600160281b900460ff165b8061067657506008544210155b6107195760405162461bcd60e51b815260206004820152606260248201527f536565643a20546865206162696c69747920746f20627579207365656420746f60448201527f6b656e73206d757374206861766520656e646564206265666f72652072656d6160648201527f696e696e67207365656420746f6b656e732063616e20626520776974686472616084820152613bb760f11b60a482015260c401610646565b600d54640100000000900460ff16610853576009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b03169063a9059cbb90839083906370a082319060240160206040518083038186803b15801561077e57600080fd5b505afa158015610792573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b691906126f7565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107fc57600080fd5b505af1158015610810573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610834919061262c565b6108505760405162461bcd60e51b81526004016106469061275f565b50565b600060125460105461086591906128ad565b60055460045461087591906128ad565b61087f9190612906565b6009546040516370a0823160e01b81523060048201529192506000918391600160481b90046001600160a01b0316906370a082319060240160206040518083038186803b1580156108cf57600080fd5b505afa1580156108e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090791906126f7565b6109119190612906565b60095460405163a9059cbb60e01b81526001600160a01b03868116600483015260248201849052929350600160481b9091049091169063a9059cbb90604401602060405180830381600087803b15801561096a57600080fd5b505af115801561097e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a2919061262c565b6109be5760405162461bcd60e51b81526004016106469061275f565b505050565b600c80546109d090612964565b80601f01602080910402602001604051908101604052809291908181526020018280546109fc90612964565b8015610a495780601f10610a1e57610100808354040283529160200191610a49565b820191906000526020600020905b815481529060010190602001808311610a2c57829003601f168201915b505050505081565b6001546001600160a01b03163314610a7b5760405162461bcd60e51b8152600401610646906127b3565b600d54600160281b900460ff1680610aaa5750600d54640100000000900460ff168015610aaa57506008544210155b610b365760405162461bcd60e51b815260206004820152605160248201527f536565643a2063616e6e6f74207769746864726177207768696c652066756e6460448201527f696e6720746f6b656e732063616e207374696c6c2062652077697468647261776064820152706e20627920636f6e7472696275746f727360781b608482015260a401610646565b6000601454601354610b489190612906565b601354601455600a5460405163a9059cbb60e01b8152336004820152602481018390529192506001600160a01b03169063a9059cbb90604401602060405180830381600087803b158015610b9b57600080fd5b505af1158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd3919061262c565b5050565b6001546001600160a01b03163314610c015760405162461bcd60e51b8152600401610646906127b3565b600d5460ff16151560011415610c295760405162461bcd60e51b8152600401610646906127ea565b600d5460ff610100909104161515600114610c7f5760405162461bcd60e51b815260206004820152601660248201527514d959590e881cda1bdd5b19081899481c185d5cd95960521b6044820152606401610646565b600d805461ff0019169055565b600b546001600160a01b0382166000908152601660205260408120549091670de0b6b3a764000091610cbe91906128e7565b610cc891906128c5565b92915050565b6001546001600160a01b03163314610cf85760405162461bcd60e51b8152600401610646906127b3565b600d5460ff1615610d1b5760405162461bcd60e51b8152600401610646906127ea565b600d805461ffff19166001179055565b600d546301000000900460ff1615610d905760405162461bcd60e51b815260206004820152602260248201527f536565643a20636f6e747261637420616c726561647920696e697469616c697a604482015261195960f21b6064820152608401610646565b600d805463ff00000019166301000000179055885189906001908110610db857610db86129d0565b60200260200101516001600160a01b031689600081518110610ddc57610ddc6129d0565b60200260200101516001600160a01b03161415610e515760405162461bcd60e51b815260206004820152602d60248201527f53656564466163746f72793a2073656564546f6b656e2063616e6e6f7420626560448201526c10333ab73234b733aa37b5b2b760991b6064820152608401610646565b87600081518110610e6457610e646129d0565b602002602001015188600181518110610e7f57610e7f6129d0565b60200260200101511015610eee5760405162461bcd60e51b815260206004820152603060248201527f53656564466163746f72793a20686172644361702063616e6e6f74206265206c60448201526f0657373207468616e20736f66744361760841b6064820152608401610646565b8263ffffffff168463ffffffff161015610f705760405162461bcd60e51b815260206004820152603d60248201527f53656564466163746f72793a2076657374696e674475726174696f6e2063616e60448201527f6e6f74206265206c657373207468616e2076657374696e67436c6966660000006064820152608401610646565b858511610fe55760405162461bcd60e51b815260206004820152603b60248201527f53656564466163746f72793a20656e6454696d652063616e6e6f74206265206c60448201527f657373207468616e20657175616c20746f20737461727454696d6500000000006064820152608401610646565b600080546001600160a01b03808e166001600160a01b031992831617835560018054918e16919092161790558851899190611022576110226129d0565b602002602001015160028190555087600181518110611043576110436129d0565b6020908102919091010151600355600687905560078690556008859055600e8590556009805468ffffffffffffffff00191661010063ffffffff8781169190910268ffffffff0000000000191691909117600160281b918616919091021760ff1916831515179055885189906000906110be576110be6129d0565b60200260200101516009806101000a8154816001600160a01b0302191690836001600160a01b03160217905550886001815181106110fe576110fe6129d0565b6020026020010151600a60006101000a8154816001600160a01b0302191690836001600160a01b0316021790555080600b8190555086670de0b6b3a764000060035461114a91906128e7565b61115491906128c5565b6004819055600b54670de0b6b3a76400009161117091906128e7565b61117a91906128c5565b60058190556004546010556012555050505050505050505050565b6000670de0b6b3a7640000600b546111ac84612039565b610cbe91906128e7565b6000670de0b6b3a7640000600b546011546111d191906128e7565b6111db91906128c5565b905090565b6001546001600160a01b0316331461120a5760405162461bcd60e51b8152600401610646906127b3565b600d5460ff161561122d5760405162461bcd60e51b8152600401610646906127ea565b600d54610100900460ff16156112855760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f74206265207061757365640000000000006044820152606401610646565b600d805461ff001916610100179055565b60004260075411156112f55760405162461bcd60e51b815260206004820152602260248201527f536565643a20646973747269627574696f6e20686176656e2774207374617274604482015261195960f21b6064820152608401610646565b600d54640100000000900460ff16156113505760405162461bcd60e51b815260206004820181905260248201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206d65746044820152606401610646565b3360009081526016602052604090206001810154806113b15760405162461bcd60e51b815260206004820152601960248201527f536565643a207a65726f2066756e64696e6720616d6f756e74000000000000006044820152606401610646565b6113ba33612039565b601060008282546113cb91906128ad565b909155506113da905033611195565b601260008282546113eb91906128ad565b9091555050600f80549060006114008361294d565b91905055506000826001018190555080601360008282546114219190612906565b9091555050600a5460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b15801561147257600080fd5b505af1158015611486573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114aa919061262c565b61150f5760405162461bcd60e51b815260206004820152603060248201527f536565643a2063616e6e6f742072657475726e2066756e64696e6720746f6b6560448201526f3739903a379036b9b39739b2b73232b960811b6064820152608401610646565b60405181815233907f1a689b1a62e3bb77f9c98d8759c04f341a67deb5cc63cf53be8324b6910649509060200160405180910390a292915050565b6001546001600160a01b031633146115745760405162461bcd60e51b8152600401610646906127b3565b600d5460ff16156115975760405162461bcd60e51b8152600401610646906127ea565b60095460ff1615156001146115be5760405162461bcd60e51b815260040161064690612821565b6001600160a01b03166000908152601560205260409020805460ff19169055565b6001546001600160a01b031633146116095760405162461bcd60e51b8152600401610646906127b3565b600d5460ff161561162c5760405162461bcd60e51b8152600401610646906127ea565b60095460ff1615156001146116535760405162461bcd60e51b815260040161064690612821565b6001600160a01b03166000908152601560205260409020805460ff19166001179055565b600d54600090640100000000900460ff166116e05760405162461bcd60e51b8152602060048201526024808201527f536565643a206d696e696d756d2066756e64696e6720616d6f756e74206e6f74604482015263081b595d60e21b6064820152608401610646565b4260085410806116f95750600d54600160281b900460ff165b6117595760405162461bcd60e51b815260206004820152602b60248201527f536565643a2074686520646973747269627574696f6e20686173206e6f74207960448201526a195d08199a5b9a5cda195960aa1b6064820152608401610646565b60006117648461206e565b9050600081116117b65760405162461bcd60e51b815260206004820152601b60248201527f536565643a20616d6f756e7420636c61696d61626c65206973203000000000006044820152606401610646565b8281101561181d5760405162461bcd60e51b815260206004820152602e60248201527f536565643a20726571756573742069732067726561746572207468616e20636c60448201526d185a5b58589b1948185b5bdd5b9d60921b6064820152608401610646565b6000670de0b6b3a7640000600b548561183691906128e7565b61184091906128c5565b6001600160a01b03861660009081526016602052604081208054929350869290919061186d9084906128ad565b92505081905550836011600082825461188691906128ad565b909155505060095460005460405163a9059cbb60e01b81526001600160a01b03918216600482015260248101849052600160481b909204169063a9059cbb90604401602060405180830381600087803b1580156118e257600080fd5b505af11580156118f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191a919061262c565b80156119af575060095460405163a9059cbb60e01b81526001600160a01b03878116600483015260248201879052600160481b9092049091169063a9059cbb90604401602060405180830381600087803b15801561197757600080fd5b505af115801561198b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119af919061262c565b6119fb5760405162461bcd60e51b815260206004820181905260248201527f536565643a207365656420746f6b656e207472616e73666572206661696c65646044820152606401610646565b60005460408051868152602081018490526001600160a01b03928316928816917f9bd10be98695714f5cb43cefb59ba6417808b354710acafafe05e81b26492231910160405180910390a3949350505050565b600d54600090819060ff1615611a765760405162461bcd60e51b8152600401610646906127ea565b600d54610100900460ff1615611ace5760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073686f756c64206e6f74206265207061757365640000000000006044820152606401610646565b600d54600160281b900460ff1615611b285760405162461bcd60e51b815260206004820152601d60248201527f536565643a206d6178696d756d2066756e64696e6720726561636865640000006044820152606401610646565b60095460ff161580611b4957503360009081526015602052604090205460ff165b611b955760405162461bcd60e51b815260206004820152601a60248201527f536565643a2073656e64657220686173206e6f207269676874730000000000006044820152606401610646565b4260085410158015611ba957504260075411155b611c0b5760405162461bcd60e51b815260206004820152602d60248201527f536565643a206f6e6c7920616c6c6f77656420647572696e672064697374726960448201526c189d5d1a5bdb881c195c9a5bd9609a1b6064820152608401610646565b600d5462010000900460ff16611d1857600554600454611c2b91906128ad565b6009546040516370a0823160e01b8152306004820152600160481b9091046001600160a01b0316906370a082319060240160206040518083038186803b158015611c7457600080fd5b505afa158015611c88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cac91906126f7565b1015611d065760405162461bcd60e51b815260206004820152602360248201527f536565643a2073756666696369656e74207365656473206e6f742070726f766960448201526219195960ea1b6064820152608401610646565b600d805462ff00001916620100001790555b600654600090611d30670de0b6b3a7640000866128e7565b611d3a91906128c5565b90506000670de0b6b3a7640000600b5483611d5591906128e7565b611d5f91906128c5565b600954909150610100900463ffffffff16821015611dbf5760405162461bcd60e51b815260206004820152601f60248201527f536565643a20616d6f756e745665737465645065725365636f6e64203e2030006044820152606401610646565b60035485601354611dd091906128ad565b1115611e315760405162461bcd60e51b815260206004820152602a60248201527f536565643a20616d6f756e74206578636565647320636f6e747261637420736160448201526906c6520686172644361760b41b6064820152608401610646565b8460136000828254611e4391906128ad565b925050819055508160106000828254611e5c9190612906565b925050819055508060126000828254611e759190612906565b909155505060025460135410611e9b57600d805464ff0000000019166401000000001790555b60035460135410611ec057600d805465ff00000000001916600160281b17905542600e555b33600090815260166020526040902060010154611eed57600f8054906000611ee78361299f565b91905055505b3360009081526016602052604081206001018054879290611f0f9084906128ad565b9091555050600a546040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b03909116906323b872dd90606401602060405180830381600087803b158015611f6657600080fd5b505af1158015611f7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f9e919061262c565b611ffa5760405162461bcd60e51b815260206004820152602760248201527f536565643a2066756e64696e6720746f6b656e207472616e7366657246726f6d6044820152660819985a5b195960ca1b6064820152608401610646565b60405182815233907fcf5ef2b227e797b567f0df4c49cc8b6207cfb60054eb899e5608de08e5dcb1ef9060200160405180910390a29092509050915091565b6006546001600160a01b038216600090815260166020526040812060010154909190610cbe90670de0b6b3a7640000906128e7565b6001600160a01b0381166000908152601660205260408120600e544210156120995750600092915050565b6000600e54426120a99190612906565b600954909150600160281b900463ffffffff168110156120cd575060009392505050565b600954610100900463ffffffff1681106120fe5781546120ec85612039565b6120f69190612906565b949350505050565b600954600090610100900463ffffffff1661211886612039565b61212290846128e7565b61212c91906128c5565b835490915061213b9082612906565b95945050505050565b6001546001600160a01b0316331461216e5760405162461bcd60e51b8152600401610646906127b3565b600d5460ff16156121915760405162461bcd60e51b8152600401610646906127ea565b60095460ff1615156001146121b85760405162461bcd60e51b815260040161064690612821565b60005b8151811015610bd3576001601560008484815181106121dc576121dc6129d0565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806122188161299f565b9150506121bb565b600d546301000000900460ff161515600114158061224857506001546001600160a01b031633145b6122c55760405162461bcd60e51b815260206004820152604260248201527f536565643a20636f6e74726163742073686f756c64206e6f7420626520696e6960448201527f7469616c697a6564206f722063616c6c65722073686f756c642062652061646d60648201526134b760f11b608482015260a401610646565b80516122d890600c90602084019061231a565b50806040516122e79190612710565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b82805461232690612964565b90600052602060002090601f016020900481019282612348576000855561238e565b82601f1061236157805160ff191683800117855561238e565b8280016001018555821561238e579182015b8281111561238e578251825591602001919060010190612373565b5061239a92915061239e565b5090565b5b8082111561239a576000815560010161239f565b80356001600160a01b03811681146123ca57600080fd5b919050565b600082601f8301126123e057600080fd5b813560206123f56123f083612889565b612858565b80838252828201915082860187848660051b890101111561241557600080fd5b60005b8581101561243b57612429826123b3565b84529284019290840190600101612418565b5090979650505050505050565b600082601f83011261245957600080fd5b813560206124696123f083612889565b80838252828201915082860187848660051b890101111561248957600080fd5b60005b8581101561243b5781358452928401929084019060010161248c565b80356123ca816129fc565b803563ffffffff811681146123ca57600080fd5b6000602082840312156124d957600080fd5b6124e2826123b3565b9392505050565b60008060008060008060008060008060006101608c8e03121561250b57600080fd5b6125148c6123b3565b9a5061252260208d016123b3565b995067ffffffffffffffff8060408e0135111561253e57600080fd5b61254e8e60408f01358f016123cf565b99508060608e0135111561256157600080fd5b506125728d60608e01358e01612448565b975060808c0135965060a08c0135955060c08c0135945061259560e08d016124b3565b93506125a46101008d016124b3565b92506125b36101208d016124a8565b91506101408c013590509295989b509295989b9093969950565b600080604083850312156125e057600080fd5b6125e9836123b3565b946020939093013593505050565b60006020828403121561260957600080fd5b813567ffffffffffffffff81111561262057600080fd5b6120f6848285016123cf565b60006020828403121561263e57600080fd5b81516124e2816129fc565b6000602080838503121561265c57600080fd5b823567ffffffffffffffff8082111561267457600080fd5b818501915085601f83011261268857600080fd5b81358181111561269a5761269a6129e6565b6126ac601f8201601f19168501612858565b915080825286848285010111156126c257600080fd5b8084840185840137600090820190930192909252509392505050565b6000602082840312156126f057600080fd5b5035919050565b60006020828403121561270957600080fd5b5051919050565b6000825161272281846020870161291d565b9190910192915050565b602081526000825180602084015261274b81604085016020870161291d565b601f01601f19169190910160400192915050565b60208082526034908201527f536565643a2073686f756c64207472616e73666572207365656420746f6b656e60408201527339903a37903932b33ab732103932b1b2b4bb32b960611b606082015260800190565b6020808252601c908201527f536565643a2063616c6c65722073686f756c642062652061646d696e00000000604082015260600190565b6020808252601a908201527f536565643a2073686f756c64206e6f7420626520636c6f736564000000000000604082015260600190565b6020808252601d908201527f536565643a2073656564206973206e6f742077686974656c6973746564000000604082015260600190565b604051601f8201601f1916810167ffffffffffffffff81118282101715612881576128816129e6565b604052919050565b600067ffffffffffffffff8211156128a3576128a36129e6565b5060051b60200190565b600082198211156128c0576128c06129ba565b500190565b6000826128e257634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615612901576129016129ba565b500290565b600082821015612918576129186129ba565b500390565b60005b83811015612938578181015183820152602001612920565b83811115612947576000848401525b50505050565b60008161295c5761295c6129ba565b506000190190565b600181811c9082168061297857607f821691505b6020821081141561299957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156129b3576129b36129ba565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b801515811461085057600080fdfea264697066735822122050b510a0633d8c634e38c0624d33359d09e01fd966118bbd48cd7b77ad796e6c64736f6c63430008060033",
  "devdoc": {
    "details": "Smart contract for seed phases of liquid launch.",
    "kind": "dev",
    "methods": {
      "buy(uint256)": {
        "details": "Buy seed tokens.",
        "params": {
          "_fundingAmount": "The amount of funding tokens to contribute."
        }
      },
      "calculateClaim(address)": {
        "details": "Calculates the maximum claim",
        "params": {
          "_funder": "Address of funder to find the maximum claim"
        }
      },
      "claim(address,uint256)": {
        "details": "Claim vested seed tokens.",
        "params": {
          "_claimAmount": "The amount of seed token a users wants to claim.",
          "_funder": "Address of funder to calculate seconds and amount claimable"
        }
      },
      "close()": {
        "details": "Shut down contributions (buying). Supersedes the normal logic that eventually shuts down buying anyway. Also shuts down the admin's ability to alter the whitelist."
      },
      "feeClaimed()": {
        "details": "Amount of seed tokens claimed as fee"
      },
      "feeClaimedForFunder(address)": {
        "details": "get fee claimed for funder",
        "params": {
          "_funder": "address of funder to check fee claimed"
        }
      },
      "feeForFunder(address)": {
        "details": "get fee for funder",
        "params": {
          "_funder": "address of funder to check fee"
        }
      },
      "initialize(address,address,address[],uint256[],uint256,uint256,uint256,uint32,uint32,bool,uint256)": {
        "details": "Initialize Seed.",
        "params": {
          "_admin": "The address of the admin of this contract. Funds contract and has permissions to whitelist users, pause and close contract.",
          "_beneficiary": "The address that recieves fees.",
          "_endTime": "Distribution end time in unix timecode.",
          "_fee": "Success fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)",
          "_permissionedSeed": "Set to true if only whitelisted adresses are allowed to participate.",
          "_price": "price of a SeedToken, expressed in fundingTokens, with precision of 10**18",
          "_softHardThresholds": "Array containing two params: - the minimum funding token collection threshold in wei denomination. - the highest possible funding token amount to be raised in wei denomination.",
          "_startTime": "Distribution start time in unix timecode.",
          "_tokens": "Array containing two params: - The address of the seed token being distributed.                                 - The address of the funding token being exchanged for seed token.",
          "_vestingCliff": "Cliff duration in seconds.",
          "_vestingDuration": "Vesting period duration in seconds."
        }
      },
      "pause()": {
        "details": "Pause distribution."
      },
      "retrieveFundingTokens()": {
        "details": "Returns funding tokens to user."
      },
      "retrieveSeedTokens(address)": {
        "details": "retrieve remaining seed tokens back to project.",
        "params": {
          "_refundReceiver": "refund receiver address"
        }
      },
      "seedAmountForFunder(address)": {
        "details": "get seed amount for funder",
        "params": {
          "_funder": "address of funder to seed amount"
        }
      },
      "unpause()": {
        "details": "Unpause distribution."
      },
      "unwhitelist(address)": {
        "details": "Remove address from whitelist.",
        "params": {
          "buyer": "Address which needs to be unwhitelisted"
        }
      },
      "updateMetadata(bytes)": {
        "details": "Updates metadata.",
        "params": {
          "_metadata": "Seed contract metadata, that is IPFS Hash"
        }
      },
      "whitelist(address)": {
        "details": "Add address to whitelist.",
        "params": {
          "_buyer": "Address which needs to be whitelisted"
        }
      },
      "whitelistBatch(address[])": {
        "details": "Add multiple addresses to whitelist.",
        "params": {
          "_buyers": "Array of addresses to whitelist addresses in batch"
        }
      },
      "withdraw()": {
        "details": "Withdraw funds from the contract"
      }
    },
    "title": "PrimeDAO Seed contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "beneficiary",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "admin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 9,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "softCap",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 11,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "hardCap",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 13,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedAmountRequired",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 15,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeAmountRequired",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 17,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "price",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 19,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "startTime",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 21,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "endTime",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 23,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "permissionedSeed",
        "offset": 0,
        "slot": "9",
        "type": "t_bool"
      },
      {
        "astId": 25,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingDuration",
        "offset": 1,
        "slot": "9",
        "type": "t_uint32"
      },
      {
        "astId": 27,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingCliff",
        "offset": 5,
        "slot": "9",
        "type": "t_uint32"
      },
      {
        "astId": 30,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedToken",
        "offset": 9,
        "slot": "9",
        "type": "t_contract(IERC20)10402"
      },
      {
        "astId": 33,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingToken",
        "offset": 0,
        "slot": "10",
        "type": "t_contract(IERC20)10402"
      },
      {
        "astId": 35,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fee",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 37,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "metadata",
        "offset": 0,
        "slot": "12",
        "type": "t_bytes_storage"
      },
      {
        "astId": 44,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "closed",
        "offset": 0,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 46,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "paused",
        "offset": 1,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 48,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "isFunded",
        "offset": 2,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 50,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "initialized",
        "offset": 3,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 52,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "minimumReached",
        "offset": 4,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 54,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "maximumReached",
        "offset": 5,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 56,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "vestingStartTime",
        "offset": 0,
        "slot": "14",
        "type": "t_uint256"
      },
      {
        "astId": 58,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "totalFunderCount",
        "offset": 0,
        "slot": "15",
        "type": "t_uint256"
      },
      {
        "astId": 60,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedRemainder",
        "offset": 0,
        "slot": "16",
        "type": "t_uint256"
      },
      {
        "astId": 62,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "seedClaimed",
        "offset": 0,
        "slot": "17",
        "type": "t_uint256"
      },
      {
        "astId": 64,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "feeRemainder",
        "offset": 0,
        "slot": "18",
        "type": "t_uint256"
      },
      {
        "astId": 66,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingCollected",
        "offset": 0,
        "slot": "19",
        "type": "t_uint256"
      },
      {
        "astId": 68,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "fundingWithdrawn",
        "offset": 0,
        "slot": "20",
        "type": "t_uint256"
      },
      {
        "astId": 72,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "whitelisted",
        "offset": 0,
        "slot": "21",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 77,
        "contract": "contracts/seed/Seed.sol:Seed",
        "label": "funders",
        "offset": 0,
        "slot": "22",
        "type": "t_mapping(t_address,t_struct(FunderPortfolio)108_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)10402": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_struct(FunderPortfolio)108_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Seed.FunderPortfolio)",
        "numberOfBytes": "32",
        "value": "t_struct(FunderPortfolio)108_storage"
      },
      "t_struct(FunderPortfolio)108_storage": {
        "encoding": "inplace",
        "label": "struct Seed.FunderPortfolio",
        "members": [
          {
            "astId": 105,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "totalClaimed",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 107,
            "contract": "contracts/seed/Seed.sol:Seed",
            "label": "fundingAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}