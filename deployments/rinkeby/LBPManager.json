{
  "address": "0xBfF6938b2A6a8ca827990688d9DDFdf7B65B7744",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FeeTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "LBPManagerAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "metadata",
          "type": "bytes"
        }
      ],
      "name": "MetadataUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "LbpAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PoolTokensWithdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LBPFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "amounts",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "endWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "initializeLBP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_LBPFactory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_beneficiary",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "_tokenList",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_startWeights",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_startTimeEndTime",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_endWeights",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_fees",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "initializeLBPManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lbp",
      "outputs": [
        {
          "internalType": "contract ILBP",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "metadata",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolFunded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectTokenIndex",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectTokensRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "projectTokenAmounts",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_swapEnabled",
          "type": "bool"
        }
      ],
      "name": "setSwapEnabled",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "startTimeEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "startWeights",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapFeePercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenList",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "transferAdminRights",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_metadata",
          "type": "bytes"
        }
      ],
      "name": "updateMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        }
      ],
      "name": "withdrawPoolTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf747455e4f9aeda5bda9583023867adc39c44d27f31cb2307516135099f327cb",
  "receipt": {
    "to": null,
    "from": "0x9cA70B93CaE5576645F5F069524A9B9c3aef5006",
    "contractAddress": "0xBfF6938b2A6a8ca827990688d9DDFdf7B65B7744",
    "transactionIndex": 27,
    "gasUsed": "2380698",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x9dc1d431c76e6b5781307ab7da977ae7bd52d38b91d7e3858f43be3bdaccaa9b",
    "transactionHash": "0xf747455e4f9aeda5bda9583023867adc39c44d27f31cb2307516135099f327cb",
    "logs": [],
    "blockNumber": 9470834,
    "cumulativeGasUsed": "6151486",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "4c316081e4615a90f6ee04b96c3296ef",
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeeTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"LBPManagerAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"name\":\"MetadataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"LbpAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PoolTokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LBPFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"endWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"initializeLBP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_LBPFactory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"_tokenList\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_startWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_startTimeEndTime\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_endWeights\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_fees\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"initializeLBPManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lbp\",\"outputs\":[{\"internalType\":\"contract ILBP\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"metadata\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolFunded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectTokenIndex\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectTokensRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"projectTokenAmounts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_swapEnabled\",\"type\":\"bool\"}],\"name\":\"setSwapEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"startTimeEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"startWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenList\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"transferAdminRights\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_metadata\",\"type\":\"bytes\"}],\"name\":\"updateMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"}],\"name\":\"withdrawPoolTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for managing interactions with a Balancer LBP.\",\"kind\":\"dev\",\"methods\":{\"initializeLBP(address)\":{\"details\":\"Subtracts the fee, deploys the LBP and adds liquidity to it.\",\"params\":{\"_sender\":\"Address of the liquidity provider.\"}},\"initializeLBPManager(address,address,string,string,address[],uint256[],uint256[],uint256[],uint256[],uint256[],bytes)\":{\"details\":\"Initialize LBPManager.\",\"params\":{\"_LBPFactory\":\"LBP factory address.\",\"_amounts\":\"Array containing two parameters in order of: 1. The amounts of project token to be added as liquidity to the LBP. 2. The amounts of funding token to be added as liquidity to the LBP.\",\"_beneficiary\":\"The address that receives the feePercentage.\",\"_endWeights\":\"Array containing two parametes in order of: 1. The end weight for the project token in the LBP. 2. The end weight for the funding token in the LBP.\",\"_fees\":\"Array containing two parameters in order of: 1. Percentage of fee paid for every swap in the LBP. 2. Percentage of fee paid to the _beneficiary for providing the service of the LBP Manager.\",\"_metadata\":\"IPFS Hash of the LBP creation wizard information.\",\"_name\":\"Name of the LBP.\",\"_startTimeEndTime\":\"Array containing two parameters in order of: 1. Start time for the LBP. 2. End time for the LBP.\",\"_startWeights\":\"Array containing two parametes in order of: 1. The start weight for the project token in the LBP. 2. The start weight for the funding token in the LBP.\",\"_symbol\":\"Symbol of the LBP.\",\"_tokenList\":\"Array containing two addresses in order of: 1. The address of the project token being distributed. 2. The address of the funding token being exchanged for the project token.\"}},\"projectTokensRequired()\":{\"details\":\"Get required amount of project tokens to cover for fees and the actual LBP.\"},\"removeLiquidity(address)\":{\"details\":\"Exit pool or remove liquidity from pool.\",\"params\":{\"_receiver\":\"Address of the liquidity receiver, after exiting the LBP.\"}},\"setSwapEnabled(bool)\":{\"details\":\"Can pause/unpause trading.\",\"params\":{\"_swapEnabled\":\"Enables/disables swapping.\"}},\"transferAdminRights(address)\":{\"details\":\"Transfer admin rights.\",\"params\":{\"_newAdmin\":\"Address of the new admin.\"}},\"updateMetadata(bytes)\":{\"details\":\"Updates metadata.\",\"params\":{\"_metadata\":\"LBP wizard contract metadata, that is an IPFS Hash.\"}},\"withdrawPoolTokens(address)\":{\"details\":\"Withdraw pool tokens if available.\",\"params\":{\"_receiver\":\"Address of the BPT tokens receiver.\"}}},\"title\":\"LBPManager contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lbp/LBPManager.sol\":\"LBPManager\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lbp/LBPManager.sol\":{\"content\":\"/*\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n// solium-disable linebreak-style\\npragma solidity 0.8.6;\\n\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\\\";\\nimport \\\"../utils/interface/ILBPFactory.sol\\\";\\nimport \\\"../utils/interface/IVault.sol\\\";\\nimport \\\"../utils/interface/ILBP.sol\\\";\\n\\n/**\\n * @title LBPManager contract.\\n * @dev   Smart contract for managing interactions with a Balancer LBP.\\n */\\ncontract LBPManager {\\n    // Constants\\n    uint256 private constant HUNDRED_PERCENT = 10e18; // Used in calculating the fee.\\n\\n    // Locked parameter\\n    string public symbol; // Symbol of the LBP.\\n    string public name; // Name of the LBP.\\n    address public admin; // Address of the admin of this contract.\\n    address public beneficiary; // Address that recieves fees.\\n    uint256 public feePercentage; // Fee expressed as a % (e.g. 10**18 = 100% fee, toWei('1') = 100%)\\n    uint256 public swapFeePercentage; // Percentage of fee paid for every swap in the LBP.\\n    IERC20[] public tokenList; // Tokens that are used in the LBP, sorted by address in numerical order (ascending).\\n    uint256[] public amounts; // Amount of tokens to be added as liquidity in LBP.\\n    uint256[] public startWeights; // Array containing the startWeights for the project & funding token.\\n    uint256[] public endWeights; // Array containing the endWeights for the project & funding token.\\n    uint256[] public startTimeEndTime; // Array containing the startTime and endTime for the LBP.\\n    ILBP public lbp; // Address of LBP that is managed by this contract.\\n    bytes public metadata; // IPFS Hash of the LBP creation wizard information.\\n    uint8 public projectTokenIndex; // Index repesenting the project token in the tokenList.\\n    address public LBPFactory; // Address of Balancers LBP factory.\\n\\n    // Contract logic\\n    bool public poolFunded; // true:- LBP is funded; false:- LBP is not funded.\\n    bool public initialized; // true:- LBPManager initialized; false:- LBPManager not initialized. Makes sure, only initialized once.\\n\\n    event LBPManagerAdminChanged(\\n        address indexed oldAdmin,\\n        address indexed newAdmin\\n    );\\n    event FeeTransferred(\\n        address indexed beneficiary,\\n        address tokenAddress,\\n        uint256 amount\\n    );\\n    event PoolTokensWithdrawn(address indexed LbpAddress, uint256 amount);\\n    event MetadataUpdated(bytes indexed metadata);\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"LBPManager: caller is not admin\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev                             Transfer admin rights.\\n     * @param _newAdmin                 Address of the new admin.\\n     */\\n    function transferAdminRights(address _newAdmin) external onlyAdmin {\\n        require(_newAdmin != address(0), \\\"LBPManager: new admin is zero\\\");\\n\\n        emit LBPManagerAdminChanged(admin, _newAdmin);\\n        admin = _newAdmin;\\n    }\\n\\n    /**\\n     * @dev                             Initialize LBPManager.\\n     * @param _LBPFactory               LBP factory address.\\n     * @param _beneficiary              The address that receives the feePercentage.\\n     * @param _name                     Name of the LBP.\\n     * @param _symbol                   Symbol of the LBP.\\n     * @param _tokenList                Array containing two addresses in order of:\\n                                            1. The address of the project token being distributed.\\n                                            2. The address of the funding token being exchanged for the project token.\\n     * @param _amounts                  Array containing two parameters in order of:\\n                                            1. The amounts of project token to be added as liquidity to the LBP.\\n                                            2. The amounts of funding token to be added as liquidity to the LBP.\\n     * @param _startWeights             Array containing two parametes in order of:\\n                                            1. The start weight for the project token in the LBP.\\n                                            2. The start weight for the funding token in the LBP.\\n     * @param _startTimeEndTime         Array containing two parameters in order of:\\n                                            1. Start time for the LBP.\\n                                            2. End time for the LBP.\\n     * @param _endWeights               Array containing two parametes in order of:\\n                                            1. The end weight for the project token in the LBP.\\n                                            2. The end weight for the funding token in the LBP.\\n    * @param _fees                      Array containing two parameters in order of:\\n                                            1. Percentage of fee paid for every swap in the LBP.\\n                                            2. Percentage of fee paid to the _beneficiary for providing the service of the LBP Manager.\\n     * @param _metadata                 IPFS Hash of the LBP creation wizard information.\\n     */\\n    function initializeLBPManager(\\n        address _LBPFactory,\\n        address _beneficiary,\\n        string memory _name,\\n        string memory _symbol,\\n        IERC20[] memory _tokenList,\\n        uint256[] memory _amounts,\\n        uint256[] memory _startWeights,\\n        uint256[] memory _startTimeEndTime,\\n        uint256[] memory _endWeights,\\n        uint256[] memory _fees,\\n        bytes memory _metadata\\n    ) external {\\n        require(!initialized, \\\"LBPManager: already initialized\\\");\\n        require(_beneficiary != address(0), \\\"LBPManager: _beneficiary is zero\\\");\\n        require(_fees[0] >= 1e12, \\\"LBPManager: swapFeePercentage to low\\\"); // 0.0001%\\n        require(_fees[0] <= 1e17, \\\"LBPManager: swapFeePercentage to high\\\"); // 10%\\n        require(_tokenList.length == 2, \\\"LBPManager: tokenList wrong size\\\");\\n        require(\\n            _tokenList[0] != _tokenList[1],\\n            \\\"LBPManager: both tokens cannot be same\\\"\\n        );\\n\\n        initialized = true;\\n        admin = msg.sender;\\n        swapFeePercentage = _fees[0];\\n        feePercentage = _fees[1];\\n        beneficiary = _beneficiary;\\n        metadata = _metadata;\\n        startTimeEndTime = _startTimeEndTime;\\n        name = _name;\\n        symbol = _symbol;\\n        LBPFactory = _LBPFactory;\\n\\n        // Token addresses are sorted in numerical order (ascending) as specified by Balancer\\n        if (address(_tokenList[0]) > address(_tokenList[1])) {\\n            projectTokenIndex = 1;\\n            tokenList.push(_tokenList[1]);\\n            tokenList.push(_tokenList[0]);\\n\\n            amounts.push(_amounts[1]);\\n            amounts.push(_amounts[0]);\\n\\n            startWeights.push(_startWeights[1]);\\n            startWeights.push(_startWeights[0]);\\n\\n            endWeights.push(_endWeights[1]);\\n            endWeights.push(_endWeights[0]);\\n        } else {\\n            projectTokenIndex = 0;\\n            tokenList = _tokenList;\\n            amounts = _amounts;\\n            startWeights = _startWeights;\\n            endWeights = _endWeights;\\n        }\\n    }\\n\\n    /**\\n     * @dev                             Subtracts the fee, deploys the LBP and adds liquidity to it.\\n     * @param _sender                   Address of the liquidity provider.\\n     */\\n    function initializeLBP(address _sender) external onlyAdmin {\\n        require(\\n            initialized == true,\\n            \\\"LBPManager: LBPManager in not initialized\\\"\\n        );\\n        require(!poolFunded, \\\"LBPManager: pool already funded\\\");\\n        poolFunded = true;\\n\\n        lbp = ILBP(\\n            ILBPFactory(LBPFactory).create(\\n                name,\\n                symbol,\\n                tokenList,\\n                startWeights,\\n                swapFeePercentage,\\n                address(this),\\n                true // SwapEnabled is set to true at pool creation.\\n            )\\n        );\\n\\n        lbp.updateWeightsGradually(\\n            startTimeEndTime[0],\\n            startTimeEndTime[1],\\n            endWeights\\n        );\\n\\n        IVault vault = lbp.getVault();\\n\\n        if (feePercentage != 0) {\\n            // Transfer fee to beneficiary.\\n            tokenList[projectTokenIndex].transferFrom(\\n                _sender,\\n                beneficiary,\\n                _feeAmountRequired()\\n            );\\n            emit FeeTransferred(\\n                beneficiary,\\n                address(tokenList[projectTokenIndex]),\\n                _feeAmountRequired()\\n            );\\n        }\\n\\n        for (uint8 i; i < tokenList.length; i++) {\\n            tokenList[i].transferFrom(_sender, address(this), amounts[i]);\\n            tokenList[i].approve(address(vault), amounts[i]);\\n        }\\n\\n        IVault.JoinPoolRequest memory request = IVault.JoinPoolRequest({\\n            maxAmountsIn: amounts,\\n            userData: abi.encode(0, amounts), // JOIN_KIND_INIT = 0, used when adding liquidity for the first time.\\n            fromInternalBalance: false, // It is not possible to add liquidity through the internal Vault balance.\\n            assets: tokenList\\n        });\\n\\n        vault.joinPool(lbp.getPoolId(), address(this), address(this), request);\\n    }\\n\\n    /**\\n     * @dev                             Exit pool or remove liquidity from pool.\\n     * @param _receiver                 Address of the liquidity receiver, after exiting the LBP.\\n     */\\n    function removeLiquidity(address payable _receiver) external onlyAdmin {\\n        require(\\n            _receiver != payable(address(0)),\\n            \\\"LBPManager: receiver is zero\\\"\\n        );\\n        require(\\n            lbp.balanceOf(address(this)) > 0,\\n            \\\"LBPManager: no BPT token balance\\\"\\n        );\\n\\n        uint256 endTime;\\n        (, endTime, ) = lbp.getGradualWeightUpdateParams();\\n\\n        require(block.timestamp >= endTime, \\\"LBPManager: endtime not reached\\\");\\n\\n        IVault vault = lbp.getVault();\\n\\n        IVault.ExitPoolRequest memory request = IVault.ExitPoolRequest({\\n            minAmountsOut: new uint256[](tokenList.length), // To remove all funding from the pool. Initializes to [0, 0]\\n            userData: abi.encode(1, lbp.balanceOf(address(this))),\\n            toInternalBalance: false,\\n            assets: tokenList\\n        });\\n\\n        lbp.approve(address(vault), lbp.balanceOf(address(this)));\\n\\n        vault.exitPool(lbp.getPoolId(), address(this), _receiver, request);\\n    }\\n\\n    /*\\n        DISCLAIMER:\\n        The method below is an advanced functionality. By invoking this method, you are withdrawing\\n        the BPT tokens, which are necessary to exit the pool. If you chose to remove the BPT tokens,\\n        the LBPManager will no longer be able to remove liquidity. By withdrawing the BPT tokens\\n        you agree on removing all the responsibility from the LBPManger for removing liquidity from\\n        the pool and transferring this responsibility to the holder of the BPT tokens. Any possible\\n        loss of funds by choosing to withdraw the BPT tokens is not the responsibility of\\n        LBPManager or PrimeDao. After withdrawing the BPT tokens, liquidity has to be withdrawn\\n        directly from Balancer's LBP. LBPManager or PrimeDAO will no longer provide support to do so.\\n    */\\n    /**\\n     * @dev                             Withdraw pool tokens if available.\\n     * @param _receiver                 Address of the BPT tokens receiver.\\n     */\\n    function withdrawPoolTokens(address _receiver) external onlyAdmin {\\n        require(_receiver != address(0), \\\"LBPManager: receiver is zero\\\");\\n\\n        uint256 endTime;\\n        (, endTime, ) = lbp.getGradualWeightUpdateParams();\\n        require(block.timestamp >= endTime, \\\"LBPManager: endtime not reached\\\");\\n\\n        require(\\n            lbp.balanceOf(address(this)) > 0,\\n            \\\"LBPManager: no BPT token balance\\\"\\n        );\\n\\n        emit PoolTokensWithdrawn(address(lbp), lbp.balanceOf(address(this)));\\n        lbp.transfer(_receiver, lbp.balanceOf(address(this)));\\n    }\\n\\n    /**\\n     * @dev                             Can pause/unpause trading.\\n     * @param _swapEnabled              Enables/disables swapping.\\n     */\\n    function setSwapEnabled(bool _swapEnabled) external onlyAdmin {\\n        lbp.setSwapEnabled(_swapEnabled);\\n    }\\n\\n    /**\\n     * @dev             Get required amount of project tokens to cover for fees and the actual LBP.\\n     */\\n    function projectTokensRequired()\\n        external\\n        view\\n        returns (uint256 projectTokenAmounts)\\n    {\\n        projectTokenAmounts = amounts[projectTokenIndex] + _feeAmountRequired();\\n    }\\n\\n    /**\\n     * @dev                             Updates metadata.\\n     * @param _metadata                 LBP wizard contract metadata, that is an IPFS Hash.\\n     */\\n    function updateMetadata(bytes memory _metadata) external onlyAdmin {\\n        metadata = _metadata;\\n        emit MetadataUpdated(_metadata);\\n    }\\n\\n    /**\\n     * @dev             Get required amount of project tokens to cover for fees.\\n     */\\n    function _feeAmountRequired() internal view returns (uint256 feeAmount) {\\n        feeAmount =\\n            (amounts[projectTokenIndex] * feePercentage) /\\n            HUNDRED_PERCENT;\\n    }\\n}\\n\",\"keccak256\":\"0x910ec1c9b7e7decc8dd6e11f9e451a371dadd91264758f2cb31bb2b62ff5d82d\",\"license\":\"GPL-3.0-or-later\"},\"contracts/utils/interface/ILBP.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0-or-later\\n/* solium-disable */\\n\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\\\";\\nimport \\\"./IVault.sol\\\";\\n\\npragma solidity ^0.8.6;\\n\\ninterface ILBP is IERC20 {\\n    function updateWeightsGradually(\\n        uint256 startTime,\\n        uint256 endTime,\\n        uint256[] memory endWeights\\n    ) external;\\n\\n    function getGradualWeightUpdateParams()\\n        external\\n        view\\n        returns (\\n            uint256 startTime,\\n            uint256 endTime,\\n            uint256[] memory endWeights\\n        );\\n\\n    function getPoolId() external view returns (bytes32);\\n\\n    function getVault() external view returns (IVault);\\n\\n    function setSwapEnabled(bool swapEnabled) external;\\n\\n    function getSwapEnabled() external view returns (bool);\\n\\n    function getSwapFeePercentage() external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x70e79f7c2305d857bd82de9416e4ecb4c386c86ed2cd9d9b6baed26d1b9b24c9\",\"license\":\"GPL-3.0-or-later\"},\"contracts/utils/interface/ILBPFactory.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n/* solium-disable */\\npragma solidity ^0.8.6;\\n\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\\\";\\n\\ninterface ILBPFactory {\\n    function create(\\n        string memory name,\\n        string memory symbol,\\n        IERC20[] memory tokens,\\n        uint256[] memory weights,\\n        uint256 swapFeePercentage,\\n        address owner,\\n        bool swapEnabledOnStart\\n    ) external returns (address);\\n}\\n\",\"keccak256\":\"0x8baa986c4584fcaabf6afbddf1b0da64783235afbeb673bf4de868733b64da99\",\"license\":\"GPL-3.0-or-later\"},\"contracts/utils/interface/IVault.sol\":{\"content\":\"/*\\n\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2591\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2588\\u2588\\u2588\\u2588\\u2554\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u255d\\u2591\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\n\\u2588\\u2588\\u2551\\u2591\\u2591\\u2591\\u2591\\u2591\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2588\\u2588\\u2551\\u2591\\u255a\\u2550\\u255d\\u2591\\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551\\u2591\\u2591\\u2588\\u2588\\u2551\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u255a\\u2550\\u255d\\u2591\\u2591\\u2591\\u2591\\u2591\\u255a\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\u255a\\u2550\\u255d\\u2591\\u2591\\u255a\\u2550\\u255d\\u2591\\u255a\\u2550\\u2550\\u2550\\u2550\\u255d\\u2591\\n\\n*/\\n\\n// SPDX-License-Identifier: GPL-3.0-or-later\\n\\n/* solium-disable */\\npragma solidity ^0.8.6;\\n\\nimport \\\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\\\";\\n\\ninterface IVault {\\n    struct JoinPoolRequest {\\n        IERC20[] assets;\\n        uint256[] maxAmountsIn;\\n        bytes userData;\\n        bool fromInternalBalance;\\n    }\\n\\n    struct ExitPoolRequest {\\n        IERC20[] assets;\\n        uint256[] minAmountsOut;\\n        bytes userData;\\n        bool toInternalBalance;\\n    }\\n\\n    function joinPool(\\n        bytes32 poolId,\\n        address sender,\\n        address recipient,\\n        JoinPoolRequest memory request\\n    ) external payable;\\n\\n    function exitPool(\\n        bytes32 poolId,\\n        address sender,\\n        address payable recipient,\\n        ExitPoolRequest memory request\\n    ) external;\\n}\\n\",\"keccak256\":\"0x2ee69c52e5e79b949d6fffd7ba8ad544d7c3b62129a260281392f7f36f38c525\",\"license\":\"GPL-3.0-or-later\"},\"openzeppelin-contracts-sol8/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612a1c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80639ead7222116100de578063c9d8616f11610097578063d798f86e11610071578063d798f86e14610328578063e01af92c1461033b578063f851a4401461034e578063fc582d411461036157600080fd5b8063c9d8616f146102e3578063cb209b6c146102f6578063cd2055e51461031557600080fd5b80639ead722214610284578063a001ecdd14610297578063a4ac0d49146102a0578063a88971fa146102a9578063b5106add146102bd578063bb7bfb0c146102d057600080fd5b8063392f37e911610130578063392f37e9146102265780633facbb851461022e57806345f0a44f146102435780638638fe31146102565780638bfd52891461026957806395d89b411461027c57600080fd5b806306fdde0314610178578063092f7de714610196578063158ef93e146101c157806331d8f1be146101e55780633281f3ec146101fd57806338af3eed14610213575b600080fd5b610180610374565b60405161018d9190612708565b60405180910390f35b600b546101a9906001600160a01b031681565b6040516001600160a01b03909116815260200161018d565b600d546101d590600160b01b900460ff1681565b604051901515815260200161018d565b600d546101a99061010090046001600160a01b031681565b610205610402565b60405190815260200161018d565b6003546101a9906001600160a01b031681565b610180610441565b61024161023c3660046121b0565b61044e565b005b610205610251366004612417565b61082c565b6102416102643660046121f1565b61084d565b6102416102773660046121b0565b610e91565b610180611698565b6101a9610292366004612417565b6116a5565b61020560045481565b61020560055481565b600d546101d590600160a81b900460ff1681565b6102416102cb3660046121b0565b6116cf565b6102056102de366004612417565b6117ab565b6102056102f1366004612417565b6117bb565b600d546103039060ff1681565b60405160ff909116815260200161018d565b610205610323366004612417565b6117cb565b6102416103363660046121b0565b6117db565b610241610349366004612387565b611dd5565b6002546101a9906001600160a01b031681565b61024161036f3660046123da565b611e61565b6001805461038190612923565b80601f01602080910402602001604051908101604052809291908181526020018280546103ad90612923565b80156103fa5780601f106103cf576101008083540402835291602001916103fa565b820191906000526020600020905b8154815290600101906020018083116103dd57829003601f168201915b505050505081565b600061040c611ee0565b600d5460078054909160ff1690811061042757610427612994565b906000526020600020015461043c919061289a565b905090565b600c805461038190612923565b6002546001600160a01b031633146104815760405162461bcd60e51b8152600401610478906127e6565b60405180910390fd5b6001600160a01b0381166104d75760405162461bcd60e51b815260206004820152601c60248201527f4c42504d616e616765723a207265636569766572206973207a65726f000000006044820152606401610478565b600b54604080516303df769160e51b815290516000926001600160a01b031691637beed2209160048083019286929190829003018186803b15801561051b57600080fd5b505afa15801561052f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105579190810190612430565b50915050428111156105ab5760405162461bcd60e51b815260206004820152601f60248201527f4c42504d616e616765723a20656e6474696d65206e6f742072656163686564006044820152606401610478565b600b546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156105ef57600080fd5b505afa158015610603573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062791906123c1565b116106745760405162461bcd60e51b815260206004820181905260248201527f4c42504d616e616765723a206e6f2042505420746f6b656e2062616c616e63656044820152606401610478565b600b546040516370a0823160e01b81523060048201526001600160a01b03909116907fd0b72dd3c0f971f9cf266fee8e4c7660231316a67c88a587fa8dfa398c9e13749082906370a082319060240160206040518083038186803b1580156106db57600080fd5b505afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071391906123c1565b60405190815260200160405180910390a2600b546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90849083906370a082319060240160206040518083038186803b15801561077157600080fd5b505afa158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a991906123c1565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082791906123a4565b505050565b6007818154811061083c57600080fd5b600091825260209091200154905081565b600d54600160b01b900460ff16156108a75760405162461bcd60e51b815260206004820152601f60248201527f4c42504d616e616765723a20616c726561647920696e697469616c697a6564006044820152606401610478565b6001600160a01b038a166108fd5760405162461bcd60e51b815260206004820181905260248201527f4c42504d616e616765723a205f62656e6566696369617279206973207a65726f6044820152606401610478565b64e8d4a510008260008151811061091657610916612994565b602002602001015110156109785760405162461bcd60e51b8152602060048201526024808201527f4c42504d616e616765723a207377617046656550657263656e7461676520746f604482015263206c6f7760e01b6064820152608401610478565b67016345785d8a00008260008151811061099457610994612994565b602002602001015111156109f85760405162461bcd60e51b815260206004820152602560248201527f4c42504d616e616765723a207377617046656550657263656e7461676520746f604482015264040d0d2ced60db1b6064820152608401610478565b8651600214610a495760405162461bcd60e51b815260206004820181905260248201527f4c42504d616e616765723a20746f6b656e4c6973742077726f6e672073697a656044820152606401610478565b86600181518110610a5c57610a5c612994565b60200260200101516001600160a01b031687600081518110610a8057610a80612994565b60200260200101516001600160a01b03161415610aee5760405162461bcd60e51b815260206004820152602660248201527f4c42504d616e616765723a20626f746820746f6b656e732063616e6e6f742062604482015265652073616d6560d01b6064820152608401610478565b600d805460ff60b01b1916600160b01b179055600280546001600160a01b0319163317905581518290600090610b2657610b26612994565b602002602001015160058190555081600181518110610b4757610b47612994565b602090810291909101810151600455600380546001600160a01b0319166001600160a01b038d161790558151610b8391600c9190840190611f2d565b508351610b9790600a906020870190611fb1565b508851610bab9060019060208c0190611f2d565b508751610bbf9060009060208b0190611f2d565b50600d8054610100600160a81b0319166101006001600160a01b038e1602179055865187906001908110610bf557610bf5612994565b60200260200101516001600160a01b031687600081518110610c1957610c19612994565b60200260200101516001600160a01b03161115610e2957600d805460ff19166001908117909155875160069189918110610c5557610c55612994565b6020908102919091018101518254600181018455600093845291832090910180546001600160a01b0319166001600160a01b0390921691909117905587516006918991610ca457610ca4612994565b60209081029190910181015182546001808201855560009485529290932090920180546001600160a01b0319166001600160a01b0390931692909217909155865160079188918110610cf857610cf8612994565b602090810291909101810151825460018101845560009384529183209091015586516007918891610d2b57610d2b612994565b60209081029190910181015182546001818101855560009485529290932090920191909155855160089187918110610d6557610d65612994565b602090810291909101810151825460018101845560009384529183209091015585516008918791610d9857610d98612994565b60209081029190910181015182546001818101855560009485529290932090920191909155835160099185918110610dd257610dd2612994565b602090810291909101810151825460018101845560009384529183209091015583516009918591610e0557610e05612994565b60209081029190910181015182546001810184556000938452919092200155610e84565b600d805460ff191690558651610e469060069060208a0190611feb565b508551610e5a906007906020890190611fb1565b508451610e6e906008906020880190611fb1565b508251610e82906009906020860190611fb1565b505b5050505050505050505050565b6002546001600160a01b03163314610ebb5760405162461bcd60e51b8152600401610478906127e6565b600d54600160b01b900460ff161515600114610f2b5760405162461bcd60e51b815260206004820152602960248201527f4c42504d616e616765723a204c42504d616e6167657220696e206e6f7420696e6044820152681a5d1a585b1a5e995960ba1b6064820152608401610478565b600d54600160a81b900460ff1615610f855760405162461bcd60e51b815260206004820152601f60248201527f4c42504d616e616765723a20706f6f6c20616c72656164792066756e646564006044820152606401610478565b600d8054600160a81b60ff60a81b199091161790819055600554604051632367971960e01b81526101009092046001600160a01b031691632367971991610fde9160019160009160069160089130908690600401612737565b602060405180830381600087803b158015610ff857600080fd5b505af115801561100c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103091906121d4565b600b80546001600160a01b0319166001600160a01b03929092169182179055600a8054633e569205919060009061106957611069612994565b9060005260206000200154600a60018154811061108857611088612994565b906000526020600020015460096040518463ffffffff1660e01b81526004016110b39392919061281d565b600060405180830381600087803b1580156110cd57600080fd5b505af11580156110e1573d6000803e3d6000fd5b505050506000600b60009054906101000a90046001600160a01b03166001600160a01b0316638d928af86040518163ffffffff1660e01b815260040160206040518083038186803b15801561113557600080fd5b505afa158015611149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116d91906121d4565b90506004546000146112d257600d5460068054909160ff1690811061119457611194612994565b6000918252602090912001546003546001600160a01b03918216916323b872dd918591166111c0611ee0565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561120f57600080fd5b505af1158015611223573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124791906123a4565b50600354600d54600680546001600160a01b03909316927f1d6298f49fc15449b78df91fcca6812136edc2972366cb70aa0d9145a308cd319260ff1690811061129257611292612994565b6000918252602090912001546001600160a01b03166112af611ee0565b604080516001600160a01b03909316835260208301919091520160405180910390a25b60005b60065460ff821610156114ba5760068160ff16815481106112f8576112f8612994565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b03166323b872dd843060078560ff168154811061133c5761133c612994565b6000918252602090912001546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561139757600080fd5b505af11580156113ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cf91906123a4565b5060068160ff16815481106113e6576113e6612994565b600091825260209091200154600780546001600160a01b039092169163095ea7b391859160ff861690811061141d5761141d612994565b6000918252602090912001546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561146f57600080fd5b505af1158015611483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a791906123a4565b50806114b28161295e565b9150506112d5565b50604080516006805460a0602082028401810190945260808301818152600094849391929084018282801561151857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114fa575b50505050508152602001600780548060200260200160405190810160405280929190818152602001828054801561156e57602002820191906000526020600020905b81548152602001906001019080831161155a575b505050505081526020016000600760405160200161158d92919061271b565b6040516020818303038152906040528152602001600015158152509050816001600160a01b031663b95cac28600b60009054906101000a90046001600160a01b03166001600160a01b03166338fff2d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561160757600080fd5b505afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906123c1565b3030856040518563ffffffff1660e01b815260040161166194939291906126cc565b600060405180830381600087803b15801561167b57600080fd5b505af115801561168f573d6000803e3d6000fd5b50505050505050565b6000805461038190612923565b600681815481106116b557600080fd5b6000918252602090912001546001600160a01b0316905081565b6002546001600160a01b031633146116f95760405162461bcd60e51b8152600401610478906127e6565b6001600160a01b03811661174f5760405162461bcd60e51b815260206004820152601d60248201527f4c42504d616e616765723a206e65772061646d696e206973207a65726f0000006044820152606401610478565b6002546040516001600160a01b038084169216907f39324b4c6f0dfe086be64dee1dd0fff15f9055828415513052c73d8e178c75f590600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b6008818154811061083c57600080fd5b6009818154811061083c57600080fd5b600a818154811061083c57600080fd5b6002546001600160a01b031633146118055760405162461bcd60e51b8152600401610478906127e6565b6001600160a01b03811661185b5760405162461bcd60e51b815260206004820152601c60248201527f4c42504d616e616765723a207265636569766572206973207a65726f000000006044820152606401610478565b600b546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561189f57600080fd5b505afa1580156118b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d791906123c1565b116119245760405162461bcd60e51b815260206004820181905260248201527f4c42504d616e616765723a206e6f2042505420746f6b656e2062616c616e63656044820152606401610478565b600b54604080516303df769160e51b815290516000926001600160a01b031691637beed2209160048083019286929190829003018186803b15801561196857600080fd5b505afa15801561197c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119a49190810190612430565b50915050428111156119f85760405162461bcd60e51b815260206004820152601f60248201527f4c42504d616e616765723a20656e6474696d65206e6f742072656163686564006044820152606401610478565b600b54604080516311b2515f60e31b815290516000926001600160a01b031691638d928af8916004808301926020929190829003018186803b158015611a3d57600080fd5b505afa158015611a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7591906121d4565b9050600060405180608001604052806006805480602002602001604051908101604052809291908181526020018280548015611ada57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611abc575b5050505050815260200160068054905067ffffffffffffffff811115611b0257611b026129aa565b604051908082528060200260200182016040528015611b2b578160200160208202803683370190505b508152600b546040516370a0823160e01b81523060048201526020909201916001916001600160a01b0316906370a082319060240160206040518083038186803b158015611b7857600080fd5b505afa158015611b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb091906123c1565b6040805160ff909316602084015282015260600160408051808303601f190181529181529082526000602090920191909152600b5490516370a0823160e01b81523060048201529192506001600160a01b03169063095ea7b390849083906370a082319060240160206040518083038186803b158015611c2f57600080fd5b505afa158015611c43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6791906123c1565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015611cad57600080fd5b505af1158015611cc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce591906123a4565b50816001600160a01b0316638bdb3913600b60009054906101000a90046001600160a01b03166001600160a01b03166338fff2d06040518163ffffffff1660e01b815260040160206040518083038186803b158015611d4357600080fd5b505afa158015611d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7b91906123c1565b3087856040518563ffffffff1660e01b8152600401611d9d94939291906126cc565b600060405180830381600087803b158015611db757600080fd5b505af1158015611dcb573d6000803e3d6000fd5b5050505050505050565b6002546001600160a01b03163314611dff5760405162461bcd60e51b8152600401610478906127e6565b600b54604051633806be4b60e21b815282151560048201526001600160a01b039091169063e01af92c90602401600060405180830381600087803b158015611e4657600080fd5b505af1158015611e5a573d6000803e3d6000fd5b5050505050565b6002546001600160a01b03163314611e8b5760405162461bcd60e51b8152600401610478906127e6565b8051611e9e90600c906020840190611f2d565b5080604051611ead91906126b0565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b600454600d5460078054600093678ac7230489e800009390929160ff909116908110611f0e57611f0e612994565b9060005260206000200154611f2391906128d4565b61043c91906128b2565b828054611f3990612923565b90600052602060002090601f016020900481019282611f5b5760008555611fa1565b82601f10611f7457805160ff1916838001178555611fa1565b82800160010185558215611fa1579182015b82811115611fa1578251825591602001919060010190611f86565b50611fad929150612040565b5090565b828054828255906000526020600020908101928215611fa15791602002820182811115611fa1578251825591602001919060010190611f86565b828054828255906000526020600020908101928215611fa1579160200282015b82811115611fa157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061200b565b5b80821115611fad5760008155600101612041565b8035612060816129c0565b919050565b600082601f83011261207657600080fd5b8135602061208b61208683612876565b612845565b80838252828201915082860187848660051b89010111156120ab57600080fd5b60005b858110156120d35781356120c1816129c0565b845292840192908401906001016120ae565b5090979650505050505050565b600082601f8301126120f157600080fd5b8135602061210161208683612876565b80838252828201915082860187848660051b890101111561212157600080fd5b60005b858110156120d357813584529284019290840190600101612124565b600082601f83011261215157600080fd5b813567ffffffffffffffff81111561216b5761216b6129aa565b61217e601f8201601f1916602001612845565b81815284602083860101111561219357600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156121c257600080fd5b81356121cd816129c0565b9392505050565b6000602082840312156121e657600080fd5b81516121cd816129c0565b60008060008060008060008060008060006101608c8e03121561221357600080fd5b61221c8c612055565b9a5061222a60208d01612055565b995067ffffffffffffffff8060408e0135111561224657600080fd5b6122568e60408f01358f01612140565b99508060608e0135111561226957600080fd5b6122798e60608f01358f01612140565b98508060808e0135111561228c57600080fd5b61229c8e60808f01358f01612065565b97508060a08e013511156122af57600080fd5b6122bf8e60a08f01358f016120e0565b96508060c08e013511156122d257600080fd5b6122e28e60c08f01358f016120e0565b95508060e08e013511156122f557600080fd5b6123058e60e08f01358f016120e0565b9450806101008e0135111561231957600080fd5b61232a8e6101008f01358f016120e0565b9350806101208e0135111561233e57600080fd5b61234f8e6101208f01358f016120e0565b9250806101408e0135111561236357600080fd5b506123758d6101408e01358e01612140565b90509295989b509295989b9093969950565b60006020828403121561239957600080fd5b81356121cd816129d8565b6000602082840312156123b657600080fd5b81516121cd816129d8565b6000602082840312156123d357600080fd5b5051919050565b6000602082840312156123ec57600080fd5b813567ffffffffffffffff81111561240357600080fd5b61240f84828501612140565b949350505050565b60006020828403121561242957600080fd5b5035919050565b60008060006060848603121561244557600080fd5b835192506020808501519250604085015167ffffffffffffffff81111561246b57600080fd5b8501601f8101871361247c57600080fd5b805161248a61208682612876565b8082825284820191508484018a868560051b87010111156124aa57600080fd5b600094505b838510156124cd5780518352600194909401939185019185016124af565b5080955050505050509250925092565b600081518084526020808501945080840160005b8381101561250d578151875295820195908201906001016124f1565b509495945050505050565b6000815480845260208085019450836000528060002060005b8381101561250d57815487529582019560019182019101612531565b600081518084526125658160208601602086016128f3565b601f01601f19169290920160200192915050565b8054600090600181811c908083168061259357607f831692505b60208084108214156125b557634e487b7160e01b600052602260045260246000fd5b838852602088018280156125d057600181146125e15761260c565b60ff1987168252828201975061260c565b60008981526020902060005b87811015612606578154848201529086019084016125ed565b83019850505b5050505050505092915050565b8051608080845281519084018190526000916020919082019060a0860190845b8181101561265e5783516001600160a01b031683529284019291840191600101612639565b50508285015191508581038387015261267781836124dd565b9250505060408301518482036040860152612692828261254d565b91505060608301516126a8606086018215159052565b509392505050565b600082516126c28184602087016128f3565b9190910192915050565b8481526001600160a01b038481166020830152831660408201526080606082018190526000906126fe90830184612619565b9695505050505050565b6020815260006121cd602083018461254d565b60ff8316815260406020820152600061240f6040830184612518565b60e08152600061274a60e083018a612579565b60208382038185015261275d828b612579565b8481036040860152895480825260008b81528381209450918301915b8181101561279e5784546001600160a01b031683526001948501949284019201612779565b505084810360608601526127b2818a612518565b93505050508460808301526127d260a08301856001600160a01b03169052565b82151560c083015298975050505050505050565b6020808252601f908201527f4c42504d616e616765723a2063616c6c6572206973206e6f742061646d696e00604082015260600190565b83815282602082015260606040820152600061283c6060830184612518565b95945050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561286e5761286e6129aa565b604052919050565b600067ffffffffffffffff821115612890576128906129aa565b5060051b60200190565b600082198211156128ad576128ad61297e565b500190565b6000826128cf57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156128ee576128ee61297e565b500290565b60005b8381101561290e5781810151838201526020016128f6565b8381111561291d576000848401525b50505050565b600181811c9082168061293757607f821691505b6020821081141561295857634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff821660ff8114156129755761297561297e565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146129d557600080fd5b50565b80151581146129d557600080fdfea264697066735822122077b86c9e8ea59eaa807590ba8a229a89d40c07392f5bc069f5354c1b3070e6a564736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80639ead7222116100de578063c9d8616f11610097578063d798f86e11610071578063d798f86e14610328578063e01af92c1461033b578063f851a4401461034e578063fc582d411461036157600080fd5b8063c9d8616f146102e3578063cb209b6c146102f6578063cd2055e51461031557600080fd5b80639ead722214610284578063a001ecdd14610297578063a4ac0d49146102a0578063a88971fa146102a9578063b5106add146102bd578063bb7bfb0c146102d057600080fd5b8063392f37e911610130578063392f37e9146102265780633facbb851461022e57806345f0a44f146102435780638638fe31146102565780638bfd52891461026957806395d89b411461027c57600080fd5b806306fdde0314610178578063092f7de714610196578063158ef93e146101c157806331d8f1be146101e55780633281f3ec146101fd57806338af3eed14610213575b600080fd5b610180610374565b60405161018d9190612708565b60405180910390f35b600b546101a9906001600160a01b031681565b6040516001600160a01b03909116815260200161018d565b600d546101d590600160b01b900460ff1681565b604051901515815260200161018d565b600d546101a99061010090046001600160a01b031681565b610205610402565b60405190815260200161018d565b6003546101a9906001600160a01b031681565b610180610441565b61024161023c3660046121b0565b61044e565b005b610205610251366004612417565b61082c565b6102416102643660046121f1565b61084d565b6102416102773660046121b0565b610e91565b610180611698565b6101a9610292366004612417565b6116a5565b61020560045481565b61020560055481565b600d546101d590600160a81b900460ff1681565b6102416102cb3660046121b0565b6116cf565b6102056102de366004612417565b6117ab565b6102056102f1366004612417565b6117bb565b600d546103039060ff1681565b60405160ff909116815260200161018d565b610205610323366004612417565b6117cb565b6102416103363660046121b0565b6117db565b610241610349366004612387565b611dd5565b6002546101a9906001600160a01b031681565b61024161036f3660046123da565b611e61565b6001805461038190612923565b80601f01602080910402602001604051908101604052809291908181526020018280546103ad90612923565b80156103fa5780601f106103cf576101008083540402835291602001916103fa565b820191906000526020600020905b8154815290600101906020018083116103dd57829003601f168201915b505050505081565b600061040c611ee0565b600d5460078054909160ff1690811061042757610427612994565b906000526020600020015461043c919061289a565b905090565b600c805461038190612923565b6002546001600160a01b031633146104815760405162461bcd60e51b8152600401610478906127e6565b60405180910390fd5b6001600160a01b0381166104d75760405162461bcd60e51b815260206004820152601c60248201527f4c42504d616e616765723a207265636569766572206973207a65726f000000006044820152606401610478565b600b54604080516303df769160e51b815290516000926001600160a01b031691637beed2209160048083019286929190829003018186803b15801561051b57600080fd5b505afa15801561052f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105579190810190612430565b50915050428111156105ab5760405162461bcd60e51b815260206004820152601f60248201527f4c42504d616e616765723a20656e6474696d65206e6f742072656163686564006044820152606401610478565b600b546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b1580156105ef57600080fd5b505afa158015610603573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062791906123c1565b116106745760405162461bcd60e51b815260206004820181905260248201527f4c42504d616e616765723a206e6f2042505420746f6b656e2062616c616e63656044820152606401610478565b600b546040516370a0823160e01b81523060048201526001600160a01b03909116907fd0b72dd3c0f971f9cf266fee8e4c7660231316a67c88a587fa8dfa398c9e13749082906370a082319060240160206040518083038186803b1580156106db57600080fd5b505afa1580156106ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071391906123c1565b60405190815260200160405180910390a2600b546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90849083906370a082319060240160206040518083038186803b15801561077157600080fd5b505afa158015610785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a991906123c1565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082791906123a4565b505050565b6007818154811061083c57600080fd5b600091825260209091200154905081565b600d54600160b01b900460ff16156108a75760405162461bcd60e51b815260206004820152601f60248201527f4c42504d616e616765723a20616c726561647920696e697469616c697a6564006044820152606401610478565b6001600160a01b038a166108fd5760405162461bcd60e51b815260206004820181905260248201527f4c42504d616e616765723a205f62656e6566696369617279206973207a65726f6044820152606401610478565b64e8d4a510008260008151811061091657610916612994565b602002602001015110156109785760405162461bcd60e51b8152602060048201526024808201527f4c42504d616e616765723a207377617046656550657263656e7461676520746f604482015263206c6f7760e01b6064820152608401610478565b67016345785d8a00008260008151811061099457610994612994565b602002602001015111156109f85760405162461bcd60e51b815260206004820152602560248201527f4c42504d616e616765723a207377617046656550657263656e7461676520746f604482015264040d0d2ced60db1b6064820152608401610478565b8651600214610a495760405162461bcd60e51b815260206004820181905260248201527f4c42504d616e616765723a20746f6b656e4c6973742077726f6e672073697a656044820152606401610478565b86600181518110610a5c57610a5c612994565b60200260200101516001600160a01b031687600081518110610a8057610a80612994565b60200260200101516001600160a01b03161415610aee5760405162461bcd60e51b815260206004820152602660248201527f4c42504d616e616765723a20626f746820746f6b656e732063616e6e6f742062604482015265652073616d6560d01b6064820152608401610478565b600d805460ff60b01b1916600160b01b179055600280546001600160a01b0319163317905581518290600090610b2657610b26612994565b602002602001015160058190555081600181518110610b4757610b47612994565b602090810291909101810151600455600380546001600160a01b0319166001600160a01b038d161790558151610b8391600c9190840190611f2d565b508351610b9790600a906020870190611fb1565b508851610bab9060019060208c0190611f2d565b508751610bbf9060009060208b0190611f2d565b50600d8054610100600160a81b0319166101006001600160a01b038e1602179055865187906001908110610bf557610bf5612994565b60200260200101516001600160a01b031687600081518110610c1957610c19612994565b60200260200101516001600160a01b03161115610e2957600d805460ff19166001908117909155875160069189918110610c5557610c55612994565b6020908102919091018101518254600181018455600093845291832090910180546001600160a01b0319166001600160a01b0390921691909117905587516006918991610ca457610ca4612994565b60209081029190910181015182546001808201855560009485529290932090920180546001600160a01b0319166001600160a01b0390931692909217909155865160079188918110610cf857610cf8612994565b602090810291909101810151825460018101845560009384529183209091015586516007918891610d2b57610d2b612994565b60209081029190910181015182546001818101855560009485529290932090920191909155855160089187918110610d6557610d65612994565b602090810291909101810151825460018101845560009384529183209091015585516008918791610d9857610d98612994565b60209081029190910181015182546001818101855560009485529290932090920191909155835160099185918110610dd257610dd2612994565b602090810291909101810151825460018101845560009384529183209091015583516009918591610e0557610e05612994565b60209081029190910181015182546001810184556000938452919092200155610e84565b600d805460ff191690558651610e469060069060208a0190611feb565b508551610e5a906007906020890190611fb1565b508451610e6e906008906020880190611fb1565b508251610e82906009906020860190611fb1565b505b5050505050505050505050565b6002546001600160a01b03163314610ebb5760405162461bcd60e51b8152600401610478906127e6565b600d54600160b01b900460ff161515600114610f2b5760405162461bcd60e51b815260206004820152602960248201527f4c42504d616e616765723a204c42504d616e6167657220696e206e6f7420696e6044820152681a5d1a585b1a5e995960ba1b6064820152608401610478565b600d54600160a81b900460ff1615610f855760405162461bcd60e51b815260206004820152601f60248201527f4c42504d616e616765723a20706f6f6c20616c72656164792066756e646564006044820152606401610478565b600d8054600160a81b60ff60a81b199091161790819055600554604051632367971960e01b81526101009092046001600160a01b031691632367971991610fde9160019160009160069160089130908690600401612737565b602060405180830381600087803b158015610ff857600080fd5b505af115801561100c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103091906121d4565b600b80546001600160a01b0319166001600160a01b03929092169182179055600a8054633e569205919060009061106957611069612994565b9060005260206000200154600a60018154811061108857611088612994565b906000526020600020015460096040518463ffffffff1660e01b81526004016110b39392919061281d565b600060405180830381600087803b1580156110cd57600080fd5b505af11580156110e1573d6000803e3d6000fd5b505050506000600b60009054906101000a90046001600160a01b03166001600160a01b0316638d928af86040518163ffffffff1660e01b815260040160206040518083038186803b15801561113557600080fd5b505afa158015611149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116d91906121d4565b90506004546000146112d257600d5460068054909160ff1690811061119457611194612994565b6000918252602090912001546003546001600160a01b03918216916323b872dd918591166111c0611ee0565b6040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561120f57600080fd5b505af1158015611223573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124791906123a4565b50600354600d54600680546001600160a01b03909316927f1d6298f49fc15449b78df91fcca6812136edc2972366cb70aa0d9145a308cd319260ff1690811061129257611292612994565b6000918252602090912001546001600160a01b03166112af611ee0565b604080516001600160a01b03909316835260208301919091520160405180910390a25b60005b60065460ff821610156114ba5760068160ff16815481106112f8576112f8612994565b9060005260206000200160009054906101000a90046001600160a01b03166001600160a01b03166323b872dd843060078560ff168154811061133c5761133c612994565b6000918252602090912001546040516001600160e01b031960e086901b1681526001600160a01b0393841660048201529290911660248301526044820152606401602060405180830381600087803b15801561139757600080fd5b505af11580156113ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cf91906123a4565b5060068160ff16815481106113e6576113e6612994565b600091825260209091200154600780546001600160a01b039092169163095ea7b391859160ff861690811061141d5761141d612994565b6000918252602090912001546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561146f57600080fd5b505af1158015611483573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a791906123a4565b50806114b28161295e565b9150506112d5565b50604080516006805460a0602082028401810190945260808301818152600094849391929084018282801561151857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116114fa575b50505050508152602001600780548060200260200160405190810160405280929190818152602001828054801561156e57602002820191906000526020600020905b81548152602001906001019080831161155a575b505050505081526020016000600760405160200161158d92919061271b565b6040516020818303038152906040528152602001600015158152509050816001600160a01b031663b95cac28600b60009054906101000a90046001600160a01b03166001600160a01b03166338fff2d06040518163ffffffff1660e01b815260040160206040518083038186803b15801561160757600080fd5b505afa15801561161b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061163f91906123c1565b3030856040518563ffffffff1660e01b815260040161166194939291906126cc565b600060405180830381600087803b15801561167b57600080fd5b505af115801561168f573d6000803e3d6000fd5b50505050505050565b6000805461038190612923565b600681815481106116b557600080fd5b6000918252602090912001546001600160a01b0316905081565b6002546001600160a01b031633146116f95760405162461bcd60e51b8152600401610478906127e6565b6001600160a01b03811661174f5760405162461bcd60e51b815260206004820152601d60248201527f4c42504d616e616765723a206e65772061646d696e206973207a65726f0000006044820152606401610478565b6002546040516001600160a01b038084169216907f39324b4c6f0dfe086be64dee1dd0fff15f9055828415513052c73d8e178c75f590600090a3600280546001600160a01b0319166001600160a01b0392909216919091179055565b6008818154811061083c57600080fd5b6009818154811061083c57600080fd5b600a818154811061083c57600080fd5b6002546001600160a01b031633146118055760405162461bcd60e51b8152600401610478906127e6565b6001600160a01b03811661185b5760405162461bcd60e51b815260206004820152601c60248201527f4c42504d616e616765723a207265636569766572206973207a65726f000000006044820152606401610478565b600b546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561189f57600080fd5b505afa1580156118b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d791906123c1565b116119245760405162461bcd60e51b815260206004820181905260248201527f4c42504d616e616765723a206e6f2042505420746f6b656e2062616c616e63656044820152606401610478565b600b54604080516303df769160e51b815290516000926001600160a01b031691637beed2209160048083019286929190829003018186803b15801561196857600080fd5b505afa15801561197c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526119a49190810190612430565b50915050428111156119f85760405162461bcd60e51b815260206004820152601f60248201527f4c42504d616e616765723a20656e6474696d65206e6f742072656163686564006044820152606401610478565b600b54604080516311b2515f60e31b815290516000926001600160a01b031691638d928af8916004808301926020929190829003018186803b158015611a3d57600080fd5b505afa158015611a51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a7591906121d4565b9050600060405180608001604052806006805480602002602001604051908101604052809291908181526020018280548015611ada57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611abc575b5050505050815260200160068054905067ffffffffffffffff811115611b0257611b026129aa565b604051908082528060200260200182016040528015611b2b578160200160208202803683370190505b508152600b546040516370a0823160e01b81523060048201526020909201916001916001600160a01b0316906370a082319060240160206040518083038186803b158015611b7857600080fd5b505afa158015611b8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bb091906123c1565b6040805160ff909316602084015282015260600160408051808303601f190181529181529082526000602090920191909152600b5490516370a0823160e01b81523060048201529192506001600160a01b03169063095ea7b390849083906370a082319060240160206040518083038186803b158015611c2f57600080fd5b505afa158015611c43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c6791906123c1565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015611cad57600080fd5b505af1158015611cc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce591906123a4565b50816001600160a01b0316638bdb3913600b60009054906101000a90046001600160a01b03166001600160a01b03166338fff2d06040518163ffffffff1660e01b815260040160206040518083038186803b158015611d4357600080fd5b505afa158015611d57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d7b91906123c1565b3087856040518563ffffffff1660e01b8152600401611d9d94939291906126cc565b600060405180830381600087803b158015611db757600080fd5b505af1158015611dcb573d6000803e3d6000fd5b5050505050505050565b6002546001600160a01b03163314611dff5760405162461bcd60e51b8152600401610478906127e6565b600b54604051633806be4b60e21b815282151560048201526001600160a01b039091169063e01af92c90602401600060405180830381600087803b158015611e4657600080fd5b505af1158015611e5a573d6000803e3d6000fd5b5050505050565b6002546001600160a01b03163314611e8b5760405162461bcd60e51b8152600401610478906127e6565b8051611e9e90600c906020840190611f2d565b5080604051611ead91906126b0565b604051908190038120907f09f579b21815d3f81581d32e97736ccba1cc89d1918e48da28e6e206acd9686490600090a250565b600454600d5460078054600093678ac7230489e800009390929160ff909116908110611f0e57611f0e612994565b9060005260206000200154611f2391906128d4565b61043c91906128b2565b828054611f3990612923565b90600052602060002090601f016020900481019282611f5b5760008555611fa1565b82601f10611f7457805160ff1916838001178555611fa1565b82800160010185558215611fa1579182015b82811115611fa1578251825591602001919060010190611f86565b50611fad929150612040565b5090565b828054828255906000526020600020908101928215611fa15791602002820182811115611fa1578251825591602001919060010190611f86565b828054828255906000526020600020908101928215611fa1579160200282015b82811115611fa157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061200b565b5b80821115611fad5760008155600101612041565b8035612060816129c0565b919050565b600082601f83011261207657600080fd5b8135602061208b61208683612876565b612845565b80838252828201915082860187848660051b89010111156120ab57600080fd5b60005b858110156120d35781356120c1816129c0565b845292840192908401906001016120ae565b5090979650505050505050565b600082601f8301126120f157600080fd5b8135602061210161208683612876565b80838252828201915082860187848660051b890101111561212157600080fd5b60005b858110156120d357813584529284019290840190600101612124565b600082601f83011261215157600080fd5b813567ffffffffffffffff81111561216b5761216b6129aa565b61217e601f8201601f1916602001612845565b81815284602083860101111561219357600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156121c257600080fd5b81356121cd816129c0565b9392505050565b6000602082840312156121e657600080fd5b81516121cd816129c0565b60008060008060008060008060008060006101608c8e03121561221357600080fd5b61221c8c612055565b9a5061222a60208d01612055565b995067ffffffffffffffff8060408e0135111561224657600080fd5b6122568e60408f01358f01612140565b99508060608e0135111561226957600080fd5b6122798e60608f01358f01612140565b98508060808e0135111561228c57600080fd5b61229c8e60808f01358f01612065565b97508060a08e013511156122af57600080fd5b6122bf8e60a08f01358f016120e0565b96508060c08e013511156122d257600080fd5b6122e28e60c08f01358f016120e0565b95508060e08e013511156122f557600080fd5b6123058e60e08f01358f016120e0565b9450806101008e0135111561231957600080fd5b61232a8e6101008f01358f016120e0565b9350806101208e0135111561233e57600080fd5b61234f8e6101208f01358f016120e0565b9250806101408e0135111561236357600080fd5b506123758d6101408e01358e01612140565b90509295989b509295989b9093969950565b60006020828403121561239957600080fd5b81356121cd816129d8565b6000602082840312156123b657600080fd5b81516121cd816129d8565b6000602082840312156123d357600080fd5b5051919050565b6000602082840312156123ec57600080fd5b813567ffffffffffffffff81111561240357600080fd5b61240f84828501612140565b949350505050565b60006020828403121561242957600080fd5b5035919050565b60008060006060848603121561244557600080fd5b835192506020808501519250604085015167ffffffffffffffff81111561246b57600080fd5b8501601f8101871361247c57600080fd5b805161248a61208682612876565b8082825284820191508484018a868560051b87010111156124aa57600080fd5b600094505b838510156124cd5780518352600194909401939185019185016124af565b5080955050505050509250925092565b600081518084526020808501945080840160005b8381101561250d578151875295820195908201906001016124f1565b509495945050505050565b6000815480845260208085019450836000528060002060005b8381101561250d57815487529582019560019182019101612531565b600081518084526125658160208601602086016128f3565b601f01601f19169290920160200192915050565b8054600090600181811c908083168061259357607f831692505b60208084108214156125b557634e487b7160e01b600052602260045260246000fd5b838852602088018280156125d057600181146125e15761260c565b60ff1987168252828201975061260c565b60008981526020902060005b87811015612606578154848201529086019084016125ed565b83019850505b5050505050505092915050565b8051608080845281519084018190526000916020919082019060a0860190845b8181101561265e5783516001600160a01b031683529284019291840191600101612639565b50508285015191508581038387015261267781836124dd565b9250505060408301518482036040860152612692828261254d565b91505060608301516126a8606086018215159052565b509392505050565b600082516126c28184602087016128f3565b9190910192915050565b8481526001600160a01b038481166020830152831660408201526080606082018190526000906126fe90830184612619565b9695505050505050565b6020815260006121cd602083018461254d565b60ff8316815260406020820152600061240f6040830184612518565b60e08152600061274a60e083018a612579565b60208382038185015261275d828b612579565b8481036040860152895480825260008b81528381209450918301915b8181101561279e5784546001600160a01b031683526001948501949284019201612779565b505084810360608601526127b2818a612518565b93505050508460808301526127d260a08301856001600160a01b03169052565b82151560c083015298975050505050505050565b6020808252601f908201527f4c42504d616e616765723a2063616c6c6572206973206e6f742061646d696e00604082015260600190565b83815282602082015260606040820152600061283c6060830184612518565b95945050505050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561286e5761286e6129aa565b604052919050565b600067ffffffffffffffff821115612890576128906129aa565b5060051b60200190565b600082198211156128ad576128ad61297e565b500190565b6000826128cf57634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156128ee576128ee61297e565b500290565b60005b8381101561290e5781810151838201526020016128f6565b8381111561291d576000848401525b50505050565b600181811c9082168061293757607f821691505b6020821081141561295857634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff821660ff8114156129755761297561297e565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146129d557600080fd5b50565b80151581146129d557600080fdfea264697066735822122077b86c9e8ea59eaa807590ba8a229a89d40c07392f5bc069f5354c1b3070e6a564736f6c63430008060033",
  "devdoc": {
    "details": "Smart contract for managing interactions with a Balancer LBP.",
    "kind": "dev",
    "methods": {
      "initializeLBP(address)": {
        "details": "Subtracts the fee, deploys the LBP and adds liquidity to it.",
        "params": {
          "_sender": "Address of the liquidity provider."
        }
      },
      "initializeLBPManager(address,address,string,string,address[],uint256[],uint256[],uint256[],uint256[],uint256[],bytes)": {
        "details": "Initialize LBPManager.",
        "params": {
          "_LBPFactory": "LBP factory address.",
          "_amounts": "Array containing two parameters in order of: 1. The amounts of project token to be added as liquidity to the LBP. 2. The amounts of funding token to be added as liquidity to the LBP.",
          "_beneficiary": "The address that receives the feePercentage.",
          "_endWeights": "Array containing two parametes in order of: 1. The end weight for the project token in the LBP. 2. The end weight for the funding token in the LBP.",
          "_fees": "Array containing two parameters in order of: 1. Percentage of fee paid for every swap in the LBP. 2. Percentage of fee paid to the _beneficiary for providing the service of the LBP Manager.",
          "_metadata": "IPFS Hash of the LBP creation wizard information.",
          "_name": "Name of the LBP.",
          "_startTimeEndTime": "Array containing two parameters in order of: 1. Start time for the LBP. 2. End time for the LBP.",
          "_startWeights": "Array containing two parametes in order of: 1. The start weight for the project token in the LBP. 2. The start weight for the funding token in the LBP.",
          "_symbol": "Symbol of the LBP.",
          "_tokenList": "Array containing two addresses in order of: 1. The address of the project token being distributed. 2. The address of the funding token being exchanged for the project token."
        }
      },
      "projectTokensRequired()": {
        "details": "Get required amount of project tokens to cover for fees and the actual LBP."
      },
      "removeLiquidity(address)": {
        "details": "Exit pool or remove liquidity from pool.",
        "params": {
          "_receiver": "Address of the liquidity receiver, after exiting the LBP."
        }
      },
      "setSwapEnabled(bool)": {
        "details": "Can pause/unpause trading.",
        "params": {
          "_swapEnabled": "Enables/disables swapping."
        }
      },
      "transferAdminRights(address)": {
        "details": "Transfer admin rights.",
        "params": {
          "_newAdmin": "Address of the new admin."
        }
      },
      "updateMetadata(bytes)": {
        "details": "Updates metadata.",
        "params": {
          "_metadata": "LBP wizard contract metadata, that is an IPFS Hash."
        }
      },
      "withdrawPoolTokens(address)": {
        "details": "Withdraw pool tokens if available.",
        "params": {
          "_receiver": "Address of the BPT tokens receiver."
        }
      }
    },
    "title": "LBPManager contract.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 239,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "symbol",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 241,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 243,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "admin",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 245,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "beneficiary",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 247,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "feePercentage",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 249,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "swapFeePercentage",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 253,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "tokenList",
        "offset": 0,
        "slot": "6",
        "type": "t_array(t_contract(IERC20)11745)dyn_storage"
      },
      {
        "astId": 256,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "amounts",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 259,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "startWeights",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 262,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "endWeights",
        "offset": 0,
        "slot": "9",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 265,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "startTimeEndTime",
        "offset": 0,
        "slot": "10",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 268,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "lbp",
        "offset": 0,
        "slot": "11",
        "type": "t_contract(ILBP)2875"
      },
      {
        "astId": 270,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "metadata",
        "offset": 0,
        "slot": "12",
        "type": "t_bytes_storage"
      },
      {
        "astId": 272,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "projectTokenIndex",
        "offset": 0,
        "slot": "13",
        "type": "t_uint8"
      },
      {
        "astId": 274,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "LBPFactory",
        "offset": 1,
        "slot": "13",
        "type": "t_address"
      },
      {
        "astId": 276,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "poolFunded",
        "offset": 21,
        "slot": "13",
        "type": "t_bool"
      },
      {
        "astId": 278,
        "contract": "contracts/lbp/LBPManager.sol:LBPManager",
        "label": "initialized",
        "offset": 22,
        "slot": "13",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_contract(IERC20)11745)dyn_storage": {
        "base": "t_contract(IERC20)11745",
        "encoding": "dynamic_array",
        "label": "contract IERC20[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)11745": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(ILBP)2875": {
        "encoding": "inplace",
        "label": "contract ILBP",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}