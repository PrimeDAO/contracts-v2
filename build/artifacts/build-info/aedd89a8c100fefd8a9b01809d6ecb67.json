{
  "id": "aedd89a8c100fefd8a9b01809d6ecb67",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.5.16",
  "solcLongVersion": "0.5.16+commit.9c3226ce",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/migration/MerkleDrop.sol": {
        "content": "/*\n██████╗░██████╗░██╗███╗░░░███╗███████╗██████╗░░█████╗░░█████╗░\n██╔══██╗██╔══██╗██║████╗░████║██╔════╝██╔══██╗██╔══██╗██╔══██╗\n██████╔╝██████╔╝██║██╔████╔██║█████╗░░██║░░██║███████║██║░░██║\n██╔═══╝░██╔══██╗██║██║╚██╔╝██║██╔══╝░░██║░░██║██╔══██║██║░░██║\n██║░░░░░██║░░██║██║██║░╚═╝░██║███████╗██████╔╝██║░░██║╚█████╔╝\n╚═╝░░░░░╚═╝░░╚═╝╚═╝╚═╝░░░░░╚═╝╚══════╝╚═════╝░╚═╝░░╚═╝░╚════╝░\n*/\n\n/*\n This is a contract that has been adapted from mStable. \n The original smart contract can be found here: https://github.com/mstable/merkle-drop\n There have only been slight adaptations such as the removal of two external functions,\n the renaming of some parameters,\n and the addition of a blocknumber that needs to have passed for a drop to be claimable.\n*/\n\npragma solidity 0.5.16;\npragma experimental ABIEncoderV2;\n\nimport { MerkleProof } from \"openzeppelin-contracts-sol5/cryptography/MerkleProof.sol\";\nimport { IERC20 } from \"openzeppelin-contracts-sol5/token/ERC20/IERC20.sol\";\nimport { SafeERC20 } from \"openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol\";\nimport { SafeMath } from \"openzeppelin-contracts-sol5/math/SafeMath.sol\";\n\nimport { Initializable } from \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport { InitializableGovernableWhitelist } from \"@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol\";\n\ncontract MerkleDrop is Initializable, InitializableGovernableWhitelist {\nfunction c_0x89b12937(bytes32 c__0x89b12937) public pure {}\n\n\n    using SafeERC20 for IERC20;\n    using SafeMath for uint256;\n\n    event Claimed(address claimant, uint256 week, uint256 balance);\n    event TrancheAdded(uint256 tranche, bytes32 merkleRoot, uint256 totalAmount);\n    event TrancheExpired(uint256 tranche);\n    event RemovedFunder(address indexed _address);\n\n    IERC20 public token;\n\n    mapping(uint256 => bytes32) public merkleRoots;\n    mapping(uint256 => mapping(address => bool)) public claimed;\n    uint256 tranches;\n\n    uint256 public thresholdBlock;\n\n    function initialize(\n        address _nexus,\n        address[] calldata _funders,\n        IERC20 _token,\n        uint256 _thresholdBlock\n    )\n        external\n        initializer\n    {c_0x89b12937(0x4d1f1914b463a1df1f22b59173999d66e00f3eb3d93c96078461089741fe4d5e); /* function */ \n\nc_0x89b12937(0xc8680aa51866dd28c964d9ff1c468f13f265fe9194778743696982959f15427d); /* line */ \n        c_0x89b12937(0x70fe7550a8292996773c6a8eff9ec604d6b1d620f9156d62dd56d6d03f4c32e7); /* statement */ \nInitializableGovernableWhitelist._initialize(_nexus, _funders);\nc_0x89b12937(0x385bf05ed975ad04a29cc2eb3247c8ac8616e8d86c9ba33b9b0d08fadf60af84); /* line */ \n        c_0x89b12937(0xfbc3bd7c8006d11293559a2fc66269990912023c448c136e614153fc2c32d6ef); /* statement */ \ntoken = _token;\nc_0x89b12937(0xe42a82d9fa7823147604ad67f7b08ada48e84b9eeb027d33184483de97e82e31); /* line */ \n        c_0x89b12937(0xd02459ca4862f780af681f03433968b6771628f812870e5417f5b05bc9db0d58); /* statement */ \nthresholdBlock = _thresholdBlock;\n    }\n\n    /***************************************\n                    ADMIN\n    ****************************************/\n\n    function seedNewAllocations(bytes32 _merkleRoot, uint256 _totalAllocation)\n        public\n        onlyWhitelisted\n        returns (uint256 trancheId)\n    {c_0x89b12937(0x315242968ded7f9b8330ecdf39cd461ae225b1dd1c38fc2536d74c369dfd74d0); /* function */ \n\nc_0x89b12937(0x0fd95cd135356267e96e3c8c576f3833111cfec8aa740b2821393e1f3fc5fdd2); /* line */ \n        c_0x89b12937(0x749a4b491e3ec8fc2cb8dd3e93f98bafd712a0af5865715bc89e1d2684dc7ac9); /* statement */ \ntoken.transferFrom(msg.sender, address(this), _totalAllocation);\n\nc_0x89b12937(0x7e59eca5c1b43081618504b2eae7dafcd7d96ee5322bebae630f76584f41bfab); /* line */ \n        c_0x89b12937(0x3a93024ce5728ee64cadde0938c9c042deebc612ef167257dc7f368a78541876); /* statement */ \ntrancheId = tranches;\nc_0x89b12937(0xa7f574c7b0914df10a5fe3a8284183fbd5431065e496a438c360f4e1c25dd179); /* line */ \n        c_0x89b12937(0x5decc1ab22bd380340728f8694ad62b00ea8aa9406a7010794e0154833402efb); /* statement */ \nmerkleRoots[trancheId] = _merkleRoot;\n\nc_0x89b12937(0x002acd07252eb07396b2c478dff5a0ed494bdc18c8cd07e17a4f33ff2f19a0d4); /* line */ \n        c_0x89b12937(0x49390cd3cc5042d04bf5d0ae87a01a4e0f362ff57220568b760ba522ce54d2cd); /* statement */ \ntranches = tranches.add(1);\n\nc_0x89b12937(0x76b45c8ca2920b270a814fcfce414073daf1e556c52f0982e5a73937dc6289dd); /* line */ \n        c_0x89b12937(0x0827c235be2940a85524432af8eca279d66ad8263399e2c6fc891f394eabc7e7); /* statement */ \nemit TrancheAdded(trancheId, _merkleRoot, _totalAllocation);\n    }\n\n    function expireTranche(uint256 _trancheId)\n        public\n        onlyWhitelisted\n    {c_0x89b12937(0xcb2246b71cf42dc859cc1208bdfed13bdac5645a6a1868b2352e969e0e5954b0); /* function */ \n\nc_0x89b12937(0xa53851f3919261f5e7987d27048a0ee0d1163285162c94949ff0287bea421baa); /* line */ \n        c_0x89b12937(0x8df13cb44a889c5a1dc943ed7607111bcec10b61211a75565f77a1367d580201); /* statement */ \nmerkleRoots[_trancheId] = bytes32(0);\n\nc_0x89b12937(0xb25fee3dd43eb7ae13392e429abc836bbd3796a3e6fb1e374aa6f110c7f8f235); /* line */ \n        c_0x89b12937(0xca730240a2790b197cd1fab4ff25650191fe7c057e38afbb626e0367d57666de); /* statement */ \nemit TrancheExpired(_trancheId);\n    }\n\n\n    /***************************************\n                  CLAIMING\n    ****************************************/\n\n\n    function claimTranche(\n        address _claimer,\n        uint256 _tranche,\n        uint256 _balance,\n        bytes32[] memory _merkleProof\n    )\n        public\n    {c_0x89b12937(0xab16fffa5ec9834f3683233e5b122597e09c374015ade8003f6d0b2137d2574f); /* function */ \n\nc_0x89b12937(0xe6f1cb7b569c87117b0299a8fe4e1e368fe7384c6414dec90881263fd3e4d35c); /* line */ \n        c_0x89b12937(0x5c2cac338cdb0eb6fe73854bd6fc2dd3dbc38c1eabf140f89c507b6767a91658); /* requirePre */ \nc_0x89b12937(0xda5fa761bfae6f8742d60af8e9b1d1dc279e1413ff2b020f274efb0f752c5e6e); /* statement */ \nrequire(block.number >= thresholdBlock, \"Rewards are not yet claimable\");c_0x89b12937(0x1d5c3d47b8ae3505f0f227b989d61ff28caf561f1fc4c2ce06d8fed7f4653f57); /* requirePost */ \n\nc_0x89b12937(0x9d9a31a039450327c9b952ed312d5e49918b35bee5146ba139c271223d5b241b); /* line */ \n        c_0x89b12937(0x0d64cece30771137043dff4facb9da2c842515947d40a55ace7780556f51c0aa); /* statement */ \n_claimTranche(_claimer, _tranche, _balance, _merkleProof);\nc_0x89b12937(0x3fe40e91dd1537b2180646a9002b731fb7328d51052f25b36d10ad63c3eced9c); /* line */ \n        c_0x89b12937(0x15ddc9631384152dcac66dc1aad0b42156d6fd34f298dfa1b15b36e6256848c3); /* statement */ \n_disburse(_claimer, _balance);\n    }\n\n\n    function verifyClaim(\n        address _claimer,\n        uint256 _tranche,\n        uint256 _balance,\n        bytes32[] memory _merkleProof\n    )\n        public\n        view\n        returns (bool valid)\n    {c_0x89b12937(0x4120afbd551f72c4162881e2279d37710e95051aed61563a07c660d68e2af54b); /* function */ \n\nc_0x89b12937(0xa115cc73960e281c4e22fd8c5ca0eee26d4967ad430b0fe23d3ebfc2bb09858d); /* line */ \n        c_0x89b12937(0x1e7d333bb04df98d810b7344e90d1cc157a3449c8458f2f06f9b4f7afe918f88); /* statement */ \nreturn _verifyClaim(_claimer, _tranche, _balance, _merkleProof);\n    }\n\n\n    /***************************************\n              CLAIMING - INTERNAL\n    ****************************************/\n\n\n    function _claimTranche(\n        address _claimer,\n        uint256 _tranche,\n        uint256 _balance,\n        bytes32[] memory _merkleProof\n    )\n        private\n    {c_0x89b12937(0x9fb33dd966c858b2f8f89eef0965af4038b7d5c69ccc47c4e8d3f2f882d6250e); /* function */ \n\nc_0x89b12937(0x753a86b1bd11a4e2902a48da439a4d219e83fdb0601350f629a63c98c06d31dc); /* line */ \n        c_0x89b12937(0xa495c0ba562e81d488eb842edd4dd1baa0b8aa4f1e22ec13e7b7e1c095bb8ebf); /* requirePre */ \nc_0x89b12937(0x0141b3d031771b9927f876b72fb03c2ef9a4142dd93c99ff7ae967748323cea0); /* statement */ \nrequire(_tranche < tranches, \"Week cannot be in the future\");c_0x89b12937(0x3745f1c45124cd6da85bbfdb606a6d2186bdeb773f837022957930dad86e9dd3); /* requirePost */ \n\n\nc_0x89b12937(0x47c9efe5e4b2618e76780f5d68a2ee31fb2740fb360aff79b99b9df3d14478ea); /* line */ \n        c_0x89b12937(0x7b48c738497fc9946365eefe78b7cb4fa050cb385284e5c48368e5ef339ed4bf); /* requirePre */ \nc_0x89b12937(0xc2a8d258cac4050648894ade99f1e59483c2e966e67b61bbb2e42730741f521f); /* statement */ \nrequire(!claimed[_tranche][_claimer], \"LP has already claimed\");c_0x89b12937(0x4a80e0e573e988668e4579c43a5ed8ff1625b218ed20d04b1c73bb0cd1115d47); /* requirePost */ \n\nc_0x89b12937(0x2318a8e8af4cb85595d813d2ca6331656de9e3c3441ee3a9f6875178edeff556); /* line */ \n        c_0x89b12937(0x52c5613c253fbd45b484e65555006c9e8f2e6d6d98cd20c24093851e14c85bbf); /* requirePre */ \nc_0x89b12937(0xe0538246dfc17e22342c85d56e378bdaedaeb83405500730e3dbf88b2b381dd5); /* statement */ \nrequire(_verifyClaim(_claimer, _tranche, _balance, _merkleProof), \"Incorrect merkle proof\");c_0x89b12937(0x5ca746d6737080dfb4631e5c81fd0303b52fdc64dbc5425fcf0ddc2c0d82b5bb); /* requirePost */ \n\n\nc_0x89b12937(0xcbc59d33e8575ee8bd663b5379cea23a3b9518207936e6208613edbcb0d19320); /* line */ \n        c_0x89b12937(0xb566c23468da0e715603425d86e31913b4f49c7e7f0dd8dea2b8b1a808275d3b); /* statement */ \nclaimed[_tranche][_claimer] = true;\n\nc_0x89b12937(0xbbca39356ea3cf0ca4c94f93a02a0fca1f1ee247a5ceca7cb670802f1135e526); /* line */ \n        c_0x89b12937(0x322b55665e4a5d47939f04c0658ea8615af17f2a4f65dba4bae2e96a9cb47338); /* statement */ \nemit Claimed(_claimer, _tranche, _balance);\n    }\n\n\n    function _verifyClaim(\n        address _claimer,\n        uint256 _tranche,\n        uint256 _balance,\n        bytes32[] memory _merkleProof\n    )\n        private\n        view\n        returns (bool valid)\n    {c_0x89b12937(0x067491226c0dd091faffe2d2a855ebd357ac33613baa94b34587a98d47577acf); /* function */ \n\nc_0x89b12937(0x2539e0dfa0aa61aa3831219e55d54c9ea304f5ddc42975238409372c610ffe50); /* line */ \n        c_0x89b12937(0x21b0f5010d767a2e586c2975b144b997de2f1cbc79f35199e9545cdbeaba5434); /* statement */ \nbytes32 leaf = keccak256(abi.encodePacked(_claimer, _balance));\nc_0x89b12937(0xd28be919cb7f66ac4be0461205ba7f594920370f4edcef86cb63951c18fb1229); /* line */ \n        c_0x89b12937(0x221168b819ce3d8adf323916dd392a0b79c274caab6d9d81b08449699c20a505); /* statement */ \nreturn MerkleProof.verify(_merkleProof, merkleRoots[_tranche], leaf);\n    }\n\n\n    function _disburse(address _claimer, uint256 _balance) private {c_0x89b12937(0x8c0a6a75c86b86a8d09a89b12d473938e9b3b704cd7a1c87ccda9a0a0375a120); /* function */ \n\nc_0x89b12937(0x2d2ddbf4742ba7bea9c529e00f1037a9d2f0b6ba21950c451125356eddbaf17f); /* line */ \n        c_0x89b12937(0x0e95d2831f4d25c583f25ab788852ef1fc10d8c71e493664a46133b7658c37bf); /* statement */ \nif (_balance > 0) {c_0x89b12937(0x35bcfaa19a2519ad036a401d54324b30ed6375d5707c0ee0cc2d5774059b5ce5); /* branch */ \n\nc_0x89b12937(0x42b1660e00749b5834da2fe4fa559826b8b1076658c763ff8ee76a771d3d1920); /* line */ \n            c_0x89b12937(0x3091dc5ae9aaf00db2627771f622f5ac8f597d0e0efb8d5e2445aff777d4b957); /* statement */ \ntoken.safeTransfer(_claimer, _balance);\n        } else {c_0x89b12937(0xd143cd9c10493117d1928be7091a988b8f285d0359cf3cc3177f3c9808af83ea); /* branch */ \n\nc_0x89b12937(0x546386ea249e93e6caa7d947c4efbd68ec80805f8fa178e7d9a673ed09aa36fa); /* line */ \n            c_0x89b12937(0x356f5da3d4a4ce695d5f6681309176d5e522ceb4444bd4501b1012883e0867d5); /* statement */ \nrevert(\"No balance would be transferred - not going to waste your gas\");\n        }\n    }\n}\n"
      },
      "openzeppelin-contracts-sol5/cryptography/MerkleProof.sol": {
        "content": "pragma solidity ^0.5.0;\n\n/**\n * @dev These functions deal with verification of Merkle trees (hash trees),\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        bytes32 computedHash = leaf;\n\n        for (uint256 i = 0; i < proof.length; i++) {\n            bytes32 proofElement = proof[i];\n\n            if (computedHash <= proofElement) {\n                // Hash(current computed hash + current element of the proof)\n                computedHash = keccak256(abi.encodePacked(computedHash, proofElement));\n            } else {\n                // Hash(current element of the proof + current computed hash)\n                computedHash = keccak256(abi.encodePacked(proofElement, computedHash));\n            }\n        }\n\n        // Check if the computed hash (root) is equal to the provided root\n        return computedHash == root;\n    }\n}\n"
      },
      "openzeppelin-contracts-sol5/token/ERC20/IERC20.sol": {
        "content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {ERC20Detailed}.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol": {
        "content": "pragma solidity ^0.5.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeERC20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeERC20: low-level call failed\");\n\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
      },
      "openzeppelin-contracts-sol5/math/SafeMath.sol": {
        "content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     *\n     * _Available since v2.4.0._\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     *\n     * _Available since v2.4.0._\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
      },
      "@openzeppelin/upgrades/contracts/Initializable.sol": {
        "content": "pragma solidity >=0.4.24 <0.7.0;\n\n\n/**\n * @title Initializable\n *\n * @dev Helper contract to support initializer functions. To use it, replace\n * the constructor with a function that has the `initializer` modifier.\n * WARNING: Unlike constructors, initializer functions must be manually\n * invoked. This applies both to deploying an Initializable contract, as well\n * as extending an Initializable contract via inheritance.\n * WARNING: When used with inheritance, manual care must be taken to not invoke\n * a parent initializer twice, or ensure that all initializers are idempotent,\n * because this is not dealt with automatically as with constructors.\n */\ncontract Initializable {\n\n  /**\n   * @dev Indicates that the contract has been initialized.\n   */\n  bool private initialized;\n\n  /**\n   * @dev Indicates that the contract is in the process of being initialized.\n   */\n  bool private initializing;\n\n  /**\n   * @dev Modifier to use in the initializer function of a contract.\n   */\n  modifier initializer() {\n    require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\n\n    bool isTopLevelCall = !initializing;\n    if (isTopLevelCall) {\n      initializing = true;\n      initialized = true;\n    }\n\n    _;\n\n    if (isTopLevelCall) {\n      initializing = false;\n    }\n  }\n\n  /// @dev Returns true if and only if the function is running in the constructor\n  function isConstructor() private view returns (bool) {\n    // extcodesize checks the size of the code stored in an address, and\n    // address returns the current address. Since the code is still not\n    // deployed when running a constructor, any checks on its code size will\n    // yield zero, making it an effective way to detect if a contract is\n    // under construction or not.\n    address self = address(this);\n    uint256 cs;\n    assembly { cs := extcodesize(self) }\n    return cs == 0;\n  }\n\n  // Reserved storage space to allow for layout changes in the future.\n  uint256[50] private ______gap;\n}\n"
      },
      "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol": {
        "content": "pragma solidity 0.5.16;\n\nimport { InitializableModule } from \"../shared/InitializableModule.sol\";\n\n/**\n * @title   InitializableGovernableWhitelist\n * @author  Stability Labs Pty. Ltd.\n * @notice  Contract to store whitelisted address. The onlyWhitelisted() modifier should be used\n *          to allow the function calls only from the whitelisted addresses.\n * @dev     Implementing contracts are responsible for adding their own add and remove methods\n *          as the original purpose of this whitelist is for read optimisation.\n */\ncontract InitializableGovernableWhitelist is InitializableModule {\n\n    event Whitelisted(address indexed _address);\n\n    mapping(address => bool) public whitelist;\n\n    /**\n     * @dev Modifier to allow function calls only from the whitelisted address.\n     */\n    modifier onlyWhitelisted() {\n        require(whitelist[msg.sender], \"Not a whitelisted address\");\n        _;\n    }\n\n    /**\n     * @dev Initialization function for upgradable proxy contracts\n     * @param _nexus Nexus contract address\n     * @param _whitelisted Array of whitelisted addresses.\n     */\n    function _initialize(\n        address _nexus,\n        address[] memory _whitelisted\n    )\n        internal\n    {\n        InitializableModule._initialize(_nexus);\n\n        require(_whitelisted.length > 0, \"Empty whitelist array\");\n\n        for(uint256 i = 0; i < _whitelisted.length; i++) {\n            _addWhitelist(_whitelisted[i]);\n        }\n    }\n\n    /**\n     * @dev Adds a new whitelist address\n     * @param _address Address to add in whitelist\n     */\n    function _addWhitelist(address _address) internal {\n        require(_address != address(0), \"Address is zero\");\n        require(! whitelist[_address], \"Already whitelisted\");\n\n        whitelist[_address] = true;\n\n        emit Whitelisted(_address);\n    }\n\n}"
      },
      "openzeppelin-contracts-sol5/utils/Address.sol": {
        "content": "pragma solidity ^0.5.5;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following \n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     *\n     * _Available since v2.4.0._\n     */\n    function toPayable(address account) internal pure returns (address payable) {\n        return address(uint160(account));\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     *\n     * _Available since v2.4.0._\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-call-value\n        (bool success, ) = recipient.call.value(amount)(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}\n"
      },
      "@mstable/protocol/contracts/shared/InitializableModule.sol": {
        "content": "pragma solidity 0.5.16;\n\nimport { InitializableModuleKeys } from \"./InitializableModuleKeys.sol\";\nimport { INexus } from \"../interfaces/INexus.sol\";\n\n/**\n * @title   InitializableModule\n * @author  Stability Labs Pty. Ltd.\n * @dev     Subscribes to module updates from a given publisher and reads from its registry.\n *          Contract is used for upgradable proxy contracts.\n */\ncontract InitializableModule is InitializableModuleKeys {\n\n    INexus public nexus;\n\n    /**\n     * @dev Modifier to allow function calls only from the Governor.\n     */\n    modifier onlyGovernor() {\n        require(msg.sender == _governor(), \"Only governor can execute\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to allow function calls only from the Governance.\n     *      Governance is either Governor address or Governance address.\n     */\n    modifier onlyGovernance() {\n        require(\n            msg.sender == _governor() || msg.sender == _governance(),\n            \"Only governance can execute\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Modifier to allow function calls only from the ProxyAdmin.\n     */\n    modifier onlyProxyAdmin() {\n        require(\n            msg.sender == _proxyAdmin(), \"Only ProxyAdmin can execute\"\n        );\n        _;\n    }\n\n    /**\n     * @dev Modifier to allow function calls only from the Manager.\n     */\n    modifier onlyManager() {\n        require(msg.sender == _manager(), \"Only manager can execute\");\n        _;\n    }\n\n    /**\n     * @dev Initialization function for upgradable proxy contracts\n     * @param _nexus Nexus contract address\n     */\n    function _initialize(address _nexus) internal {\n        require(_nexus != address(0), \"Nexus address is zero\");\n        nexus = INexus(_nexus);\n        InitializableModuleKeys._initialize();\n    }\n\n    /**\n     * @dev Returns Governor address from the Nexus\n     * @return Address of Governor Contract\n     */\n    function _governor() internal view returns (address) {\n        return nexus.governor();\n    }\n\n    /**\n     * @dev Returns Governance Module address from the Nexus\n     * @return Address of the Governance (Phase 2)\n     */\n    function _governance() internal view returns (address) {\n        return nexus.getModule(KEY_GOVERNANCE);\n    }\n\n    /**\n     * @dev Return Staking Module address from the Nexus\n     * @return Address of the Staking Module contract\n     */\n    function _staking() internal view returns (address) {\n        return nexus.getModule(KEY_STAKING);\n    }\n\n    /**\n     * @dev Return ProxyAdmin Module address from the Nexus\n     * @return Address of the ProxyAdmin Module contract\n     */\n    function _proxyAdmin() internal view returns (address) {\n        return nexus.getModule(KEY_PROXY_ADMIN);\n    }\n\n    /**\n     * @dev Return MetaToken Module address from the Nexus\n     * @return Address of the MetaToken Module contract\n     */\n    function _metaToken() internal view returns (address) {\n        return nexus.getModule(KEY_META_TOKEN);\n    }\n\n    /**\n     * @dev Return OracleHub Module address from the Nexus\n     * @return Address of the OracleHub Module contract\n     */\n    function _oracleHub() internal view returns (address) {\n        return nexus.getModule(KEY_ORACLE_HUB);\n    }\n\n    /**\n     * @dev Return Manager Module address from the Nexus\n     * @return Address of the Manager Module contract\n     */\n    function _manager() internal view returns (address) {\n        return nexus.getModule(KEY_MANAGER);\n    }\n\n    /**\n     * @dev Return SavingsManager Module address from the Nexus\n     * @return Address of the SavingsManager Module contract\n     */\n    function _savingsManager() internal view returns (address) {\n        return nexus.getModule(KEY_SAVINGS_MANAGER);\n    }\n\n    /**\n     * @dev Return Recollateraliser Module address from the Nexus\n     * @return  Address of the Recollateraliser Module contract (Phase 2)\n     */\n    function _recollateraliser() internal view returns (address) {\n        return nexus.getModule(KEY_RECOLLATERALISER);\n    }\n}\n"
      },
      "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol": {
        "content": "pragma solidity 0.5.16;\n\n/**\n * @title  InitializableModuleKeys\n * @author Stability Labs Pty. Ltd.\n * @notice Provides system wide access to the byte32 represntations of system modules\n *         This allows each system module to be able to reference and update one another in a\n *         friendly way. Contract is used for upgradable proxy contracts.\n * @dev    The contract is a replica of ModuleKeys.sol\n *         The following variables are to be assigned only once from initialize() function.\n *         Hence, the variable names are declared in UPPER_CASE to indicate constants.\n */\ncontract InitializableModuleKeys {\n\n    // Governance                             // Phases\n    bytes32 internal KEY_GOVERNANCE;          // 2.x\n    bytes32 internal KEY_STAKING;             // 1.2\n    bytes32 internal KEY_PROXY_ADMIN;         // 1.0\n\n    // mStable\n    bytes32 internal KEY_ORACLE_HUB;          // 1.2\n    bytes32 internal KEY_MANAGER;             // 1.2\n    bytes32 internal KEY_RECOLLATERALISER;    // 2.x\n    bytes32 internal KEY_META_TOKEN;          // 1.1\n    bytes32 internal KEY_SAVINGS_MANAGER;     // 1.0\n\n    /**\n     * @dev Initialize function for upgradable proxy contracts. This function should be called\n     *      via Proxy to initialize constants in the Proxy contract.\n     */\n    function _initialize() internal {\n        // keccak256() values are evaluated only once at the time of this function call.\n        // Hence, no need to assign hard-coded values to these variables.\n        KEY_GOVERNANCE = keccak256(\"Governance\");\n        KEY_STAKING = keccak256(\"Staking\");\n        KEY_PROXY_ADMIN = keccak256(\"ProxyAdmin\");\n\n        KEY_ORACLE_HUB = keccak256(\"OracleHub\");\n        KEY_MANAGER = keccak256(\"Manager\");\n        KEY_RECOLLATERALISER = keccak256(\"Recollateraliser\");\n        KEY_META_TOKEN = keccak256(\"MetaToken\");\n        KEY_SAVINGS_MANAGER = keccak256(\"SavingsManager\");\n    }\n}"
      },
      "@mstable/protocol/contracts/interfaces/INexus.sol": {
        "content": "pragma solidity 0.5.16;\n\n/**\n  * @title INexus\n  * @dev Basic interface for interacting with the Nexus i.e. SystemKernel\n  */\ninterface INexus {\n    function governor() external view returns (address);\n    function getModule(bytes32 key) external view returns (address);\n\n    function proposeModule(bytes32 _key, address _addr) external;\n    function cancelProposedModule(bytes32 _key) external;\n    function acceptProposedModule(bytes32 _key) external;\n    function acceptProposedModules(bytes32[] calldata _keys) external;\n\n    function requestLockModule(bytes32 _key) external;\n    function cancelLockModule(bytes32 _key) external;\n    function lockModule(bytes32 _key) external;\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": false
      }
    }
  },
  "output": {
    "contracts": {
      "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol": {
        "InitializableGovernableWhitelist": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_address",
                  "type": "address"
                }
              ],
              "name": "Whitelisted",
              "type": "event"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "nexus",
              "outputs": [
                {
                  "internalType": "contract INexus",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "whitelist",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "Stability Labs Pty. Ltd.",
            "details": "Implementing contracts are responsible for adding their own add and remove methods         as the original purpose of this whitelist is for read optimisation.",
            "methods": {},
            "title": "InitializableGovernableWhitelist"
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5061015c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639b19251a1461003b578063a3f5c1d214610097575b600080fd5b61007d6004803603602081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100e1565b604051808215151515815260200191505060405180910390f35b61009f610101565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60096020528060005260406000206000915054906101000a900460ff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a72315820e5ba9c6a0c03c521cf24ae315bd013b742184bce72e623f7d014b6b201781e9d64736f6c63430005100032",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B19251A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA3F5C1D2 EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE5 0xBA SWAP13 PUSH11 0xC03C521CF24AE315BD013 0xB7 TIMESTAMP XOR 0x4B 0xCE PUSH19 0xE623F7D014B6B201781E9D64736F6C63430005 LT STOP ORIGIN ",
              "sourceMap": "538:1292:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;538:1292:0;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80639b19251a1461003b578063a3f5c1d214610097575b600080fd5b61007d6004803603602081101561005157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100e1565b604051808215151515815260200191505060405180910390f35b61009f610101565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60096020528060005260406000206000915054906101000a900460ff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a72315820e5ba9c6a0c03c521cf24ae315bd013b742184bce72e623f7d014b6b201781e9d64736f6c63430005100032",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B19251A EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA3F5C1D2 EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x101 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE5 0xBA SWAP13 PUSH11 0xC03C521CF24AE315BD013 0xB7 TIMESTAMP XOR 0x4B 0xCE PUSH19 0xE623F7D014B6B201781E9D64736F6C63430005 LT STOP ORIGIN ",
              "sourceMap": "538:1292:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;538:1292:0;;;;;;;;;;;;;;;;;;;;;;;;660:41;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;660:41:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;444:19:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;660:41:0;;;;;;;;;;;;;;;;;;;;;;:::o;444:19:2:-;;;;;;;;;;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "69600",
                "executionCost": "117",
                "totalCost": "69717"
              },
              "external": {
                "nexus()": "1053",
                "whitelist(address)": "1184"
              },
              "internal": {
                "_addWhitelist(address)": "infinite",
                "_initialize(address,address[] memory)": "infinite"
              }
            },
            "methodIdentifiers": {
              "nexus()": "a3f5c1d2",
              "whitelist(address)": "9b19251a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"nexus\",\"outputs\":[{\"internalType\":\"contract INexus\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stability Labs Pty. Ltd.\",\"details\":\"Implementing contracts are responsible for adding their own add and remove methods         as the original purpose of this whitelist is for read optimisation.\",\"methods\":{},\"title\":\"InitializableGovernableWhitelist\"},\"userdoc\":{\"methods\":{},\"notice\":\"Contract to store whitelisted address. The onlyWhitelisted() modifier should be used         to allow the function calls only from the whitelisted addresses.\"}},\"settings\":{\"compilationTarget\":{\"@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol\":\"InitializableGovernableWhitelist\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol\":{\"keccak256\":\"0xda302d020b1282b552c24a495a5770cf8cec4350694afd0932fbfb66978042b1\",\"urls\":[\"bzz-raw://8dffad967b88d9262baa670f51f8929969c203ec1836198b806b2d8f1c666f68\",\"dweb:/ipfs/QmRhewMiy5t8bMM3T2qxFGKky9hQ98wQKYde8YxEmhiHpt\"]},\"@mstable/protocol/contracts/interfaces/INexus.sol\":{\"keccak256\":\"0x8ac00cbb7588f1aea0b7a8a0ac0b1d8b12ae097e3fc0ec03aa6a5e45c4a2d9fd\",\"urls\":[\"bzz-raw://490602c4d449667e7b37ace56c7132e0665779a889e60857e21a30f5dfb70c50\",\"dweb:/ipfs/QmV9RuY3FQ9WrpdkHVuHi46xBCq1WHp5suygQxJJY6nUcq\"]},\"@mstable/protocol/contracts/shared/InitializableModule.sol\":{\"keccak256\":\"0xda15abf73529ae7255529b4a69b9e202901eb09b4e32703277539f23002d95f9\",\"urls\":[\"bzz-raw://d3d66cca2a1543669a221c478bf6a08497e1f33da96f426d60cd193c8bb122a8\",\"dweb:/ipfs/QmS4mtdqrxVcsW3YthcuBn26ZY1bncXYBZDE2qQrR4k1dY\"]},\"@mstable/protocol/contracts/shared/InitializableModuleKeys.sol\":{\"keccak256\":\"0x91d0d4423c80b93848d8f0af8b8b18ab21c9eaf764374d65564c923ba0c299a2\",\"urls\":[\"bzz-raw://44d54be77e873b26f405865adb1ed599f9853dcaf544fd637ff32db288e828b0\",\"dweb:/ipfs/QmPj3xjdkEjGGyVh9E1XdxvymgnWKqiuESmohM9AGwVvz7\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 351,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "KEY_GOVERNANCE",
                "offset": 0,
                "slot": "0",
                "type": "t_bytes32"
              },
              {
                "astId": 353,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "KEY_STAKING",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              },
              {
                "astId": 355,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "KEY_PROXY_ADMIN",
                "offset": 0,
                "slot": "2",
                "type": "t_bytes32"
              },
              {
                "astId": 357,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "KEY_ORACLE_HUB",
                "offset": 0,
                "slot": "3",
                "type": "t_bytes32"
              },
              {
                "astId": 359,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "KEY_MANAGER",
                "offset": 0,
                "slot": "4",
                "type": "t_bytes32"
              },
              {
                "astId": 361,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "KEY_RECOLLATERALISER",
                "offset": 0,
                "slot": "5",
                "type": "t_bytes32"
              },
              {
                "astId": 363,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "KEY_META_TOKEN",
                "offset": 0,
                "slot": "6",
                "type": "t_bytes32"
              },
              {
                "astId": 365,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "KEY_SAVINGS_MANAGER",
                "offset": 0,
                "slot": "7",
                "type": "t_bytes32"
              },
              {
                "astId": 164,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "nexus",
                "offset": 0,
                "slot": "8",
                "type": "t_contract(INexus)154"
              },
              {
                "astId": 13,
                "contract": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol:InitializableGovernableWhitelist",
                "label": "whitelist",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_address,t_bool)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              },
              "t_contract(INexus)154": {
                "encoding": "inplace",
                "label": "contract INexus",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              }
            }
          },
          "userdoc": {
            "methods": {},
            "notice": "Contract to store whitelisted address. The onlyWhitelisted() modifier should be used         to allow the function calls only from the whitelisted addresses."
          }
        }
      },
      "@mstable/protocol/contracts/interfaces/INexus.sol": {
        "INexus": {
          "abi": [
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "acceptProposedModule",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "bytes32[]",
                  "name": "_keys",
                  "type": "bytes32[]"
                }
              ],
              "name": "acceptProposedModules",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "cancelLockModule",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "cancelProposedModule",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "key",
                  "type": "bytes32"
                }
              ],
              "name": "getModule",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "governor",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "lockModule",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "proposeModule",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_key",
                  "type": "bytes32"
                }
              ],
              "name": "requestLockModule",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Basic interface for interacting with the Nexus i.e. SystemKernel",
            "methods": {},
            "title": "INexus"
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "acceptProposedModule(bytes32)": "28066b86",
              "acceptProposedModules(bytes32[])": "6921ea41",
              "cancelLockModule(bytes32)": "efa2f3a2",
              "cancelProposedModule(bytes32)": "d7e0842a",
              "getModule(bytes32)": "85acd641",
              "governor()": "0c340a24",
              "lockModule(bytes32)": "6d4e1991",
              "proposeModule(bytes32,address)": "09ea14aa",
              "requestLockModule(bytes32)": "97f5fea6"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"acceptProposedModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_keys\",\"type\":\"bytes32[]\"}],\"name\":\"acceptProposedModules\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"cancelLockModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"cancelProposedModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"getModule\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"governor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"lockModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"proposeModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_key\",\"type\":\"bytes32\"}],\"name\":\"requestLockModule\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Basic interface for interacting with the Nexus i.e. SystemKernel\",\"methods\":{},\"title\":\"INexus\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@mstable/protocol/contracts/interfaces/INexus.sol\":\"INexus\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@mstable/protocol/contracts/interfaces/INexus.sol\":{\"keccak256\":\"0x8ac00cbb7588f1aea0b7a8a0ac0b1d8b12ae097e3fc0ec03aa6a5e45c4a2d9fd\",\"urls\":[\"bzz-raw://490602c4d449667e7b37ace56c7132e0665779a889e60857e21a30f5dfb70c50\",\"dweb:/ipfs/QmV9RuY3FQ9WrpdkHVuHi46xBCq1WHp5suygQxJJY6nUcq\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      },
      "@mstable/protocol/contracts/shared/InitializableModule.sol": {
        "InitializableModule": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "nexus",
              "outputs": [
                {
                  "internalType": "contract INexus",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "Stability Labs Pty. Ltd.",
            "details": "Subscribes to module updates from a given publisher and reads from its registry.         Contract is used for upgradable proxy contracts.",
            "methods": {},
            "title": "InitializableModule"
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b5060d08061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a3f5c1d214602d575b600080fd5b60336075565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a723158200602e8de7e9fca288c4a9a971530911a6f7297e693a7c584b83b5e8880fcc95f64736f6c63430005100032",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xD0 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3F5C1D2 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MOD MUL 0xE8 0xDE PUSH31 0x9FCA288C4A9A971530911A6F7297E693A7C584B83B5E8880FCC95F64736F6C PUSH4 0x43000510 STOP ORIGIN ",
              "sourceMap": "381:3629:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;381:3629:2;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063a3f5c1d214602d575b600080fd5b60336075565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea265627a7a723158200602e8de7e9fca288c4a9a971530911a6f7297e693a7c584b83b5e8880fcc95f64736f6c63430005100032",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3F5C1D2 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MOD MUL 0xE8 0xDE PUSH31 0x9FCA288C4A9A971530911A6F7297E693A7C584B83B5E8880FCC95F64736F6C PUSH4 0x43000510 STOP ORIGIN ",
              "sourceMap": "381:3629:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;381:3629:2;;;;;;;;;;;;;;;;;;;444:19;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "41600",
                "executionCost": "93",
                "totalCost": "41693"
              },
              "external": {
                "nexus()": "1031"
              },
              "internal": {
                "_governance()": "infinite",
                "_governor()": "infinite",
                "_initialize(address)": "infinite",
                "_manager()": "infinite",
                "_metaToken()": "infinite",
                "_oracleHub()": "infinite",
                "_proxyAdmin()": "infinite",
                "_recollateraliser()": "infinite",
                "_savingsManager()": "infinite",
                "_staking()": "infinite"
              }
            },
            "methodIdentifiers": {
              "nexus()": "a3f5c1d2"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"nexus\",\"outputs\":[{\"internalType\":\"contract INexus\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Stability Labs Pty. Ltd.\",\"details\":\"Subscribes to module updates from a given publisher and reads from its registry.         Contract is used for upgradable proxy contracts.\",\"methods\":{},\"title\":\"InitializableModule\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@mstable/protocol/contracts/shared/InitializableModule.sol\":\"InitializableModule\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@mstable/protocol/contracts/interfaces/INexus.sol\":{\"keccak256\":\"0x8ac00cbb7588f1aea0b7a8a0ac0b1d8b12ae097e3fc0ec03aa6a5e45c4a2d9fd\",\"urls\":[\"bzz-raw://490602c4d449667e7b37ace56c7132e0665779a889e60857e21a30f5dfb70c50\",\"dweb:/ipfs/QmV9RuY3FQ9WrpdkHVuHi46xBCq1WHp5suygQxJJY6nUcq\"]},\"@mstable/protocol/contracts/shared/InitializableModule.sol\":{\"keccak256\":\"0xda15abf73529ae7255529b4a69b9e202901eb09b4e32703277539f23002d95f9\",\"urls\":[\"bzz-raw://d3d66cca2a1543669a221c478bf6a08497e1f33da96f426d60cd193c8bb122a8\",\"dweb:/ipfs/QmS4mtdqrxVcsW3YthcuBn26ZY1bncXYBZDE2qQrR4k1dY\"]},\"@mstable/protocol/contracts/shared/InitializableModuleKeys.sol\":{\"keccak256\":\"0x91d0d4423c80b93848d8f0af8b8b18ab21c9eaf764374d65564c923ba0c299a2\",\"urls\":[\"bzz-raw://44d54be77e873b26f405865adb1ed599f9853dcaf544fd637ff32db288e828b0\",\"dweb:/ipfs/QmPj3xjdkEjGGyVh9E1XdxvymgnWKqiuESmohM9AGwVvz7\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 351,
                "contract": "@mstable/protocol/contracts/shared/InitializableModule.sol:InitializableModule",
                "label": "KEY_GOVERNANCE",
                "offset": 0,
                "slot": "0",
                "type": "t_bytes32"
              },
              {
                "astId": 353,
                "contract": "@mstable/protocol/contracts/shared/InitializableModule.sol:InitializableModule",
                "label": "KEY_STAKING",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              },
              {
                "astId": 355,
                "contract": "@mstable/protocol/contracts/shared/InitializableModule.sol:InitializableModule",
                "label": "KEY_PROXY_ADMIN",
                "offset": 0,
                "slot": "2",
                "type": "t_bytes32"
              },
              {
                "astId": 357,
                "contract": "@mstable/protocol/contracts/shared/InitializableModule.sol:InitializableModule",
                "label": "KEY_ORACLE_HUB",
                "offset": 0,
                "slot": "3",
                "type": "t_bytes32"
              },
              {
                "astId": 359,
                "contract": "@mstable/protocol/contracts/shared/InitializableModule.sol:InitializableModule",
                "label": "KEY_MANAGER",
                "offset": 0,
                "slot": "4",
                "type": "t_bytes32"
              },
              {
                "astId": 361,
                "contract": "@mstable/protocol/contracts/shared/InitializableModule.sol:InitializableModule",
                "label": "KEY_RECOLLATERALISER",
                "offset": 0,
                "slot": "5",
                "type": "t_bytes32"
              },
              {
                "astId": 363,
                "contract": "@mstable/protocol/contracts/shared/InitializableModule.sol:InitializableModule",
                "label": "KEY_META_TOKEN",
                "offset": 0,
                "slot": "6",
                "type": "t_bytes32"
              },
              {
                "astId": 365,
                "contract": "@mstable/protocol/contracts/shared/InitializableModule.sol:InitializableModule",
                "label": "KEY_SAVINGS_MANAGER",
                "offset": 0,
                "slot": "7",
                "type": "t_bytes32"
              },
              {
                "astId": 164,
                "contract": "@mstable/protocol/contracts/shared/InitializableModule.sol:InitializableModule",
                "label": "nexus",
                "offset": 0,
                "slot": "8",
                "type": "t_contract(INexus)154"
              }
            ],
            "types": {
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              },
              "t_contract(INexus)154": {
                "encoding": "inplace",
                "label": "contract INexus",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "methods": {}
          }
        }
      },
      "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol": {
        "InitializableModuleKeys": {
          "abi": [],
          "devdoc": {
            "author": "Stability Labs Pty. Ltd.",
            "details": "The contract is a replica of ModuleKeys.sol        The following variables are to be assigned only once from initialize() function.        Hence, the variable names are declared in UPPER_CASE to indicate constants.",
            "methods": {},
            "title": "InitializableModuleKeys"
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a72315820aac39a0d62e6dd8a587aa4370e1c0e3bad4162b6791fbaffb2f31103d299a5e964736f6c63430005100032",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xAA 0xC3 SWAP11 0xD PUSH3 0xE6DD8A PC PUSH27 0xA4370E1C0E3BAD4162B6791FBAFFB2F31103D299A5E964736F6C63 NUMBER STOP SDIV LT STOP ORIGIN ",
              "sourceMap": "592:1330:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;592:1330:3;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6080604052600080fdfea265627a7a72315820aac39a0d62e6dd8a587aa4370e1c0e3bad4162b6791fbaffb2f31103d299a5e964736f6c63430005100032",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xAA 0xC3 SWAP11 0xD PUSH3 0xE6DD8A PC PUSH27 0xA4370E1C0E3BAD4162B6791FBAFFB2F31103D299A5E964736F6C63 NUMBER STOP SDIV LT STOP ORIGIN ",
              "sourceMap": "592:1330:3:-;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "12400",
                "executionCost": "66",
                "totalCost": "12466"
              },
              "internal": {
                "_initialize()": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Stability Labs Pty. Ltd.\",\"details\":\"The contract is a replica of ModuleKeys.sol        The following variables are to be assigned only once from initialize() function.        Hence, the variable names are declared in UPPER_CASE to indicate constants.\",\"methods\":{},\"title\":\"InitializableModuleKeys\"},\"userdoc\":{\"methods\":{},\"notice\":\"Provides system wide access to the byte32 represntations of system modules        This allows each system module to be able to reference and update one another in a        friendly way. Contract is used for upgradable proxy contracts.\"}},\"settings\":{\"compilationTarget\":{\"@mstable/protocol/contracts/shared/InitializableModuleKeys.sol\":\"InitializableModuleKeys\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@mstable/protocol/contracts/shared/InitializableModuleKeys.sol\":{\"keccak256\":\"0x91d0d4423c80b93848d8f0af8b8b18ab21c9eaf764374d65564c923ba0c299a2\",\"urls\":[\"bzz-raw://44d54be77e873b26f405865adb1ed599f9853dcaf544fd637ff32db288e828b0\",\"dweb:/ipfs/QmPj3xjdkEjGGyVh9E1XdxvymgnWKqiuESmohM9AGwVvz7\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 351,
                "contract": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol:InitializableModuleKeys",
                "label": "KEY_GOVERNANCE",
                "offset": 0,
                "slot": "0",
                "type": "t_bytes32"
              },
              {
                "astId": 353,
                "contract": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol:InitializableModuleKeys",
                "label": "KEY_STAKING",
                "offset": 0,
                "slot": "1",
                "type": "t_bytes32"
              },
              {
                "astId": 355,
                "contract": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol:InitializableModuleKeys",
                "label": "KEY_PROXY_ADMIN",
                "offset": 0,
                "slot": "2",
                "type": "t_bytes32"
              },
              {
                "astId": 357,
                "contract": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol:InitializableModuleKeys",
                "label": "KEY_ORACLE_HUB",
                "offset": 0,
                "slot": "3",
                "type": "t_bytes32"
              },
              {
                "astId": 359,
                "contract": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol:InitializableModuleKeys",
                "label": "KEY_MANAGER",
                "offset": 0,
                "slot": "4",
                "type": "t_bytes32"
              },
              {
                "astId": 361,
                "contract": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol:InitializableModuleKeys",
                "label": "KEY_RECOLLATERALISER",
                "offset": 0,
                "slot": "5",
                "type": "t_bytes32"
              },
              {
                "astId": 363,
                "contract": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol:InitializableModuleKeys",
                "label": "KEY_META_TOKEN",
                "offset": 0,
                "slot": "6",
                "type": "t_bytes32"
              },
              {
                "astId": 365,
                "contract": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol:InitializableModuleKeys",
                "label": "KEY_SAVINGS_MANAGER",
                "offset": 0,
                "slot": "7",
                "type": "t_bytes32"
              }
            ],
            "types": {
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "methods": {},
            "notice": "Provides system wide access to the byte32 represntations of system modules        This allows each system module to be able to reference and update one another in a        friendly way. Contract is used for upgradable proxy contracts."
          }
        }
      },
      "@openzeppelin/upgrades/contracts/Initializable.sol": {
        "Initializable": {
          "abi": [],
          "devdoc": {
            "details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
            "methods": {},
            "title": "Initializable"
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a7231582010585ba3ab746998d88a3bc074e8cc59292141211ae7bfaa4c14cf0f72062c7e64736f6c63430005100032",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LT PC JUMPDEST LOG3 0xAB PUSH21 0x6998D88A3BC074E8CC59292141211AE7BFAA4C14CF 0xF PUSH19 0x62C7E64736F6C634300051000320000000000 ",
              "sourceMap": "657:1357:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:1357:4;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "6080604052600080fdfea265627a7a7231582010585ba3ab746998d88a3bc074e8cc59292141211ae7bfaa4c14cf0f72062c7e64736f6c63430005100032",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LT PC JUMPDEST LOG3 0xAB PUSH21 0x6998D88A3BC074E8CC59292141211AE7BFAA4C14CF 0xF PUSH19 0x62C7E64736F6C634300051000320000000000 ",
              "sourceMap": "657:1357:4:-;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "12400",
                "executionCost": "66",
                "totalCost": "12466"
              },
              "internal": {
                "isConstructor()": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"methods\":{},\"title\":\"Initializable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/upgrades/contracts/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 422,
                "contract": "@openzeppelin/upgrades/contracts/Initializable.sol:Initializable",
                "label": "initialized",
                "offset": 0,
                "slot": "0",
                "type": "t_bool"
              },
              {
                "astId": 424,
                "contract": "@openzeppelin/upgrades/contracts/Initializable.sol:Initializable",
                "label": "initializing",
                "offset": 1,
                "slot": "0",
                "type": "t_bool"
              },
              {
                "astId": 486,
                "contract": "@openzeppelin/upgrades/contracts/Initializable.sol:Initializable",
                "label": "______gap",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_uint256)50_storage"
              }
            ],
            "types": {
              "t_array(t_uint256)50_storage": {
                "base": "t_uint256",
                "encoding": "inplace",
                "label": "uint256[50]",
                "numberOfBytes": "1600"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "methods": {}
          }
        }
      },
      "contracts/migration/MerkleDrop.sol": {
        "MerkleDrop": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "claimant",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "week",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "name": "Claimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_address",
                  "type": "address"
                }
              ],
              "name": "RemovedFunder",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "merkleRoot",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "totalAmount",
                  "type": "uint256"
                }
              ],
              "name": "TrancheAdded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "tranche",
                  "type": "uint256"
                }
              ],
              "name": "TrancheExpired",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "_address",
                  "type": "address"
                }
              ],
              "name": "Whitelisted",
              "type": "event"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "c__0x89b12937",
                  "type": "bytes32"
                }
              ],
              "name": "c_0x89b12937",
              "outputs": [],
              "payable": false,
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_claimer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_balance",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "_merkleProof",
                  "type": "bytes32[]"
                }
              ],
              "name": "claimTranche",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "claimed",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_trancheId",
                  "type": "uint256"
                }
              ],
              "name": "expireTranche",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_nexus",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "_funders",
                  "type": "address[]"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_thresholdBlock",
                  "type": "uint256"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "merkleRoots",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "nexus",
              "outputs": [
                {
                  "internalType": "contract INexus",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "_merkleRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalAllocation",
                  "type": "uint256"
                }
              ],
              "name": "seedNewAllocations",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "trancheId",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "thresholdBlock",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_claimer",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_tranche",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_balance",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32[]",
                  "name": "_merkleProof",
                  "type": "bytes32[]"
                }
              ],
              "name": "verifyClaim",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "valid",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "whitelist",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "devdoc": {
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E4C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B19251A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xA3F5C1D2 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xCD54E72C EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xD5EFD20A EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xEB0D07F5 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x255 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xAF49690 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x120AA877 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x29EB15BD EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x4AB54113 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x65EF53B1 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x71C5ECB1 EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0xCE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0xEA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x201C JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x138 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F8E JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x154 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x184 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1B4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x2968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x202 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x21E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0xB48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x23A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x292 JUMPI POP PUSH2 0x291 PUSH2 0xDC7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2A9 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP1 PUSH2 0x2A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x364 PUSH32 0x4D1F1914B463A1DF1F22B59173999D66E00F3EB3D93C96078461089741FE4D5E PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x390 PUSH32 0xC8680AA51866DD28C964D9FF1C468F13F265FE9194778743696982959F15427D PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x3BC PUSH32 0x70FE7550A8292996773C6A8EFF9EC604D6B1D620F9156D62DD56D6D03F4C32E7 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x407 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x433 PUSH32 0x385BF05ED975AD04A29CC2EB3247C8AC8616E8D86C9BA33B9B0D08FADF60AF84 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x45F PUSH32 0xFBC3BD7C8006D11293559A2FC66269990912023C448C136E614153FC2C32D6EF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST DUP3 PUSH1 0x3D PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x4CC PUSH32 0xE42A82D9FA7823147604AD67F7B08ADA48E84B9EEB027D33184483DE97E82E31 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x4F8 PUSH32 0xD02459CA4862F780AF681F03433968B6771628F812870E5417F5B05BC9DB0D58 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST DUP2 PUSH1 0x41 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3F PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x41 SLOAD DUP2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP1 PUSH2 0x2A43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61A PUSH32 0x315242968DED7F9B8330ECDF39CD461AE225B1DD1C38FC2536D74C369DFD74D0 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x646 PUSH32 0xFD95CD135356267E96E3C8C576F3833111CFEC8AA740B2821393E1F3FC5FDD2 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x672 PUSH32 0x749A4B491E3EC8FC2CB8DD3E93F98BAFD712A0AF5865715BC89E1D2684DC7AC9 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x3D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x723 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F65 JUMP JUMPDEST POP PUSH2 0x750 PUSH32 0x7E59ECA5C1B43081618504B2EAE7DAFCD7D96EE5322BEBAE630F76584F41BFAB PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x77C PUSH32 0x3A93024CE5728EE64CADDE0938C9C042DEEBC612EF167257DC7F368A78541876 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 SLOAD SWAP1 POP PUSH2 0x7AD PUSH32 0xA7F574C7B0914DF10A5FE3A8284183FBD5431065E496A438C360F4E1C25DD179 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x7D9 PUSH32 0x5DECC1AB22BD380340728F8694AD62B00EA8AA9406A7010794E0154833402EFB PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST DUP3 PUSH1 0x3E PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x81C PUSH31 0x2ACD07252EB07396B2C478DFF5A0ED494BDC18C8CD07E17A4F33FF2F19A0D4 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x848 PUSH32 0x49390CD3CC5042D04BF5D0AE87A01A4E0F362FF57220568B760BA522CE54D2CD PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x85E PUSH1 0x1 PUSH1 0x40 SLOAD PUSH2 0xE68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 DUP2 SWAP1 SSTORE POP PUSH2 0x890 PUSH32 0x76B45C8CA2920B270A814FCFCE414073DAF1E556C52F0982E5A73937DC6289DD PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x8BC PUSH32 0x827C235BE2940A85524432AF8ECA279D66AD8263399E2C6FC891F394EABC7E7 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH32 0x5C8770684B8F82E9ADE880FB05CCFB53C969170CD40E9746A3703F241C9023EC DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8EF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x987 PUSH32 0xAB16FFFA5EC9834F3683233E5B122597E09C374015ADE8003F6D0B2137D2574F PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x9B3 PUSH32 0xE6F1CB7B569C87117B0299A8FE4E1E368FE7384C6414DEC90881263FD3E4D35C PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x9DF PUSH32 0x5C2CAC338CDB0EB6FE73854BD6FC2DD3DBC38C1EABF140F89C507B6767A91658 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xA0B PUSH32 0xDA5FA761BFAE6F8742D60AF8E9B1D1DC279E1413FF2B020F274EFB0F752C5E6E PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x41 SLOAD NUMBER LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA47 SWAP1 PUSH2 0x2A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7C PUSH32 0x1D5C3D47B8AE3505F0F227B989D61FF28CAF561F1FC4C2CE06D8FED7F4653F57 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xAA8 PUSH32 0x9D9A31A039450327C9B952ED312D5E49918B35BEE5146BA139C271223D5B241B PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xAD4 PUSH32 0xD64CECE30771137043DFF4FACB9DA2C842515947D40A55ACE7780556F51C0AA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xAE0 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0xB0C PUSH32 0x3FE40E91DD1537B2180646A9002B731FB7328D51052F25B36D10AD63C3ECED9C PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xB38 PUSH32 0x15DDC9631384152DCAC66DC1AAD0B42156D6FD34F298DFA1B15B36E6256848C3 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xB42 DUP5 DUP4 PUSH2 0x1380 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3C PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x2A43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC00 PUSH32 0xCB2246B71CF42DC859CC1208BDFED13BDAC5645A6A1868B2352E969E0E5954B0 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xC2C PUSH32 0xA53851F3919261F5E7987D27048A0EE0D1163285162C94949FF0287BEA421BAA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xC58 PUSH32 0x8DF13CB44A889C5A1DC943ED7607111BCEC10B61211A75565F77A1367D580201 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH1 0x3E PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC9F PUSH32 0xB25FEE3DD43EB7AE13392E429ABC836BBD3796A3E6FB1E374AA6F110C7F8F235 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xCCB PUSH32 0xCA730240A2790B197CD1FAB4FF25650191FE7C057E38AFBB626E0367D57666DE PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH32 0xCC071CBD9AE50A4C78D1153B76BD2D46BA8D4C7662842718EC3DE1D67A144DAF DUP2 PUSH1 0x40 MLOAD PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD33 PUSH32 0x4120AFBD551F72C4162881E2279D37710E95051AED61563A07C660D68E2AF54B PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xD5F PUSH32 0xA115CC73960E281C4E22FD8C5CA0EEE26D4967AD430B0FE23D3EBFC2BB09858D PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xD8B PUSH32 0x1E7D333BB04DF98D810B7344E90D1CC157A3449C8458F2F06F9B4F7AFE918F88 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xD97 DUP6 DUP6 DUP6 DUP6 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xDE7 DUP3 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE22 SWAP1 PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xE63 JUMPI PUSH2 0xE56 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE49 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1796 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE31 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAA SWAP1 PUSH2 0x29E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE9 PUSH32 0x9FB33DD966C858B2F8F89EEF0965AF4038B7D5C69CCC47C4E8D3F2F882D6250E PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xF15 PUSH32 0x753A86B1BD11A4E2902A48DA439A4D219E83FDB0601350F629A63C98C06D31DC PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xF41 PUSH32 0xA495C0BA562E81D488EB842EDD4DD1BAA0B8AA4F1E22EC13E7B7E1C095BB8EBF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xF6D PUSH32 0x141B3D031771B9927F876B72FB03C2EF9A4142DD93C99FF7AE967748323CEA0 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 SLOAD DUP4 LT PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA8 SWAP1 PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDD PUSH32 0x3745F1C45124CD6DA85BBFDB606A6D2186BDEB773F837022957930DAD86E9DD3 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1009 PUSH32 0x47C9EFE5E4B2618E76780F5D68A2EE31FB2740FB360AFF79B99B9DF3D14478EA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1035 PUSH32 0x7B48C738497FC9946365EEFE78B7CB4FA050CB385284E5C48368E5EF339ED4BF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1061 PUSH32 0xC2A8D258CAC4050648894ADE99F1E59483C2E966E67B61BBB2E42730741F521F PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x3F PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F6 SWAP1 PUSH2 0x2AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112B PUSH32 0x4A80E0E573E988668E4579C43A5ED8FF1625B218ED20D04B1C73BB0CD1115D47 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1157 PUSH32 0x2318A8E8AF4CB85595D813D2CA6331656DE9E3C3441EE3A9F6875178EDEFF556 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1183 PUSH32 0x52C5613C253FBD45B484E65555006C9E8F2E6D6D98CD20C24093851E14C85BBF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x11AF PUSH32 0xE0538246DFC17E22342C85D56E378BDAEDAEB83405500730E3DBF88B2B381DD5 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x11BB DUP5 DUP5 DUP5 DUP5 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x11FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F1 SWAP1 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1226 PUSH32 0x5CA746D6737080DFB4631E5C81FD0303B52FDC64DBC5425FCF0DDC2C0D82B5BB PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1252 PUSH32 0xCBC59D33E8575EE8BD663B5379CEA23A3B9518207936E6208613EDBCB0D19320 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x127E PUSH32 0xB566C23468DA0E715603425D86E31913B4F49C7E7F0DD8DEA2B8B1A808275D3B PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3F PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1313 PUSH32 0xBBCA39356EA3CF0CA4C94F93A02A0FCA1F1EE247A5CECA7CB670802F1135E526 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x133F PUSH32 0x322B55665E4A5D47939F04C0658EA8615AF17F2A4F65DBA4BAE2E96A9CB47338 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1372 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x13AC PUSH32 0x8C0A6A75C86B86A8D09A89B12D473938E9B3B704CD7A1C87CCDA9A0A0375A120 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x13D8 PUSH32 0x2D2DDBF4742BA7BEA9C529E00F1037A9D2F0B6BA21950C451125356EDDBAF17F PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1404 PUSH32 0xE95D2831F4D25C583F25AB788852EF1FC10D8C71E493664A46133B7658C37BF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x14E3 JUMPI PUSH2 0x1439 PUSH32 0x35BCFAA19A2519AD036A401D54324B30ED6375D5707C0EE0CC2D5774059B5CE5 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1465 PUSH32 0x42B1660E00749B5834DA2FE4FA559826B8B1076658C763FF8EE76A771D3D1920 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1491 PUSH32 0x3091DC5AE9AAF00DB2627771F622F5AC8F597D0E0EFB8D5E2445AFF777D4B957 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x14DE DUP3 DUP3 PUSH1 0x3D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1931 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x150F PUSH32 0xD143CD9C10493117D1928BE7091A988B8F285D0359CF3CC3177F3C9808AF83EA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x153B PUSH32 0x546386EA249E93E6CAA7D947C4EFBD68EC80805F8FA178E7D9A673ED09AA36FA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1567 PUSH32 0x356F5DA3D4A4CE695D5F6681309176D5E522CEB4444BD4501B1012883E0867D5 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1599 SWAP1 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D4 PUSH32 0x67491226C0DD091FAFFE2D2A855EBD357AC33613BAA94B34587A98D47577ACF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1600 PUSH32 0x2539E0DFA0AA61AA3831219E55D54C9EA304F5DDC42975238409372C610FFE50 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x162C PUSH32 0x21B0F5010D767A2E586C2975B144B997DE2F1CBC79F35199E9545CDBEABA5434 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1641 SWAP3 SWAP2 SWAP1 PUSH2 0x2769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1685 PUSH32 0xD28BE919CB7F66AC4BE0461205BA7F594920370F4EDCEF86CB63951C18FB1229 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x16B1 PUSH32 0x221168B819CE3D8ADF323916DD392A0B79C274CAAB6D9D81B08449699C20A505 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x16CF DUP4 PUSH1 0x3E PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x19D0 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x174A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1741 SWAP1 PUSH2 0x2983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1793 PUSH2 0x1A7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1806 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FD SWAP1 PUSH2 0x2B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188A SWAP1 PUSH2 0x2AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3C PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x19CB DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1969 SWAP3 SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19F3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1A34 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A17 SWAP3 SWAP2 SWAP1 PUSH2 0x2795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x1A60 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A47 SWAP3 SWAP2 SWAP1 PUSH2 0x2795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x19DC JUMP JUMPDEST POP DUP4 DUP2 EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A88 SWAP1 PUSH2 0x2841 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1AA2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x34 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1ABC SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x35 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1AD6 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x36 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1AF0 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x37 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1B0A SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x38 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1B24 SWAP1 PUSH2 0x286B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x39 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1B3E SWAP1 PUSH2 0x27D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x3A DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1B6D DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA3 SWAP1 PUSH2 0x2B43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BD5 SWAP2 SWAP1 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C12 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1C5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C53 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1CBA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH2 0x1C7A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1CB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB0 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x1D02 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1A DUP2 PUSH2 0x2D96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1D32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1D63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D8E PUSH2 0x1D89 DUP3 PUSH2 0x2BE2 JUMP JUMPDEST PUSH2 0x2BB5 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DE3 JUMPI DUP2 PUSH2 0x1DC9 DUP9 DUP3 PUSH2 0x1E02 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DB6 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DFC DUP2 PUSH2 0x2DAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E11 DUP2 PUSH2 0x2DC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E26 DUP2 PUSH2 0x2DDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E3B DUP2 PUSH2 0x2DF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E61 DUP5 DUP3 DUP6 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E90 DUP9 DUP3 DUP10 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EB9 DUP9 DUP3 DUP10 ADD PUSH2 0x1D20 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 PUSH2 0x1ECC DUP9 DUP3 DUP10 ADD PUSH2 0x1E17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1EDD DUP9 DUP3 DUP10 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F0E DUP8 DUP3 DUP9 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F1F DUP8 DUP3 DUP9 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F30 DUP8 DUP3 DUP9 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F59 DUP8 DUP3 DUP9 ADD PUSH2 0x1D6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F85 DUP5 DUP3 DUP6 ADD PUSH2 0x1DED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FAE DUP5 DUP3 DUP6 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD8 DUP6 DUP3 DUP7 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2013 DUP5 DUP3 DUP6 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x203D DUP6 DUP3 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x204E DUP6 DUP3 DUP7 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2061 DUP2 PUSH2 0x2CA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2070 DUP2 PUSH2 0x2C3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2087 PUSH2 0x2082 DUP3 PUSH2 0x2C3C JUMP JUMPDEST PUSH2 0x2D51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2096 DUP2 PUSH2 0x2C4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20A5 DUP2 PUSH2 0x2C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20BC PUSH2 0x20B7 DUP3 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x2D63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CD DUP3 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x20D7 DUP2 DUP6 PUSH2 0x2C15 JUMP JUMPDEST SWAP4 POP PUSH2 0x20E7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D1E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20FC DUP2 PUSH2 0x2CB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x210B DUP2 PUSH2 0x2CD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211E PUSH1 0x15 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E657875732061646472657373206973207A65726F0000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215E PUSH1 0xE DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x536176696E67734D616E61676572000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xE DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219E PUSH1 0x1C DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5765656B2063616E6E6F7420626520696E207468652066757475726500000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DE PUSH1 0x7 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x5374616B696E6700000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x7 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221E PUSH1 0x16 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E636F7272656374206D65726B6C652070726F6F6600000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225E PUSH1 0x1B DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229E PUSH1 0x10 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x5265636F6C6C61746572616C6973657200000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x10 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22DE PUSH1 0x20 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231E PUSH1 0x7 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D616E6167657200000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x7 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235E PUSH1 0x15 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x456D7074792077686974656C6973742061727261790000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239E PUSH1 0x19 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420612077686974656C6973746564206164647265737300000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DE PUSH1 0x9 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F7261636C654875620000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241E PUSH1 0xA DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x476F7665726E616E636500000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245E PUSH1 0xA DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x50726F787941646D696E00000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249E PUSH1 0x2E DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x436F6E747261637420696E7374616E63652068617320616C7265616479206265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x656E20696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2504 PUSH1 0x1D DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5265776172647320617265206E6F742079657420636C61696D61626C65000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2544 PUSH1 0x13 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x416C72656164792077686974656C697374656400000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2584 PUSH1 0x3D DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F2062616C616E636520776F756C64206265207472616E7366657272656420 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2D206E6F7420676F696E6720746F20776173746520796F757220676173000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EA PUSH1 0x16 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x4C502068617320616C726561647920636C61696D656400000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262A PUSH1 0xF DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x41646472657373206973207A65726F0000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266A PUSH1 0x2A DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D0 PUSH1 0x9 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D657461546F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x1F DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274C DUP2 PUSH2 0x2C96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2763 PUSH2 0x275E DUP3 PUSH2 0x2C96 JUMP JUMPDEST PUSH2 0x2D7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2775 DUP3 DUP6 PUSH2 0x2076 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2785 DUP3 DUP5 PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A1 DUP3 DUP6 PUSH2 0x20AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x27B1 DUP3 DUP5 PUSH2 0x20AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27CD DUP3 DUP5 PUSH2 0x20C2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E3 DUP3 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F8 DUP3 PUSH2 0x21D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280D DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2822 DUP3 PUSH2 0x2311 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2837 DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284C DUP3 PUSH2 0x2411 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2861 DUP3 PUSH2 0x2451 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2876 DUP3 PUSH2 0x26C3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2895 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x28A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x28AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x28D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x2902 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x290F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x292C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x208D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2947 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x209C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2962 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x297D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x299C DUP2 PUSH2 0x2111 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BC DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29DC DUP2 PUSH2 0x2211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29FC DUP2 PUSH2 0x2251 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A1C DUP2 PUSH2 0x22D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A3C DUP2 PUSH2 0x2351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A5C DUP2 PUSH2 0x2391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A7C DUP2 PUSH2 0x2491 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A9C DUP2 PUSH2 0x24F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ABC DUP2 PUSH2 0x2537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ADC DUP2 PUSH2 0x2577 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AFC DUP2 PUSH2 0x25DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B1C DUP2 PUSH2 0x261D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B3C DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B5C DUP2 PUSH2 0x2703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B93 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x2BA0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x2BAD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2BD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C47 DUP3 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C6F DUP3 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAB DUP3 PUSH2 0x2CFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBD DUP3 PUSH2 0x2CC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CCF DUP3 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE1 DUP3 PUSH2 0x2CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF3 DUP3 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D05 DUP3 PUSH2 0x2D0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D17 DUP3 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D3C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D21 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2D4B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5C DUP3 PUSH2 0x2D6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D78 DUP3 PUSH2 0x2D89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D9F DUP2 PUSH2 0x2C3C JUMP JUMPDEST DUP2 EQ PUSH2 0x2DAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2DB6 DUP2 PUSH2 0x2C4E JUMP JUMPDEST DUP2 EQ PUSH2 0x2DC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2DCD DUP2 PUSH2 0x2C5A JUMP JUMPDEST DUP2 EQ PUSH2 0x2DD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2DE4 DUP2 PUSH2 0x2C64 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2DFB DUP2 PUSH2 0x2C96 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 PUSH18 0xC3B6891B4F7225A43DF3CB39F3F023E5CAA4 SLT 0xC4 PUSH25 0x804066B7E6CDCD86E5856C6578706572696D656E74616CF564 PUSH20 0x6F6C634300051000400000000000000000000000 ",
              "sourceMap": "2086:10191:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2086:10191:5;;;;;;;"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9B19251A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xA3F5C1D2 EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0xCD54E72C EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xD5EFD20A EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xEB0D07F5 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x255 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0xAF49690 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x120AA877 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x29EB15BD EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x4AB54113 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x65EF53B1 EQ PUSH2 0x13F JUMPI DUP1 PUSH4 0x71C5ECB1 EQ PUSH2 0x16F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0xCE SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E6A JUMP JUMPDEST PUSH2 0x273 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0xEA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x201C JUMP JUMPDEST PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10D PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x138 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F8E JUMP JUMPDEST PUSH2 0x55D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x159 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x154 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1FB7 JUMP JUMPDEST PUSH2 0x560 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x184 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x1B4 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x915 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D7 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x2968 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x202 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x95B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x223 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x21E SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH2 0xB48 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH2 0x23A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0xDA1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x294D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x292 JUMPI POP PUSH2 0x291 PUSH2 0xDC7 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x2A9 JUMPI POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST PUSH2 0x2E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2DF SWAP1 PUSH2 0x2A63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP DUP1 ISZERO PUSH2 0x338 JUMPI PUSH1 0x1 PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x364 PUSH32 0x4D1F1914B463A1DF1F22B59173999D66E00F3EB3D93C96078461089741FE4D5E PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x390 PUSH32 0xC8680AA51866DD28C964D9FF1C468F13F265FE9194778743696982959F15427D PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x3BC PUSH32 0x70FE7550A8292996773C6A8EFF9EC604D6B1D620F9156D62DD56D6D03F4C32E7 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x407 DUP7 DUP7 DUP7 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0xDDE JUMP JUMPDEST PUSH2 0x433 PUSH32 0x385BF05ED975AD04A29CC2EB3247C8AC8616E8D86C9BA33B9B0D08FADF60AF84 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x45F PUSH32 0xFBC3BD7C8006D11293559A2FC66269990912023C448C136E614153FC2C32D6EF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST DUP3 PUSH1 0x3D PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x4CC PUSH32 0xE42A82D9FA7823147604AD67F7B08ADA48E84B9EEB027D33184483DE97E82E31 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x4F8 PUSH32 0xD02459CA4862F780AF681F03433968B6771628F812870E5417F5B05BC9DB0D58 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST DUP2 PUSH1 0x41 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x520 JUMPI PUSH1 0x0 DUP1 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3F PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x41 SLOAD DUP2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E5 SWAP1 PUSH2 0x2A43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x61A PUSH32 0x315242968DED7F9B8330ECDF39CD461AE225B1DD1C38FC2536D74C369DFD74D0 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x646 PUSH32 0xFD95CD135356267E96E3C8C576F3833111CFEC8AA740B2821393E1F3FC5FDD2 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x672 PUSH32 0x749A4B491E3EC8FC2CB8DD3E93F98BAFD712A0AF5865715BC89E1D2684DC7AC9 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x3D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2880 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH2 0x723 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F65 JUMP JUMPDEST POP PUSH2 0x750 PUSH32 0x7E59ECA5C1B43081618504B2EAE7DAFCD7D96EE5322BEBAE630F76584F41BFAB PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x77C PUSH32 0x3A93024CE5728EE64CADDE0938C9C042DEEBC612EF167257DC7F368A78541876 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 SLOAD SWAP1 POP PUSH2 0x7AD PUSH32 0xA7F574C7B0914DF10A5FE3A8284183FBD5431065E496A438C360F4E1C25DD179 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x7D9 PUSH32 0x5DECC1AB22BD380340728F8694AD62B00EA8AA9406A7010794E0154833402EFB PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST DUP3 PUSH1 0x3E PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x81C PUSH31 0x2ACD07252EB07396B2C478DFF5A0ED494BDC18C8CD07E17A4F33FF2F19A0D4 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x848 PUSH32 0x49390CD3CC5042D04BF5D0AE87A01A4E0F362FF57220568B760BA522CE54D2CD PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x85E PUSH1 0x1 PUSH1 0x40 SLOAD PUSH2 0xE68 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 DUP2 SWAP1 SSTORE POP PUSH2 0x890 PUSH32 0x76B45C8CA2920B270A814FCFCE414073DAF1E556C52F0982E5A73937DC6289DD PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x8BC PUSH32 0x827C235BE2940A85524432AF8ECA279D66AD8263399E2C6FC891F394EABC7E7 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH32 0x5C8770684B8F82E9ADE880FB05CCFB53C969170CD40E9746A3703F241C9023EC DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x8EF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2B7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3E PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x3B PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x987 PUSH32 0xAB16FFFA5EC9834F3683233E5B122597E09C374015ADE8003F6D0B2137D2574F PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x9B3 PUSH32 0xE6F1CB7B569C87117B0299A8FE4E1E368FE7384C6414DEC90881263FD3E4D35C PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x9DF PUSH32 0x5C2CAC338CDB0EB6FE73854BD6FC2DD3DBC38C1EABF140F89C507B6767A91658 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xA0B PUSH32 0xDA5FA761BFAE6F8742D60AF8E9B1D1DC279E1413FF2B020F274EFB0F752C5E6E PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x41 SLOAD NUMBER LT ISZERO PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA47 SWAP1 PUSH2 0x2A83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA7C PUSH32 0x1D5C3D47B8AE3505F0F227B989D61FF28CAF561F1FC4C2CE06D8FED7F4653F57 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xAA8 PUSH32 0x9D9A31A039450327C9B952ED312D5E49918B35BEE5146BA139C271223D5B241B PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xAD4 PUSH32 0xD64CECE30771137043DFF4FACB9DA2C842515947D40A55ACE7780556F51C0AA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xAE0 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEBD JUMP JUMPDEST PUSH2 0xB0C PUSH32 0x3FE40E91DD1537B2180646A9002B731FB7328D51052F25B36D10AD63C3ECED9C PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xB38 PUSH32 0x15DDC9631384152DCAC66DC1AAD0B42156D6FD34F298DFA1B15B36E6256848C3 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xB42 DUP5 DUP4 PUSH2 0x1380 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x3C PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x2A43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC00 PUSH32 0xCB2246B71CF42DC859CC1208BDFED13BDAC5645A6A1868B2352E969E0E5954B0 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xC2C PUSH32 0xA53851F3919261F5E7987D27048A0EE0D1163285162C94949FF0287BEA421BAA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xC58 PUSH32 0x8DF13CB44A889C5A1DC943ED7607111BCEC10B61211A75565F77A1367D580201 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH1 0x3E PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xC9F PUSH32 0xB25FEE3DD43EB7AE13392E429ABC836BBD3796A3E6FB1E374AA6F110C7F8F235 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xCCB PUSH32 0xCA730240A2790B197CD1FAB4FF25650191FE7C057E38AFBB626E0367D57666DE PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH32 0xCC071CBD9AE50A4C78D1153B76BD2D46BA8D4C7662842718EC3DE1D67A144DAF DUP2 PUSH1 0x40 MLOAD PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x2B63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD33 PUSH32 0x4120AFBD551F72C4162881E2279D37710E95051AED61563A07C660D68E2AF54B PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xD5F PUSH32 0xA115CC73960E281C4E22FD8C5CA0EEE26D4967AD430B0FE23D3EBFC2BB09858D PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xD8B PUSH32 0x1E7D333BB04DF98D810B7344E90D1CC157A3449C8458F2F06F9B4F7AFE918F88 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xD97 DUP6 DUP6 DUP6 DUP6 PUSH2 0x15A6 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS SWAP1 POP PUSH1 0x0 DUP2 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0xDE7 DUP3 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xE2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE22 SWAP1 PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xE63 JUMPI PUSH2 0xE56 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xE49 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1796 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE31 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xEB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEAA SWAP1 PUSH2 0x29E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xEE9 PUSH32 0x9FB33DD966C858B2F8F89EEF0965AF4038B7D5C69CCC47C4E8D3F2F882D6250E PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xF15 PUSH32 0x753A86B1BD11A4E2902A48DA439A4D219E83FDB0601350F629A63C98C06D31DC PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xF41 PUSH32 0xA495C0BA562E81D488EB842EDD4DD1BAA0B8AA4F1E22EC13E7B7E1C095BB8EBF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0xF6D PUSH32 0x141B3D031771B9927F876B72FB03C2EF9A4142DD93C99FF7AE967748323CEA0 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 SLOAD DUP4 LT PUSH2 0xFB1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA8 SWAP1 PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xFDD PUSH32 0x3745F1C45124CD6DA85BBFDB606A6D2186BDEB773F837022957930DAD86E9DD3 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1009 PUSH32 0x47C9EFE5E4B2618E76780F5D68A2EE31FB2740FB360AFF79B99B9DF3D14478EA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1035 PUSH32 0x7B48C738497FC9946365EEFE78B7CB4FA050CB385284E5C48368E5EF339ED4BF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1061 PUSH32 0xC2A8D258CAC4050648894ADE99F1E59483C2E966E67B61BBB2E42730741F521F PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x3F PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F6 SWAP1 PUSH2 0x2AE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x112B PUSH32 0x4A80E0E573E988668E4579C43A5ED8FF1625B218ED20D04B1C73BB0CD1115D47 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1157 PUSH32 0x2318A8E8AF4CB85595D813D2CA6331656DE9E3C3441EE3A9F6875178EDEFF556 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1183 PUSH32 0x52C5613C253FBD45B484E65555006C9E8F2E6D6D98CD20C24093851E14C85BBF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x11AF PUSH32 0xE0538246DFC17E22342C85D56E378BDAEDAEB83405500730E3DBF88B2B381DD5 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x11BB DUP5 DUP5 DUP5 DUP5 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x11FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F1 SWAP1 PUSH2 0x29C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1226 PUSH32 0x5CA746D6737080DFB4631E5C81FD0303B52FDC64DBC5425FCF0DDC2C0D82B5BB PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1252 PUSH32 0xCBC59D33E8575EE8BD663B5379CEA23A3B9518207936E6208613EDBCB0D19320 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x127E PUSH32 0xB566C23468DA0E715603425D86E31913B4F49C7E7F0DD8DEA2B8B1A808275D3B PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3F PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1313 PUSH32 0xBBCA39356EA3CF0CA4C94F93A02A0FCA1F1EE247A5CECA7CB670802F1135E526 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x133F PUSH32 0x322B55665E4A5D47939F04C0658EA8615AF17F2A4F65DBA4BAE2E96A9CB47338 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1372 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x13AC PUSH32 0x8C0A6A75C86B86A8D09A89B12D473938E9B3B704CD7A1C87CCDA9A0A0375A120 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x13D8 PUSH32 0x2D2DDBF4742BA7BEA9C529E00F1037A9D2F0B6BA21950C451125356EDDBAF17F PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1404 PUSH32 0xE95D2831F4D25C583F25AB788852EF1FC10D8C71E493664A46133B7658C37BF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x14E3 JUMPI PUSH2 0x1439 PUSH32 0x35BCFAA19A2519AD036A401D54324B30ED6375D5707C0EE0CC2D5774059B5CE5 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1465 PUSH32 0x42B1660E00749B5834DA2FE4FA559826B8B1076658C763FF8EE76A771D3D1920 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1491 PUSH32 0x3091DC5AE9AAF00DB2627771F622F5AC8F597D0E0EFB8D5E2445AFF777D4B957 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x14DE DUP3 DUP3 PUSH1 0x3D PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1931 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x150F PUSH32 0xD143CD9C10493117D1928BE7091A988B8F285D0359CF3CC3177F3C9808AF83EA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x153B PUSH32 0x546386EA249E93E6CAA7D947C4EFBD68EC80805F8FA178E7D9A673ED09AA36FA PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1567 PUSH32 0x356F5DA3D4A4CE695D5F6681309176D5E522CEB4444BD4501B1012883E0867D5 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1599 SWAP1 PUSH2 0x2AC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15D4 PUSH32 0x67491226C0DD091FAFFE2D2A855EBD357AC33613BAA94B34587A98D47577ACF PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x1600 PUSH32 0x2539E0DFA0AA61AA3831219E55D54C9EA304F5DDC42975238409372C610FFE50 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x162C PUSH32 0x21B0F5010D767A2E586C2975B144B997DE2F1CBC79F35199E9545CDBEABA5434 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1641 SWAP3 SWAP2 SWAP1 PUSH2 0x2769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1685 PUSH32 0xD28BE919CB7F66AC4BE0461205BA7F594920370F4EDCEF86CB63951C18FB1229 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x16B1 PUSH32 0x221168B819CE3D8ADF323916DD392A0B79C274CAAB6D9D81B08449699C20A505 PUSH1 0x0 SHL PUSH2 0x55D JUMP JUMPDEST PUSH2 0x16CF DUP4 PUSH1 0x3E PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 PUSH2 0x19D0 JUMP JUMPDEST SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x174A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1741 SWAP1 PUSH2 0x2983 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3B PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1793 PUSH2 0x1A7C JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1806 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17FD SWAP1 PUSH2 0x2B03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3C PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1893 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x188A SWAP1 PUSH2 0x2AA3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3C PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x19CB DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB SWAP1 POP PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1969 SWAP3 SWAP2 SWAP1 PUSH2 0x28B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1B4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x1A6E JUMPI PUSH1 0x0 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x19F3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 DUP4 GT PUSH2 0x1A34 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A17 SWAP3 SWAP2 SWAP1 PUSH2 0x2795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP PUSH2 0x1A60 JUMP JUMPDEST DUP1 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1A47 SWAP3 SWAP2 SWAP1 PUSH2 0x2795 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP3 POP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x19DC JUMP JUMPDEST POP DUP4 DUP2 EQ SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A88 SWAP1 PUSH2 0x2841 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x33 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1AA2 SWAP1 PUSH2 0x27ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x34 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1ABC SWAP1 PUSH2 0x2856 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x35 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1AD6 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x36 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1AF0 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x37 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1B0A SWAP1 PUSH2 0x2802 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x38 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1B24 SWAP1 PUSH2 0x286B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x39 DUP2 SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH2 0x1B3E SWAP1 PUSH2 0x27D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x3A DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1B6D DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CC0 JUMP JUMPDEST PUSH2 0x1BAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BA3 SWAP1 PUSH2 0x2B43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BD5 SWAP2 SWAP1 PUSH2 0x27C1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1C12 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C17 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1C5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C53 SWAP1 PUSH2 0x2A03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1CBA JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH2 0x1C7A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1F65 JUMP JUMPDEST PUSH2 0x1CB9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CB0 SWAP1 PUSH2 0x2B23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 PUSH1 0x0 SHL SWAP1 POP DUP4 EXTCODEHASH SWAP2 POP DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x1D02 JUMPI POP PUSH1 0x0 DUP1 SHL DUP3 EQ ISZERO JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1A DUP2 PUSH2 0x2D96 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1D32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1D63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D8E PUSH2 0x1D89 DUP3 PUSH2 0x2BE2 JUMP JUMPDEST PUSH2 0x2BB5 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x1DB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DE3 JUMPI DUP2 PUSH2 0x1DC9 DUP9 DUP3 PUSH2 0x1E02 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1DB6 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1DFC DUP2 PUSH2 0x2DAD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E11 DUP2 PUSH2 0x2DC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E26 DUP2 PUSH2 0x2DDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E3B DUP2 PUSH2 0x2DF2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E61 DUP5 DUP3 DUP6 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1E82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1E90 DUP9 DUP3 DUP10 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EB9 DUP9 DUP3 DUP10 ADD PUSH2 0x1D20 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x40 PUSH2 0x1ECC DUP9 DUP3 DUP10 ADD PUSH2 0x1E17 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1EDD DUP9 DUP3 DUP10 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F0E DUP8 DUP3 DUP9 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F1F DUP8 DUP3 DUP9 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F30 DUP8 DUP3 DUP9 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F59 DUP8 DUP3 DUP9 ADD PUSH2 0x1D6A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1F85 DUP5 DUP3 DUP6 ADD PUSH2 0x1DED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FAE DUP5 DUP3 DUP6 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FD8 DUP6 DUP3 DUP7 ADD PUSH2 0x1E02 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2005 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2013 DUP5 DUP3 DUP6 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x203D DUP6 DUP3 DUP7 ADD PUSH2 0x1E2C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x204E DUP6 DUP3 DUP7 ADD PUSH2 0x1D0B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2061 DUP2 PUSH2 0x2CA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2070 DUP2 PUSH2 0x2C3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2087 PUSH2 0x2082 DUP3 PUSH2 0x2C3C JUMP JUMPDEST PUSH2 0x2D51 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2096 DUP2 PUSH2 0x2C4E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20A5 DUP2 PUSH2 0x2C5A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20BC PUSH2 0x20B7 DUP3 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x2D63 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20CD DUP3 PUSH2 0x2C0A JUMP JUMPDEST PUSH2 0x20D7 DUP2 DUP6 PUSH2 0x2C15 JUMP JUMPDEST SWAP4 POP PUSH2 0x20E7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2D1E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20FC DUP2 PUSH2 0x2CB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x210B DUP2 PUSH2 0x2CD6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211E PUSH1 0x15 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E657875732061646472657373206973207A65726F0000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215E PUSH1 0xE DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x536176696E67734D616E61676572000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xE DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219E PUSH1 0x1C DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5765656B2063616E6E6F7420626520696E207468652066757475726500000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DE PUSH1 0x7 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x5374616B696E6700000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x7 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221E PUSH1 0x16 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x496E636F7272656374206D65726B6C652070726F6F6600000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x225E PUSH1 0x1B DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229E PUSH1 0x10 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x5265636F6C6C61746572616C6973657200000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x10 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22DE PUSH1 0x20 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x231E PUSH1 0x7 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D616E6167657200000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x7 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x235E PUSH1 0x15 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x456D7074792077686974656C6973742061727261790000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x239E PUSH1 0x19 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F7420612077686974656C6973746564206164647265737300000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DE PUSH1 0x9 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x4F7261636C654875620000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x241E PUSH1 0xA DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x476F7665726E616E636500000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245E PUSH1 0xA DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x50726F787941646D696E00000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0xA DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x249E PUSH1 0x2E DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x436F6E747261637420696E7374616E63652068617320616C7265616479206265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x656E20696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2504 PUSH1 0x1D DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5265776172647320617265206E6F742079657420636C61696D61626C65000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2544 PUSH1 0x13 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x416C72656164792077686974656C697374656400000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2584 PUSH1 0x3D DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x4E6F2062616C616E636520776F756C64206265207472616E7366657272656420 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2D206E6F7420676F696E6720746F20776173746520796F757220676173000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25EA PUSH1 0x16 DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x4C502068617320616C726561647920636C61696D656400000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x262A PUSH1 0xF DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x41646472657373206973207A65726F0000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x266A PUSH1 0x2A DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26D0 PUSH1 0x9 DUP4 PUSH2 0x2C31 JUMP JUMPDEST SWAP2 POP PUSH32 0x4D657461546F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2710 PUSH1 0x1F DUP4 PUSH2 0x2C20 JUMP JUMPDEST SWAP2 POP PUSH32 0x5361666545524332303A2063616C6C20746F206E6F6E2D636F6E747261637400 PUSH1 0x0 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x274C DUP2 PUSH2 0x2C96 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2763 PUSH2 0x275E DUP3 PUSH2 0x2C96 JUMP JUMPDEST PUSH2 0x2D7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2775 DUP3 DUP6 PUSH2 0x2076 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x2785 DUP3 DUP5 PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27A1 DUP3 DUP6 PUSH2 0x20AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x27B1 DUP3 DUP5 PUSH2 0x20AB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27CD DUP3 DUP5 PUSH2 0x20C2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27E3 DUP3 PUSH2 0x2151 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27F8 DUP3 PUSH2 0x21D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280D DUP3 PUSH2 0x2291 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2822 DUP3 PUSH2 0x2311 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2837 DUP3 PUSH2 0x23D1 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x284C DUP3 PUSH2 0x2411 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2861 DUP3 PUSH2 0x2451 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2876 DUP3 PUSH2 0x26C3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2895 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2058 JUMP JUMPDEST PUSH2 0x28A2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x28AF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28CC PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x28D9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28F5 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x2902 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x290F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x292C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x208D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2947 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x209C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2962 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x297D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2102 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x299C DUP2 PUSH2 0x2111 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29BC DUP2 PUSH2 0x2191 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29DC DUP2 PUSH2 0x2211 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x29FC DUP2 PUSH2 0x2251 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A1C DUP2 PUSH2 0x22D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A3C DUP2 PUSH2 0x2351 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A5C DUP2 PUSH2 0x2391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A7C DUP2 PUSH2 0x2491 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A9C DUP2 PUSH2 0x24F7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ABC DUP2 PUSH2 0x2537 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ADC DUP2 PUSH2 0x2577 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AFC DUP2 PUSH2 0x25DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B1C DUP2 PUSH2 0x261D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B3C DUP2 PUSH2 0x265D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B5C DUP2 PUSH2 0x2703 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B78 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B93 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x2BA0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x209C JUMP JUMPDEST PUSH2 0x2BAD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2BD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2BF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C47 DUP3 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C6F DUP3 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAB DUP3 PUSH2 0x2CFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CBD DUP3 PUSH2 0x2CC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CCF DUP3 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CE1 DUP3 PUSH2 0x2CE8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CF3 DUP3 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D05 DUP3 PUSH2 0x2D0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D17 DUP3 PUSH2 0x2C76 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2D3C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2D21 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2D4B JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D5C DUP3 PUSH2 0x2D6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D78 DUP3 PUSH2 0x2D89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D9F DUP2 PUSH2 0x2C3C JUMP JUMPDEST DUP2 EQ PUSH2 0x2DAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2DB6 DUP2 PUSH2 0x2C4E JUMP JUMPDEST DUP2 EQ PUSH2 0x2DC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2DCD DUP2 PUSH2 0x2C5A JUMP JUMPDEST DUP2 EQ PUSH2 0x2DD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2DE4 DUP2 PUSH2 0x2C64 JUMP JUMPDEST DUP2 EQ PUSH2 0x2DEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2DFB DUP2 PUSH2 0x2C96 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 PUSH18 0xC3B6891B4F7225A43DF3CB39F3F023E5CAA4 SLT 0xC4 PUSH25 0x804066B7E6CDCD86E5856C6578706572696D656E74616CF564 PUSH20 0x6F6C634300051000400000000000000000000000 ",
              "sourceMap": "2086:10191:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2086:10191:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2737:1006;;;;;;;;;;;;;;;;:::i;:::-;;2613:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2701:29;;;:::i;:::-;;;;;;;;;;;;;;;;2159:59;;;;;;;;;;;;;;;;:::i;:::-;;3867:1481;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2561:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;660:41:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;444:19:2;;;:::i;:::-;;;;;;;;;;;;;;;;6146:1237:5;;;;;;;;;;;;;;;;:::i;:::-;;5354:665;;;;;;;;;;;;;;;;:::i;:::-;;7390:576;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2535:19;;;:::i;:::-;;;;;;;;;;;;;;;;2737:1006;1024:12:4;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2922::5;2935:66;2922:80;;:12;:80::i;:::-;3021;3034:66;3021:80;;:12;:80::i;:::-;3123;3136:66;3123:80;;:12;:80::i;:::-;3222:62;3267:6;3275:8;;3222:62;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3222:62:5;;;;;;:44;:62::i;:::-;3286:80;3299:66;3286:80;;:12;:80::i;:::-;3388;3401:66;3388:80;;:12;:80::i;:::-;3495:6;3487:5;;:14;;;;;;;;;;;;;;;;;;3503:80;3516:66;3503:80;;:12;:80::i;:::-;3605;3618:66;3605:80;;:12;:80::i;:::-;3721:15;3704:14;:32;;;;1268:14:4;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;2737:1006:5;;;;;;:::o;2613:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2701:29::-;;;;:::o;2159:59::-;;:::o;3867:1481::-;3998:17;849:9:0;:21;859:10;849:21;;;;;;;;;;;;;;;;;;;;;;;;;841:59;;;;;;;;;;;;;;;;;;;;;;4022:80:5;4035:66;4022:80;;:12;:80::i;:::-;4121;4134:66;4121:80;;:12;:80::i;:::-;4223;4236:66;4223:80;;:12;:80::i;:::-;4322:5;;;;;;;;;;;:18;;;4341:10;4361:4;4368:16;4322:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4322:63:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4322:63:5;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4322:63:5;;;;;;;;;;4388:80;4401:66;4388:80;;:12;:80::i;:::-;4490;4503:66;4490:80;;:12;:80::i;:::-;4601:8;;4589:20;;4611:80;4624:66;4611:80;;:12;:80::i;:::-;4713;4726:66;4713:80;;:12;:80::i;:::-;4837:11;4812;:22;4824:9;4812:22;;;;;;;;;;;:36;;;;4851:80;4864:66;4851:80;;:12;:80::i;:::-;4953;4966:66;4953:80;;:12;:80::i;:::-;5063:15;5076:1;5063:8;;:12;;:15;;;;:::i;:::-;5052:8;:26;;;;5081:80;5094:66;5081:80;;:12;:80::i;:::-;5183;5196:66;5183:80;;:12;:80::i;:::-;5287:54;5300:9;5311:11;5324:16;5287:54;;;;;;;;;;;;;;;;;3867:1481;;;;:::o;2561:46::-;;;;;;;;;;;;;;;;;:::o;660:41:0:-;;;;;;;;;;;;;;;;;;;;;;:::o;444:19:2:-;;;;;;;;;;;;;:::o;6146:1237:5:-;6311:80;6324:66;6311:80;;:12;:80::i;:::-;6410;6423:66;6410:80;;:12;:80::i;:::-;6512;6525:66;6512:80;;:12;:80::i;:::-;6612;6625:66;6612:80;;:12;:80::i;:::-;6735:14;;6719:12;:30;;6711:72;;;;;;;;;;;;;;;;;;;;;;6784:80;6797:66;6784:80;;:12;:80::i;:::-;6886;6899:66;6886:80;;:12;:80::i;:::-;6988;7001:66;6988:80;;:12;:80::i;:::-;7087:57;7101:8;7111;7121;7131:12;7087:13;:57::i;:::-;7146:80;7159:66;7146:80;;:12;:80::i;:::-;7248;7261:66;7248:80;;:12;:80::i;:::-;7347:29;7357:8;7367;7347:9;:29::i;:::-;6146:1237;;;;:::o;5354:665::-;849:9:0;:21;859:10;849:21;;;;;;;;;;;;;;;;;;;;;;;;;841:59;;;;;;;;;;;;;;;;;;;;;;5441:80:5;5454:66;5441:80;;:12;:80::i;:::-;5540;5553:66;5540:80;;:12;:80::i;:::-;5642;5655:66;5642:80;;:12;:80::i;:::-;5775:1;5767:10;;5741:11;:23;5753:10;5741:23;;;;;;;;;;;:36;;;;5780:80;5793:66;5780:80;;:12;:80::i;:::-;5882;5895:66;5882:80;;:12;:80::i;:::-;5986:26;6001:10;5986:26;;;;;;;;;;;;;;;5354:665;:::o;7390:576::-;7579:10;7596:80;7609:66;7596:80;;:12;:80::i;:::-;7695;7708:66;7695:80;;:12;:80::i;:::-;7797;7810:66;7797:80;;:12;:80::i;:::-;7903:56;7916:8;7926;7936;7946:12;7903;:56::i;:::-;7896:63;;7390:576;;;;;;:::o;2535:19::-;;;;;;;;;;;;;:::o;1409:498:4:-;1456:4;1797:12;1820:4;1797:28;;1831:10;1876:4;1864:17;1858:23;;1901:1;1895:2;:7;1888:14;;;;1409:498;:::o;1110:349:0:-;1231:39;1263:6;1231:31;:39::i;:::-;1311:1;1289:12;:19;:23;1281:57;;;;;;;;;;;;;;;;;;;;;;1353:9;1365:1;1353:13;;1349:104;1372:12;:19;1368:1;:23;1349:104;;;1412:30;1426:12;1439:1;1426:15;;;;;;;;;;;;;;1412:13;:30::i;:::-;1393:3;;;;;;;1349:104;;;;1110:349;;:::o;834:176:7:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;8100:2182:5:-;8267:80;8280:66;8267:80;;:12;:80::i;:::-;8366;8379:66;8366:80;;:12;:80::i;:::-;8468;8481:66;8468:80;;:12;:80::i;:::-;8568;8581:66;8568:80;;:12;:80::i;:::-;8686:8;;8675;:19;8667:60;;;;;;;;;;;;;;;;;;;;;;8728:80;8741:66;8728:80;;:12;:80::i;:::-;8831;8844:66;8831:80;;:12;:80::i;:::-;8933;8946:66;8933:80;;:12;:80::i;:::-;9033;9046:66;9033:80;;:12;:80::i;:::-;9141:7;:17;9149:8;9141:17;;;;;;;;;;;:27;9159:8;9141:27;;;;;;;;;;;;;;;;;;;;;;;;;9140:28;9132:63;;;;;;;;;;;;;;;;;;;;;;9196:80;9209:66;9196:80;;:12;:80::i;:::-;9298;9311:66;9298:80;;:12;:80::i;:::-;9400;9413:66;9400:80;;:12;:80::i;:::-;9500;9513:66;9500:80;;:12;:80::i;:::-;9607:56;9620:8;9630;9640;9650:12;9607;:56::i;:::-;9599:91;;;;;;;;;;;;;;;;;;;;;;9691:80;9704:66;9691:80;;:12;:80::i;:::-;9794;9807:66;9794:80;;:12;:80::i;:::-;9896;9909:66;9896:80;;:12;:80::i;:::-;10025:4;9995:7;:17;10003:8;9995:17;;;;;;;;;;;:27;10013:8;9995:27;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;10032:80;10045:66;10032:80;;:12;:80::i;:::-;10134;10147:66;10134:80;;:12;:80::i;:::-;10238:37;10246:8;10256;10266;10238:37;;;;;;;;;;;;;;;;;8100:2182;;;;:::o;11144:1131::-;11208:80;11221:66;11208:80;;:12;:80::i;:::-;11307;11320:66;11307:80;;:12;:80::i;:::-;11409;11422:66;11409:80;;:12;:80::i;:::-;11523:1;11512:8;:12;11508:761;;;11527:80;11540:66;11527:80;;:12;:80::i;:::-;11624;11637:66;11624:80;;:12;:80::i;:::-;11730;11743:66;11730:80;;:12;:80::i;:::-;11829:38;11848:8;11858;11829:5;;;;;;;;;;;:18;;;;:38;;;;;:::i;:::-;11508:761;;;11885:80;11898:66;11885:80;;:12;:80::i;:::-;11982;11995:66;11982:80;;:12;:80::i;:::-;12088;12101:66;12088:80;;:12;:80::i;:::-;12187:71;;;;;;;;;;;;;;;;;;;11508:761;11144:1131;;:::o;10289:848::-;10480:10;10497:80;10510:66;10497:80;;:12;:80::i;:::-;10596;10609:66;10596:80;;:12;:80::i;:::-;10698;10711:66;10698:80;;:12;:80::i;:::-;10797:12;10839:8;10849;10822:36;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10822:36:5;;;10812:47;;;;;;10797:62;;10861:80;10874:66;10861:80;;:12;:80::i;:::-;10963;10976:66;10963:80;;:12;:80::i;:::-;11069:61;11088:12;11102:11;:21;11114:8;11102:21;;;;;;;;;;;;11125:4;11069:18;:61::i;:::-;11062:68;;;10289:848;;;;;;:::o;1591:196:2:-;1673:1;1655:20;;:6;:20;;;;1647:54;;;;;;;;;;;;;;;;;;;;;;1726:6;1711:5;;:22;;;;;;;;;;;;;;;;;;1743:37;:35;:37::i;:::-;1591:196;:::o;1573:254:0:-;1661:1;1641:22;;:8;:22;;;;1633:50;;;;;;;;;;;;;;;;;;;;;;1703:9;:19;1713:8;1703:19;;;;;;;;;;;;;;;;;;;;;;;;;1701:21;1693:53;;;;;;;;;;;;;;;;;;;;;;1779:4;1757:9;:19;1767:8;1757:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1811:8;1799:21;;;;;;;;;;;;1573:254;:::o;662:174:9:-;744:85;763:5;793;:14;;;:23;;;;818:2;822:5;770:58;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;770:58:9;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;770:58:9;744:18;:85::i;:::-;662:174;;;:::o;464:779:6:-;555:4;571:20;594:4;571:27;;614:9;626:1;614:13;;609:515;633:5;:12;629:1;:16;609:515;;;666:20;689:5;695:1;689:8;;;;;;;;;;;;;;666:31;;732:12;716;:28;712:402;;884:12;898;867:44;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;867:44:6;;;857:55;;;;;;842:70;;712:402;;;1071:12;1085;1054:44;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1054:44:6;;;1044:55;;;;;;1029:70;;712:402;609:515;647:3;;;;;;;609:515;;;;1232:4;1216:12;:20;1209:27;;;464:779;;;;;:::o;1309:611:3:-;1531:23;;;;;;;;;;;;;;1514:14;:40;;;;1578:20;;;;;;;;;;;;;;1564:11;:34;;;;1626:23;;;;;;;;;;;;;;1608:15;:41;;;;1677:22;;;;;;;;;;;;;;1660:14;:39;;;;1723:20;;;;;;;;;;;;;;1709:11;:34;;;;1776:29;;;;;;;;;;;;;;1753:20;:52;;;;1832:22;;;;;;;;;;;;;;1815:14;:39;;;;1886:27;;;;;;;;;;;;;;1864:19;:49;;;;1309:611::o;2666:1095:9:-;3261:27;3269:5;3261:25;;;:27::i;:::-;3253:71;;;;;;;;;;;;;;;;;;;;;;3395:12;3409:23;3444:5;3436:19;;3456:4;3436:25;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3394:67:9;;;;3479:7;3471:52;;;;;;;;;;;;;;;;;;;;;;3558:1;3538:10;:17;:21;3534:221;;;3678:10;3667:30;;;;;;;;;;;;;;3659:85;;;;;;;;;;;;;;;;;;;;;;3534:221;2666:1095;;;;:::o;686:610:10:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;160:352;;;290:3;283:4;275:6;271:17;267:27;257:2;;308:1;305;298:12;257:2;341:6;328:20;318:30;;368:18;360:6;357:30;354:2;;;400:1;397;390:12;354:2;434:4;426:6;422:17;410:29;;485:3;477:4;469:6;465:17;455:8;451:32;448:41;445:2;;;502:1;499;492:12;445:2;250:262;;;;;;538:707;;655:3;648:4;640:6;636:17;632:27;622:2;;673:1;670;663:12;622:2;710:6;697:20;732:80;747:64;804:6;747:64;;;732:80;;;723:89;;829:5;854:6;847:5;840:21;884:4;876:6;872:17;862:27;;906:4;901:3;897:14;890:21;;959:6;1006:3;998:4;990:6;986:17;981:3;977:27;974:36;971:2;;;1023:1;1020;1013:12;971:2;1048:1;1033:206;1058:6;1055:1;1052:13;1033:206;;;1116:3;1138:37;1171:3;1159:10;1138:37;;;1133:3;1126:50;1199:4;1194:3;1190:14;1183:21;;1227:4;1222:3;1218:14;1211:21;;1090:149;1080:1;1077;1073:9;1068:14;;1033:206;;;1037:14;615:630;;;;;;;;1253:128;;1334:6;1328:13;1319:22;;1346:30;1370:5;1346:30;;;1313:68;;;;;1388:130;;1468:6;1455:20;1446:29;;1480:33;1507:5;1480:33;;;1440:78;;;;;1525:160;;1620:6;1607:20;1598:29;;1632:48;1674:5;1632:48;;;1592:93;;;;;1692:130;;1772:6;1759:20;1750:29;;1784:33;1811:5;1784:33;;;1744:78;;;;;1829:241;;1933:2;1921:9;1912:7;1908:23;1904:32;1901:2;;;1949:1;1946;1939:12;1901:2;1984:1;2001:53;2046:7;2037:6;2026:9;2022:22;2001:53;;;1991:63;;1963:97;1895:175;;;;;2077:803;;;;;;2282:3;2270:9;2261:7;2257:23;2253:33;2250:2;;;2299:1;2296;2289:12;2250:2;2334:1;2351:53;2396:7;2387:6;2376:9;2372:22;2351:53;;;2341:63;;2313:97;2469:2;2458:9;2454:18;2441:32;2493:18;2485:6;2482:30;2479:2;;;2525:1;2522;2515:12;2479:2;2553:80;2625:7;2616:6;2605:9;2601:22;2553:80;;;2543:90;;;;2420:219;2670:2;2688:68;2748:7;2739:6;2728:9;2724:22;2688:68;;;2678:78;;2649:113;2793:2;2811:53;2856:7;2847:6;2836:9;2832:22;2811:53;;;2801:63;;2772:98;2244:636;;;;;;;;;2887:753;;;;;3067:3;3055:9;3046:7;3042:23;3038:33;3035:2;;;3084:1;3081;3074:12;3035:2;3119:1;3136:53;3181:7;3172:6;3161:9;3157:22;3136:53;;;3126:63;;3098:97;3226:2;3244:53;3289:7;3280:6;3269:9;3265:22;3244:53;;;3234:63;;3205:98;3334:2;3352:53;3397:7;3388:6;3377:9;3373:22;3352:53;;;3342:63;;3313:98;3470:2;3459:9;3455:18;3442:32;3494:18;3486:6;3483:30;3480:2;;;3526:1;3523;3516:12;3480:2;3546:78;3616:7;3607:6;3596:9;3592:22;3546:78;;;3536:88;;3421:209;3029:611;;;;;;;;3647:257;;3759:2;3747:9;3738:7;3734:23;3730:32;3727:2;;;3775:1;3772;3765:12;3727:2;3810:1;3827:61;3880:7;3871:6;3860:9;3856:22;3827:61;;;3817:71;;3789:105;3721:183;;;;;3911:241;;4015:2;4003:9;3994:7;3990:23;3986:32;3983:2;;;4031:1;4028;4021:12;3983:2;4066:1;4083:53;4128:7;4119:6;4108:9;4104:22;4083:53;;;4073:63;;4045:97;3977:175;;;;;4159:366;;;4280:2;4268:9;4259:7;4255:23;4251:32;4248:2;;;4296:1;4293;4286:12;4248:2;4331:1;4348:53;4393:7;4384:6;4373:9;4369:22;4348:53;;;4338:63;;4310:97;4438:2;4456:53;4501:7;4492:6;4481:9;4477:22;4456:53;;;4446:63;;4417:98;4242:283;;;;;;4532:241;;4636:2;4624:9;4615:7;4611:23;4607:32;4604:2;;;4652:1;4649;4642:12;4604:2;4687:1;4704:53;4749:7;4740:6;4729:9;4725:22;4704:53;;;4694:63;;4666:97;4598:175;;;;;4780:366;;;4901:2;4889:9;4880:7;4876:23;4872:32;4869:2;;;4917:1;4914;4907:12;4869:2;4952:1;4969:53;5014:7;5005:6;4994:9;4990:22;4969:53;;;4959:63;;4931:97;5059:2;5077:53;5122:7;5113:6;5102:9;5098:22;5077:53;;;5067:63;;5038:98;4863:283;;;;;;5153:142;5244:45;5283:5;5244:45;;;5239:3;5232:58;5226:69;;;5302:113;5385:24;5403:5;5385:24;;;5380:3;5373:37;5367:48;;;5422:152;5523:45;5543:24;5561:5;5543:24;;;5523:45;;;5518:3;5511:58;5505:69;;;5581:104;5658:21;5673:5;5658:21;;;5653:3;5646:34;5640:45;;;5692:113;5775:24;5793:5;5775:24;;;5770:3;5763:37;5757:48;;;5812:152;5913:45;5933:24;5951:5;5933:24;;;5913:45;;;5908:3;5901:58;5895:69;;;5971:356;;6099:38;6131:5;6099:38;;;6149:88;6230:6;6225:3;6149:88;;;6142:95;;6242:52;6287:6;6282:3;6275:4;6268:5;6264:16;6242:52;;;6315:6;6310:3;6306:16;6299:23;;6079:248;;;;;;6334:156;6432:52;6478:5;6432:52;;;6427:3;6420:65;6414:76;;;6497:154;6594:51;6639:5;6594:51;;;6589:3;6582:64;6576:75;;;6659:321;;6819:67;6883:2;6878:3;6819:67;;;6812:74;;6919:23;6915:1;6910:3;6906:11;6899:44;6971:2;6966:3;6962:12;6955:19;;6805:175;;;;6989:350;;7167:85;7249:2;7244:3;7167:85;;;7160:92;;7285:16;7281:1;7276:3;7272:11;7265:37;7330:2;7325:3;7321:12;7314:19;;7153:186;;;;7348:328;;7508:67;7572:2;7567:3;7508:67;;;7501:74;;7608:30;7604:1;7599:3;7595:11;7588:51;7667:2;7662:3;7658:12;7651:19;;7494:182;;;;7685:341;;7863:84;7945:1;7940:3;7863:84;;;7856:91;;7980:9;7976:1;7971:3;7967:11;7960:30;8018:1;8013:3;8009:11;8002:18;;7849:177;;;;8035:322;;8195:67;8259:2;8254:3;8195:67;;;8188:74;;8295:24;8291:1;8286:3;8282:11;8275:45;8348:2;8343:3;8339:12;8332:19;;8181:176;;;;8366:327;;8526:67;8590:2;8585:3;8526:67;;;8519:74;;8626:29;8622:1;8617:3;8613:11;8606:50;8684:2;8679:3;8675:12;8668:19;;8512:181;;;;8702:352;;8880:85;8962:2;8957:3;8880:85;;;8873:92;;8998:18;8994:1;8989:3;8985:11;8978:39;9045:2;9040:3;9036:12;9029:19;;8866:188;;;;9063:332;;9223:67;9287:2;9282:3;9223:67;;;9216:74;;9323:34;9319:1;9314:3;9310:11;9303:55;9386:2;9381:3;9377:12;9370:19;;9209:186;;;;9404:341;;9582:84;9664:1;9659:3;9582:84;;;9575:91;;9699:9;9695:1;9690:3;9686:11;9679:30;9737:1;9732:3;9728:11;9721:18;;9568:177;;;;9754:321;;9914:67;9978:2;9973:3;9914:67;;;9907:74;;10014:23;10010:1;10005:3;10001:11;9994:44;10066:2;10061:3;10057:12;10050:19;;9900:175;;;;10084:325;;10244:67;10308:2;10303:3;10244:67;;;10237:74;;10344:27;10340:1;10335:3;10331:11;10324:48;10400:2;10395:3;10391:12;10384:19;;10230:179;;;;10418:343;;10596:84;10678:1;10673:3;10596:84;;;10589:91;;10713:11;10709:1;10704:3;10700:11;10693:32;10753:1;10748:3;10744:11;10737:18;;10582:179;;;;10770:346;;10948:85;11030:2;11025:3;10948:85;;;10941:92;;11066:12;11062:1;11057:3;11053:11;11046:33;11107:2;11102:3;11098:12;11091:19;;10934:182;;;;11125:346;;11303:85;11385:2;11380:3;11303:85;;;11296:92;;11421:12;11417:1;11412:3;11408:11;11401:33;11462:2;11457:3;11453:12;11446:19;;11289:182;;;;11480:383;;11640:67;11704:2;11699:3;11640:67;;;11633:74;;11740:34;11736:1;11731:3;11727:11;11720:55;11809:16;11804:2;11799:3;11795:12;11788:38;11854:2;11849:3;11845:12;11838:19;;11626:237;;;;11872:329;;12032:67;12096:2;12091:3;12032:67;;;12025:74;;12132:31;12128:1;12123:3;12119:11;12112:52;12192:2;12187:3;12183:12;12176:19;;12018:183;;;;12210:319;;12370:67;12434:2;12429:3;12370:67;;;12363:74;;12470:21;12466:1;12461:3;12457:11;12450:42;12520:2;12515:3;12511:12;12504:19;;12356:173;;;;12538:398;;12698:67;12762:2;12757:3;12698:67;;;12691:74;;12798:34;12794:1;12789:3;12785:11;12778:55;12867:31;12862:2;12857:3;12853:12;12846:53;12927:2;12922:3;12918:12;12911:19;;12684:252;;;;12945:322;;13105:67;13169:2;13164:3;13105:67;;;13098:74;;13205:24;13201:1;13196:3;13192:11;13185:45;13258:2;13253:3;13249:12;13242:19;;13091:176;;;;13276:315;;13436:67;13500:2;13495:3;13436:67;;;13429:74;;13536:17;13532:1;13527:3;13523:11;13516:38;13582:2;13577:3;13573:12;13566:19;;13422:169;;;;13600:379;;13760:67;13824:2;13819:3;13760:67;;;13753:74;;13860:34;13856:1;13851:3;13847:11;13840:55;13929:12;13924:2;13919:3;13915:12;13908:34;13970:2;13965:3;13961:12;13954:19;;13746:233;;;;13988:343;;14166:84;14248:1;14243:3;14166:84;;;14159:91;;14283:11;14279:1;14274:3;14270:11;14263:32;14323:1;14318:3;14314:11;14307:18;;14152:179;;;;14340:331;;14500:67;14564:2;14559:3;14500:67;;;14493:74;;14600:33;14596:1;14591:3;14587:11;14580:54;14662:2;14657:3;14653:12;14646:19;;14486:185;;;;14679:113;14762:24;14780:5;14762:24;;;14757:3;14750:37;14744:48;;;14799:152;14900:45;14920:24;14938:5;14920:24;;;14900:45;;;14895:3;14888:58;14882:69;;;14958:383;;15105:75;15176:3;15167:6;15105:75;;;15202:2;15197:3;15193:12;15186:19;;15216:75;15287:3;15278:6;15216:75;;;15313:2;15308:3;15304:12;15297:19;;15333:3;15326:10;;15093:248;;;;;;15348:383;;15495:75;15566:3;15557:6;15495:75;;;15592:2;15587:3;15583:12;15576:19;;15606:75;15677:3;15668:6;15606:75;;;15703:2;15698:3;15694:12;15687:19;;15723:3;15716:10;;15483:248;;;;;;15738:262;;15882:93;15971:3;15962:6;15882:93;;;15875:100;;15992:3;15985:10;;15863:137;;;;;16007:372;;16206:148;16350:3;16206:148;;;16199:155;;16371:3;16364:10;;16187:192;;;;16386:372;;16585:148;16729:3;16585:148;;;16578:155;;16750:3;16743:10;;16566:192;;;;16765:372;;16964:148;17108:3;16964:148;;;16957:155;;17129:3;17122:10;;16945:192;;;;17144:372;;17343:148;17487:3;17343:148;;;17336:155;;17508:3;17501:10;;17324:192;;;;17523:372;;17722:148;17866:3;17722:148;;;17715:155;;17887:3;17880:10;;17703:192;;;;17902:372;;18101:148;18245:3;18101:148;;;18094:155;;18266:3;18259:10;;18082:192;;;;18281:372;;18480:148;18624:3;18480:148;;;18473:155;;18645:3;18638:10;;18461:192;;;;18660:372;;18859:148;19003:3;18859:148;;;18852:155;;19024:3;19017:10;;18840:192;;;;19039:451;;19221:2;19210:9;19206:18;19198:26;;19235:79;19311:1;19300:9;19296:17;19287:6;19235:79;;;19325:72;19393:2;19382:9;19378:18;19369:6;19325:72;;;19408;19476:2;19465:9;19461:18;19452:6;19408:72;;;19192:298;;;;;;;19497:324;;19643:2;19632:9;19628:18;19620:26;;19657:71;19725:1;19714:9;19710:17;19701:6;19657:71;;;19739:72;19807:2;19796:9;19792:18;19783:6;19739:72;;;19614:207;;;;;;19828:435;;20002:2;19991:9;19987:18;19979:26;;20016:71;20084:1;20073:9;20069:17;20060:6;20016:71;;;20098:72;20166:2;20155:9;20151:18;20142:6;20098:72;;;20181;20249:2;20238:9;20234:18;20225:6;20181:72;;;19973:290;;;;;;;20270:201;;20382:2;20371:9;20367:18;20359:26;;20396:65;20458:1;20447:9;20443:17;20434:6;20396:65;;;20353:118;;;;;20478:213;;20596:2;20585:9;20581:18;20573:26;;20610:71;20678:1;20667:9;20663:17;20654:6;20610:71;;;20567:124;;;;;20698:243;;20831:2;20820:9;20816:18;20808:26;;20845:86;20928:1;20917:9;20913:17;20904:6;20845:86;;;20802:139;;;;;20948:241;;21080:2;21069:9;21065:18;21057:26;;21094:85;21176:1;21165:9;21161:17;21152:6;21094:85;;;21051:138;;;;;21196:407;;21387:2;21376:9;21372:18;21364:26;;21437:9;21431:4;21427:20;21423:1;21412:9;21408:17;21401:47;21462:131;21588:4;21462:131;;;21454:139;;21358:245;;;;21610:407;;21801:2;21790:9;21786:18;21778:26;;21851:9;21845:4;21841:20;21837:1;21826:9;21822:17;21815:47;21876:131;22002:4;21876:131;;;21868:139;;21772:245;;;;22024:407;;22215:2;22204:9;22200:18;22192:26;;22265:9;22259:4;22255:20;22251:1;22240:9;22236:17;22229:47;22290:131;22416:4;22290:131;;;22282:139;;22186:245;;;;22438:407;;22629:2;22618:9;22614:18;22606:26;;22679:9;22673:4;22669:20;22665:1;22654:9;22650:17;22643:47;22704:131;22830:4;22704:131;;;22696:139;;22600:245;;;;22852:407;;23043:2;23032:9;23028:18;23020:26;;23093:9;23087:4;23083:20;23079:1;23068:9;23064:17;23057:47;23118:131;23244:4;23118:131;;;23110:139;;23014:245;;;;23266:407;;23457:2;23446:9;23442:18;23434:26;;23507:9;23501:4;23497:20;23493:1;23482:9;23478:17;23471:47;23532:131;23658:4;23532:131;;;23524:139;;23428:245;;;;23680:407;;23871:2;23860:9;23856:18;23848:26;;23921:9;23915:4;23911:20;23907:1;23896:9;23892:17;23885:47;23946:131;24072:4;23946:131;;;23938:139;;23842:245;;;;24094:407;;24285:2;24274:9;24270:18;24262:26;;24335:9;24329:4;24325:20;24321:1;24310:9;24306:17;24299:47;24360:131;24486:4;24360:131;;;24352:139;;24256:245;;;;24508:407;;24699:2;24688:9;24684:18;24676:26;;24749:9;24743:4;24739:20;24735:1;24724:9;24720:17;24713:47;24774:131;24900:4;24774:131;;;24766:139;;24670:245;;;;24922:407;;25113:2;25102:9;25098:18;25090:26;;25163:9;25157:4;25153:20;25149:1;25138:9;25134:17;25127:47;25188:131;25314:4;25188:131;;;25180:139;;25084:245;;;;25336:407;;25527:2;25516:9;25512:18;25504:26;;25577:9;25571:4;25567:20;25563:1;25552:9;25548:17;25541:47;25602:131;25728:4;25602:131;;;25594:139;;25498:245;;;;25750:407;;25941:2;25930:9;25926:18;25918:26;;25991:9;25985:4;25981:20;25977:1;25966:9;25962:17;25955:47;26016:131;26142:4;26016:131;;;26008:139;;25912:245;;;;26164:407;;26355:2;26344:9;26340:18;26332:26;;26405:9;26399:4;26395:20;26391:1;26380:9;26376:17;26369:47;26430:131;26556:4;26430:131;;;26422:139;;26326:245;;;;26578:407;;26769:2;26758:9;26754:18;26746:26;;26819:9;26813:4;26809:20;26805:1;26794:9;26790:17;26783:47;26844:131;26970:4;26844:131;;;26836:139;;26740:245;;;;26992:407;;27183:2;27172:9;27168:18;27160:26;;27233:9;27227:4;27223:20;27219:1;27208:9;27204:17;27197:47;27258:131;27384:4;27258:131;;;27250:139;;27154:245;;;;27406:213;;27524:2;27513:9;27509:18;27501:26;;27538:71;27606:1;27595:9;27591:17;27582:6;27538:71;;;27495:124;;;;;27626:435;;27800:2;27789:9;27785:18;27777:26;;27814:71;27882:1;27871:9;27867:17;27858:6;27814:71;;;27896:72;27964:2;27953:9;27949:18;27940:6;27896:72;;;27979;28047:2;28036:9;28032:18;28023:6;27979:72;;;27771:290;;;;;;;28068:256;;28130:2;28124:9;28114:19;;28168:4;28160:6;28156:17;28267:6;28255:10;28252:22;28231:18;28219:10;28216:34;28213:62;28210:2;;;28288:1;28285;28278:12;28210:2;28308:10;28304:2;28297:22;28108:216;;;;;28331:304;;28490:18;28482:6;28479:30;28476:2;;;28522:1;28519;28512:12;28476:2;28557:4;28549:6;28545:17;28537:25;;28620:4;28614;28610:15;28602:23;;28413:222;;;;28642:121;;28735:5;28729:12;28719:22;;28700:63;;;;28771:144;;28906:3;28891:18;;28884:31;;;;;28924:163;;29039:6;29034:3;29027:19;29076:4;29071:3;29067:14;29052:29;;29020:67;;;;;29096:145;;29232:3;29217:18;;29210:31;;;;;29249:91;;29311:24;29329:5;29311:24;;;29300:35;;29294:46;;;;29347:85;;29420:5;29413:13;29406:21;29395:32;;29389:43;;;;29439:72;;29501:5;29490:16;;29484:27;;;;29518:106;;29595:24;29613:5;29595:24;;;29584:35;;29578:46;;;;29631:121;;29704:42;29697:5;29693:54;29682:65;;29676:76;;;;29759:72;;29821:5;29810:16;;29804:27;;;;29838:129;;29925:37;29956:5;29925:37;;;29912:50;;29906:61;;;;29974:151;;30068:52;30114:5;30068:52;;;30055:65;;30049:76;;;;30132:123;;30226:24;30244:5;30226:24;;;30213:37;;30207:48;;;;30262:149;;30355:51;30400:5;30355:51;;;30342:64;;30336:75;;;;30418:122;;30511:24;30529:5;30511:24;;;30498:37;;30492:48;;;;30547:121;;30626:37;30657:5;30626:37;;;30613:50;;30607:61;;;;30675:108;;30754:24;30772:5;30754:24;;;30741:37;;30735:48;;;;30791:268;30856:1;30863:101;30877:6;30874:1;30871:13;30863:101;;;30953:1;30948:3;30944:11;30938:18;30934:1;30929:3;30925:11;30918:39;30899:2;30896:1;30892:10;30887:15;;30863:101;;;30979:6;30976:1;30973:13;30970:2;;;31044:1;31035:6;31030:3;31026:16;31019:27;30970:2;30840:219;;;;;31067:95;;31131:26;31151:5;31131:26;;;31120:37;;31114:48;;;;31169:74;;31233:5;31222:16;;31216:27;;;;31250:89;;31314:20;31328:5;31314:20;;;31303:31;;31297:42;;;;31346:74;;31410:5;31399:16;;31393:27;;;;31427:94;;31505:5;31501:2;31497:14;31475:36;;31469:52;;;;31529:117;31598:24;31616:5;31598:24;;;31591:5;31588:35;31578:2;;31637:1;31634;31627:12;31578:2;31572:74;;31653:111;31719:21;31734:5;31719:21;;;31712:5;31709:32;31699:2;;31755:1;31752;31745:12;31699:2;31693:71;;31771:117;31840:24;31858:5;31840:24;;;31833:5;31830:35;31820:2;;31879:1;31876;31869:12;31820:2;31814:74;;31895:147;31979:39;32012:5;31979:39;;;31972:5;31969:50;31959:2;;32033:1;32030;32023:12;31959:2;31953:89;;32049:117;32118:24;32136:5;32118:24;;;32111:5;32108:35;32098:2;;32157:1;32154;32147:12;32098:2;32092:74;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2370400",
                "executionCost": "2545",
                "totalCost": "2372945"
              },
              "external": {
                "c_0x89b12937(bytes32)": "473",
                "claimTranche(address,uint256,uint256,bytes32[])": "infinite",
                "claimed(uint256,address)": "1810",
                "expireTranche(uint256)": "infinite",
                "initialize(address,address[],address,uint256)": "infinite",
                "merkleRoots(uint256)": "1576",
                "nexus()": "1279",
                "seedNewAllocations(bytes32,uint256)": "infinite",
                "thresholdBlock()": "1174",
                "token()": "1367",
                "verifyClaim(address,uint256,uint256,bytes32[])": "infinite",
                "whitelist(address)": "1545"
              },
              "internal": {
                "_claimTranche(address,uint256,uint256,bytes32[] memory)": "infinite",
                "_disburse(address,uint256)": "infinite",
                "_verifyClaim(address,uint256,uint256,bytes32[] memory)": "infinite"
              }
            },
            "methodIdentifiers": {
              "c_0x89b12937(bytes32)": "4ab54113",
              "claimTranche(address,uint256,uint256,bytes32[])": "cd54e72c",
              "claimed(uint256,address)": "120aa877",
              "expireTranche(uint256)": "d5efd20a",
              "initialize(address,address[],address,uint256)": "0af49690",
              "merkleRoots(uint256)": "71c5ecb1",
              "nexus()": "a3f5c1d2",
              "seedNewAllocations(bytes32,uint256)": "65ef53b1",
              "thresholdBlock()": "29eb15bd",
              "token()": "fc0c546a",
              "verifyClaim(address,uint256,uint256,bytes32[])": "eb0d07f5",
              "whitelist(address)": "9b19251a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"week\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"RemovedFunder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"}],\"name\":\"TrancheAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tranche\",\"type\":\"uint256\"}],\"name\":\"TrancheExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"c__0x89b12937\",\"type\":\"bytes32\"}],\"name\":\"c_0x89b12937\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tranche\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"claimTranche\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_trancheId\",\"type\":\"uint256\"}],\"name\":\"expireTranche\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nexus\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_funders\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_thresholdBlock\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"merkleRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"nexus\",\"outputs\":[{\"internalType\":\"contract INexus\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_totalAllocation\",\"type\":\"uint256\"}],\"name\":\"seedNewAllocations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"trancheId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"thresholdBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tranche\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"_merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"verifyClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"claimTranche(address,uint256,uint256,bytes32[])\":{\"notice\":\"************************************* CLAIMING***************************************\"},\"seedNewAllocations(bytes32,uint256)\":{\"notice\":\"************************************* ADMIN***************************************\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/migration/MerkleDrop.sol\":\"MerkleDrop\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol\":{\"keccak256\":\"0xda302d020b1282b552c24a495a5770cf8cec4350694afd0932fbfb66978042b1\",\"urls\":[\"bzz-raw://8dffad967b88d9262baa670f51f8929969c203ec1836198b806b2d8f1c666f68\",\"dweb:/ipfs/QmRhewMiy5t8bMM3T2qxFGKky9hQ98wQKYde8YxEmhiHpt\"]},\"@mstable/protocol/contracts/interfaces/INexus.sol\":{\"keccak256\":\"0x8ac00cbb7588f1aea0b7a8a0ac0b1d8b12ae097e3fc0ec03aa6a5e45c4a2d9fd\",\"urls\":[\"bzz-raw://490602c4d449667e7b37ace56c7132e0665779a889e60857e21a30f5dfb70c50\",\"dweb:/ipfs/QmV9RuY3FQ9WrpdkHVuHi46xBCq1WHp5suygQxJJY6nUcq\"]},\"@mstable/protocol/contracts/shared/InitializableModule.sol\":{\"keccak256\":\"0xda15abf73529ae7255529b4a69b9e202901eb09b4e32703277539f23002d95f9\",\"urls\":[\"bzz-raw://d3d66cca2a1543669a221c478bf6a08497e1f33da96f426d60cd193c8bb122a8\",\"dweb:/ipfs/QmS4mtdqrxVcsW3YthcuBn26ZY1bncXYBZDE2qQrR4k1dY\"]},\"@mstable/protocol/contracts/shared/InitializableModuleKeys.sol\":{\"keccak256\":\"0x91d0d4423c80b93848d8f0af8b8b18ab21c9eaf764374d65564c923ba0c299a2\",\"urls\":[\"bzz-raw://44d54be77e873b26f405865adb1ed599f9853dcaf544fd637ff32db288e828b0\",\"dweb:/ipfs/QmPj3xjdkEjGGyVh9E1XdxvymgnWKqiuESmohM9AGwVvz7\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]},\"contracts/migration/MerkleDrop.sol\":{\"keccak256\":\"0x84e6da9d62581db5a60d67b2b2857eced15c81993f12d53fe194b15eef0fbfa2\",\"urls\":[\"bzz-raw://158a7f201c7611ad46975791b9a513d2940a32efdccc7cffdb2c3298b583a408\",\"dweb:/ipfs/Qmeoa15t6HVcctotu19A4PsRv8sGuwz7qScTbkvpXBWxPM\"]},\"openzeppelin-contracts-sol5/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xf60e60a8f48a3f2cbe2cacb45d5115d8920a3fefed772a283befaec0d29886c2\",\"urls\":[\"bzz-raw://aaa9db6849924110e7809488d056050b71cd64919a493f92678d23480f427128\",\"dweb:/ipfs/QmeWgyw9XdVQLrBkoQLBp3M2UP3g9LQLXDwGuah4qwXYRm\"]},\"openzeppelin-contracts-sol5/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-contracts-sol5/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"openzeppelin-contracts-sol5/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 422,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "initialized",
                "offset": 0,
                "slot": "0",
                "type": "t_bool"
              },
              {
                "astId": 424,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "initializing",
                "offset": 1,
                "slot": "0",
                "type": "t_bool"
              },
              {
                "astId": 486,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "______gap",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_uint256)50_storage"
              },
              {
                "astId": 351,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "KEY_GOVERNANCE",
                "offset": 0,
                "slot": "51",
                "type": "t_bytes32"
              },
              {
                "astId": 353,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "KEY_STAKING",
                "offset": 0,
                "slot": "52",
                "type": "t_bytes32"
              },
              {
                "astId": 355,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "KEY_PROXY_ADMIN",
                "offset": 0,
                "slot": "53",
                "type": "t_bytes32"
              },
              {
                "astId": 357,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "KEY_ORACLE_HUB",
                "offset": 0,
                "slot": "54",
                "type": "t_bytes32"
              },
              {
                "astId": 359,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "KEY_MANAGER",
                "offset": 0,
                "slot": "55",
                "type": "t_bytes32"
              },
              {
                "astId": 361,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "KEY_RECOLLATERALISER",
                "offset": 0,
                "slot": "56",
                "type": "t_bytes32"
              },
              {
                "astId": 363,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "KEY_META_TOKEN",
                "offset": 0,
                "slot": "57",
                "type": "t_bytes32"
              },
              {
                "astId": 365,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "KEY_SAVINGS_MANAGER",
                "offset": 0,
                "slot": "58",
                "type": "t_bytes32"
              },
              {
                "astId": 164,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "nexus",
                "offset": 0,
                "slot": "59",
                "type": "t_contract(INexus)154"
              },
              {
                "astId": 13,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "whitelist",
                "offset": 0,
                "slot": "60",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 544,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "token",
                "offset": 0,
                "slot": "61",
                "type": "t_contract(IERC20)1412"
              },
              {
                "astId": 548,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "merkleRoots",
                "offset": 0,
                "slot": "62",
                "type": "t_mapping(t_uint256,t_bytes32)"
              },
              {
                "astId": 554,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "claimed",
                "offset": 0,
                "slot": "63",
                "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
              },
              {
                "astId": 556,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "tranches",
                "offset": 0,
                "slot": "64",
                "type": "t_uint256"
              },
              {
                "astId": 558,
                "contract": "contracts/migration/MerkleDrop.sol:MerkleDrop",
                "label": "thresholdBlock",
                "offset": 0,
                "slot": "65",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_uint256)50_storage": {
                "base": "t_uint256",
                "encoding": "inplace",
                "label": "uint256[50]",
                "numberOfBytes": "1600"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              },
              "t_contract(IERC20)1412": {
                "encoding": "inplace",
                "label": "contract IERC20",
                "numberOfBytes": "20"
              },
              "t_contract(INexus)154": {
                "encoding": "inplace",
                "label": "contract INexus",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_uint256,t_bytes32)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => bytes32)",
                "numberOfBytes": "32",
                "value": "t_bytes32"
              },
              "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => mapping(address => bool))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_bool)"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "methods": {
              "claimTranche(address,uint256,uint256,bytes32[])": {
                "notice": "************************************* CLAIMING***************************************"
              },
              "seedNewAllocations(bytes32,uint256)": {
                "notice": "************************************* ADMIN***************************************"
              }
            }
          }
        }
      },
      "openzeppelin-contracts-sol5/cryptography/MerkleProof.sol": {
        "MerkleProof": {
          "abi": [],
          "devdoc": {
            "details": "These functions deal with verification of Merkle trees (hash trees),",
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e0603990104a3609ee648dfbd87c88029cd92d9804b549d516e055bb55b05d6864736f6c63430005100032",
              "opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE0 PUSH1 0x39 SWAP1 LT 0x4A CALLDATASIZE MULMOD 0xEE PUSH5 0x8DFBD87C88 MUL SWAP13 0xD9 0x2D SWAP9 DIV 0xB5 0x49 0xD5 AND 0xE0 SSTORE 0xBB SSTORE 0xB0 0x5D PUSH9 0x64736F6C6343000510 STOP ORIGIN ",
              "sourceMap": "110:1135:6:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e0603990104a3609ee648dfbd87c88029cd92d9804b549d516e055bb55b05d6864736f6c63430005100032",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE0 PUSH1 0x39 SWAP1 LT 0x4A CALLDATASIZE MULMOD 0xEE PUSH5 0x8DFBD87C88 MUL SWAP13 0xD9 0x2D SWAP9 DIV 0xB5 0x49 0xD5 AND 0xE0 SSTORE 0xBB SSTORE 0xB0 0x5D PUSH9 0x64736F6C6343000510 STOP ORIGIN ",
              "sourceMap": "110:1135:6:-;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17000",
                "executionCost": "94",
                "totalCost": "17094"
              },
              "internal": {
                "verify(bytes32[] memory,bytes32,bytes32)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle trees (hash trees),\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-sol5/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-sol5/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xf60e60a8f48a3f2cbe2cacb45d5115d8920a3fefed772a283befaec0d29886c2\",\"urls\":[\"bzz-raw://aaa9db6849924110e7809488d056050b71cd64919a493f92678d23480f427128\",\"dweb:/ipfs/QmeWgyw9XdVQLrBkoQLBp3M2UP3g9LQLXDwGuah4qwXYRm\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      },
      "openzeppelin-contracts-sol5/math/SafeMath.sol": {
        "SafeMath": {
          "abi": [],
          "devdoc": {
            "details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582052c46b48c589026eaf0f6e8169873fb29c403deebca53b343567967d5e551ca664736f6c63430005100032",
              "opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSTORE 0xC4 PUSH12 0x48C589026EAF0F6E8169873F 0xB2 SWAP13 BLOCKHASH RETURNDATASIZE 0xEE 0xBC 0xA5 EXTCODESIZE CALLVALUE CALLDATALOAD PUSH8 0x967D5E551CA66473 PUSH16 0x6C634300051000320000000000000000 ",
              "sourceMap": "589:4708:7:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a7231582052c46b48c589026eaf0f6e8169873fb29c403deebca53b343567967d5e551ca664736f6c63430005100032",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 MSTORE 0xC4 PUSH12 0x48C589026EAF0F6E8169873F 0xB2 SWAP13 BLOCKHASH RETURNDATASIZE 0xEE 0xBC 0xA5 EXTCODESIZE CALLVALUE CALLDATALOAD PUSH8 0x967D5E551CA66473 PUSH16 0x6C634300051000320000000000000000 ",
              "sourceMap": "589:4708:7:-;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17000",
                "executionCost": "94",
                "totalCost": "17094"
              },
              "internal": {
                "add(uint256,uint256)": "infinite",
                "div(uint256,uint256)": "infinite",
                "div(uint256,uint256,string memory)": "infinite",
                "mod(uint256,uint256)": "infinite",
                "mod(uint256,uint256,string memory)": "infinite",
                "mul(uint256,uint256)": "infinite",
                "sub(uint256,uint256)": "infinite",
                "sub(uint256,uint256,string memory)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-sol5/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-sol5/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      },
      "openzeppelin-contracts-sol5/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
              }
            }
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP. Does not include the optional functions; to access them see {ERC20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-sol5/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-sol5/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      },
      "openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol": {
        "SafeERC20": {
          "abi": [],
          "devdoc": {
            "details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
            "methods": {},
            "title": "SafeERC20"
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e81349698946190602bd6283b9610bf3d86df1feeecb70e27decafbc776f492d64736f6c63430005100032",
              "opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE8 SGT 0x49 PUSH10 0x8946190602BD6283B961 SIGNEXTEND RETURN 0xD8 PUSH14 0xF1FEEECB70E27DECAFBC776F492D PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
              "sourceMap": "574:3189:9:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e81349698946190602bd6283b9610bf3d86df1feeecb70e27decafbc776f492d64736f6c63430005100032",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE8 SGT 0x49 PUSH10 0x8946190602BD6283B961 SIGNEXTEND RETURN 0xD8 PUSH14 0xF1FEEECB70E27DECAFBC776F492D PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
              "sourceMap": "574:3189:9:-;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17000",
                "executionCost": "94",
                "totalCost": "17094"
              },
              "internal": {
                "callOptionalReturn(contract IERC20,bytes memory)": "infinite",
                "safeApprove(contract IERC20,address,uint256)": "infinite",
                "safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
                "safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
                "safeTransfer(contract IERC20,address,uint256)": "infinite",
                "safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for ERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeERC20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-sol5/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-contracts-sol5/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0x6f2c9955d65c522b80f4b8792f076512d2df947d2112cbc4d98a4781ed42ede2\",\"urls\":[\"bzz-raw://7d8ec81683520c06baeef3f7e06cd82bd6fd5fa611f26857f475f6c829540aff\",\"dweb:/ipfs/QmTDkFzKnrpiV1UKnSoiZAHPuguWzokrr4pFbSPvyaSo56\"]},\"openzeppelin-contracts-sol5/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      },
      "openzeppelin-contracts-sol5/utils/Address.sol": {
        "Address": {
          "abi": [],
          "devdoc": {
            "details": "Collection of functions related to the address type",
            "methods": {}
          },
          "evm": {
            "bytecode": {
              "linkReferences": {},
              "object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e8758d41ee020c6453a38bec890a24b5d0939b8f746a6aa563686dea65e5805864736f6c63430005100032",
              "opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE8 PUSH22 0x8D41EE020C6453A38BEC890A24B5D0939B8F746A6AA5 PUSH4 0x686DEA65 0xE5 DUP1 PC PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
              "sourceMap": "93:2861:10:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
            },
            "deployedBytecode": {
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e8758d41ee020c6453a38bec890a24b5d0939b8f746a6aa563686dea65e5805864736f6c63430005100032",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE8 PUSH22 0x8D41EE020C6453A38BEC890A24B5D0939B8F746A6AA5 PUSH4 0x686DEA65 0xE5 DUP1 PC PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
              "sourceMap": "93:2861:10:-;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17000",
                "executionCost": "94",
                "totalCost": "17094"
              },
              "internal": {
                "isContract(address)": "infinite",
                "sendValue(address payable,uint256)": "infinite",
                "toPayable(address)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"openzeppelin-contracts-sol5/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-contracts-sol5/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "methods": {}
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "formattedMessage": "contracts/migration/MerkleDrop.sol:19:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n",
        "message": "Experimental features are turned on. Do not use experimental features on live deployments.",
        "severity": "warning",
        "sourceLocation": {
          "end": 1548,
          "file": "contracts/migration/MerkleDrop.sol",
          "start": 1515
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol": {
        "ast": {
          "absolutePath": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol",
          "exportedSymbols": {
            "InitializableGovernableWhitelist": [
              101
            ]
          },
          "id": 102,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.5",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:0"
            },
            {
              "absolutePath": "@mstable/protocol/contracts/shared/InitializableModule.sol",
              "file": "../shared/InitializableModule.sol",
              "id": 3,
              "nodeType": "ImportDirective",
              "scope": 102,
              "sourceUnit": 348,
              "src": "25:72:0",
              "symbolAliases": [
                {
                  "foreign": 2,
                  "local": null
                }
              ],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 4,
                    "name": "InitializableModule",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 347,
                    "src": "583:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InitializableModule_$347",
                      "typeString": "contract InitializableModule"
                    }
                  },
                  "id": 5,
                  "nodeType": "InheritanceSpecifier",
                  "src": "583:19:0"
                }
              ],
              "contractDependencies": [
                347,
                418
              ],
              "contractKind": "contract",
              "documentation": "@title   InitializableGovernableWhitelist\n@author  Stability Labs Pty. Ltd.\n@notice  Contract to store whitelisted address. The onlyWhitelisted() modifier should be used\n         to allow the function calls only from the whitelisted addresses.\n@dev     Implementing contracts are responsible for adding their own add and remove methods\n         as the original purpose of this whitelist is for read optimisation.",
              "fullyImplemented": true,
              "id": 101,
              "linearizedBaseContracts": [
                101,
                347,
                418
              ],
              "name": "InitializableGovernableWhitelist",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 9,
                  "name": "Whitelisted",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 8,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 7,
                        "indexed": true,
                        "name": "_address",
                        "nodeType": "VariableDeclaration",
                        "scope": 9,
                        "src": "628:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "628:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "627:26:0"
                  },
                  "src": "610:44:0"
                },
                {
                  "constant": false,
                  "id": 13,
                  "name": "whitelist",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "660:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 12,
                    "keyType": {
                      "id": 10,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "668:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "660:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 11,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "679:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 24,
                    "nodeType": "Block",
                    "src": "831:87:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 16,
                                "name": "whitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "849:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 19,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 17,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1722,
                                  "src": "859:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 18,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "859:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "849:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4e6f7420612077686974656c69737465642061646472657373",
                              "id": 20,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "872:27:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8078b824ad3b7085a0d0bd3988ddd6931831806ef3df20024e5b43e9637bcda9",
                                "typeString": "literal_string \"Not a whitelisted address\""
                              },
                              "value": "Not a whitelisted address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8078b824ad3b7085a0d0bd3988ddd6931831806ef3df20024e5b43e9637bcda9",
                                "typeString": "literal_string \"Not a whitelisted address\""
                              }
                            ],
                            "id": 15,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "841:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "841:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22,
                        "nodeType": "ExpressionStatement",
                        "src": "841:59:0"
                      },
                      {
                        "id": 23,
                        "nodeType": "PlaceholderStatement",
                        "src": "910:1:0"
                      }
                    ]
                  },
                  "documentation": "@dev Modifier to allow function calls only from the whitelisted address.",
                  "id": 25,
                  "name": "onlyWhitelisted",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 14,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "828:2:0"
                  },
                  "src": "804:114:0",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1221:238:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 36,
                              "name": "_nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1263:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 33,
                              "name": "InitializableModule",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 347,
                              "src": "1231:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_InitializableModule_$347_$",
                                "typeString": "type(contract InitializableModule)"
                              }
                            },
                            "id": 35,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 248,
                            "src": "1231:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1231:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38,
                        "nodeType": "ExpressionStatement",
                        "src": "1231:39:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 43,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 40,
                                  "name": "_whitelisted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30,
                                  "src": "1289:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1289:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 42,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1311:1:0",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1289:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "456d7074792077686974656c697374206172726179",
                              "id": 44,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1314:23:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7d9b0eca17cfa50e1d847327bd8a3c5071c47f9155556091e2940f95f4f1f780",
                                "typeString": "literal_string \"Empty whitelist array\""
                              },
                              "value": "Empty whitelist array"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7d9b0eca17cfa50e1d847327bd8a3c5071c47f9155556091e2940f95f4f1f780",
                                "typeString": "literal_string \"Empty whitelist array\""
                              }
                            ],
                            "id": 39,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "1281:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1281:57:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 46,
                        "nodeType": "ExpressionStatement",
                        "src": "1281:57:0"
                      },
                      {
                        "body": {
                          "id": 64,
                          "nodeType": "Block",
                          "src": "1398:55:0",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 59,
                                      "name": "_whitelisted",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30,
                                      "src": "1426:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                        "typeString": "address[] memory"
                                      }
                                    },
                                    "id": 61,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 60,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 48,
                                      "src": "1439:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1426:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 58,
                                  "name": "_addWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 100,
                                  "src": "1412:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 62,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1412:30:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 63,
                              "nodeType": "ExpressionStatement",
                              "src": "1412:30:0"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 51,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 48,
                            "src": "1368:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 52,
                              "name": "_whitelisted",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30,
                              "src": "1372:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 53,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1372:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1368:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 65,
                        "initializationExpression": {
                          "assignments": [
                            48
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 48,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 65,
                              "src": "1353:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 47,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1353:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 50,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 49,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1365:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1353:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 56,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1393:3:0",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 55,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "1393:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 57,
                          "nodeType": "ExpressionStatement",
                          "src": "1393:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "1349:104:0"
                      }
                    ]
                  },
                  "documentation": "@dev Initialization function for upgradable proxy contracts\n@param _nexus Nexus contract address\n@param _whitelisted Array of whitelisted addresses.",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "name": "_nexus",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1140:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1140:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 30,
                        "name": "_whitelisted",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1164:29:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 28,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1164:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 29,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "1164:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1130:69:0"
                  },
                  "returnParameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1221:0:0"
                  },
                  "scope": 101,
                  "src": "1110:349:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 99,
                    "nodeType": "Block",
                    "src": "1623:204:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 77,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 73,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 69,
                                "src": "1641:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 75,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1661:1:0",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 74,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1653:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 76,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1653:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1641:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "41646472657373206973207a65726f",
                              "id": 78,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1665:17:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d6e179ef16e7bee0c6b8affd2dfa1778c777f55a6fff9bc6407e813a93470965",
                                "typeString": "literal_string \"Address is zero\""
                              },
                              "value": "Address is zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d6e179ef16e7bee0c6b8affd2dfa1778c777f55a6fff9bc6407e813a93470965",
                                "typeString": "literal_string \"Address is zero\""
                              }
                            ],
                            "id": 72,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "1633:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 79,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:50:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80,
                        "nodeType": "ExpressionStatement",
                        "src": "1633:50:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 85,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "1701:21:0",
                              "subExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 82,
                                  "name": "whitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1703:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 84,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 83,
                                  "name": "_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 69,
                                  "src": "1713:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1703:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "416c72656164792077686974656c6973746564",
                              "id": 86,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1724:21:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
                                "typeString": "literal_string \"Already whitelisted\""
                              },
                              "value": "Already whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a571dd8293399cb309f7b2bde54569ca999ce44e86cd0c229f3ea182fce1d17a",
                                "typeString": "literal_string \"Already whitelisted\""
                              }
                            ],
                            "id": 81,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "1693:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1693:53:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "1693:53:0"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 89,
                              "name": "whitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1757:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 91,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "1767:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1757:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 92,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1779:4:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1757:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 94,
                        "nodeType": "ExpressionStatement",
                        "src": "1757:26:0"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 96,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69,
                              "src": "1811:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 95,
                            "name": "Whitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "1799:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1799:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 98,
                        "nodeType": "EmitStatement",
                        "src": "1794:26:0"
                      }
                    ]
                  },
                  "documentation": "@dev Adds a new whitelist address\n@param _address Address to add in whitelist",
                  "id": 100,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_addWhitelist",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 69,
                        "name": "_address",
                        "nodeType": "VariableDeclaration",
                        "scope": 100,
                        "src": "1596:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1596:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1595:18:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1623:0:0"
                  },
                  "scope": 101,
                  "src": "1573:254:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 102,
              "src": "538:1292:0"
            }
          ],
          "src": "0:1830:0"
        },
        "id": 0
      },
      "@mstable/protocol/contracts/interfaces/INexus.sol": {
        "ast": {
          "absolutePath": "@mstable/protocol/contracts/interfaces/INexus.sol",
          "exportedSymbols": {
            "INexus": [
              154
            ]
          },
          "id": 155,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 103,
              "literals": [
                "solidity",
                "0.5",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:1"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": "@title INexus\n@dev Basic interface for interacting with the Nexus i.e. SystemKernel",
              "fullyImplemented": false,
              "id": 154,
              "linearizedBaseContracts": [
                154
              ],
              "name": "INexus",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": null,
                  "id": 108,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "governor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 104,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "166:2:1"
                  },
                  "returnParameters": {
                    "id": 107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 106,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "192:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 105,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "192:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "191:9:1"
                  },
                  "scope": 154,
                  "src": "149:52:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 115,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getModule",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "name": "key",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "225:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "225:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "224:13:1"
                  },
                  "returnParameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 115,
                        "src": "261:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "261:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "260:9:1"
                  },
                  "scope": 154,
                  "src": "206:64:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 122,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "proposeModule",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 120,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "name": "_key",
                        "nodeType": "VariableDeclaration",
                        "scope": 122,
                        "src": "299:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "299:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 119,
                        "name": "_addr",
                        "nodeType": "VariableDeclaration",
                        "scope": 122,
                        "src": "313:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 118,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "313:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "298:29:1"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "336:0:1"
                  },
                  "scope": 154,
                  "src": "276:61:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 127,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelProposedModule",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 125,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 124,
                        "name": "_key",
                        "nodeType": "VariableDeclaration",
                        "scope": 127,
                        "src": "372:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "372:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "371:14:1"
                  },
                  "returnParameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "394:0:1"
                  },
                  "scope": 154,
                  "src": "342:53:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 132,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptProposedModule",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "name": "_key",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "430:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "430:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "429:14:1"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "452:0:1"
                  },
                  "scope": 154,
                  "src": "400:53:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 138,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptProposedModules",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 136,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 135,
                        "name": "_keys",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "489:24:1",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 133,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "489:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 134,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "489:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "488:26:1"
                  },
                  "returnParameters": {
                    "id": 137,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "523:0:1"
                  },
                  "scope": 154,
                  "src": "458:66:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 143,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "requestLockModule",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 141,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 140,
                        "name": "_key",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "557:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 139,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "557:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "556:14:1"
                  },
                  "returnParameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "579:0:1"
                  },
                  "scope": 154,
                  "src": "530:50:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 148,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "cancelLockModule",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 145,
                        "name": "_key",
                        "nodeType": "VariableDeclaration",
                        "scope": 148,
                        "src": "611:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 144,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "611:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "610:14:1"
                  },
                  "returnParameters": {
                    "id": 147,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "633:0:1"
                  },
                  "scope": 154,
                  "src": "585:49:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": null,
                  "id": 153,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "lockModule",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "name": "_key",
                        "nodeType": "VariableDeclaration",
                        "scope": 153,
                        "src": "659:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "658:14:1"
                  },
                  "returnParameters": {
                    "id": 152,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "681:0:1"
                  },
                  "scope": 154,
                  "src": "639:43:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 155,
              "src": "126:558:1"
            }
          ],
          "src": "0:684:1"
        },
        "id": 1
      },
      "@mstable/protocol/contracts/shared/InitializableModule.sol": {
        "ast": {
          "absolutePath": "@mstable/protocol/contracts/shared/InitializableModule.sol",
          "exportedSymbols": {
            "InitializableModule": [
              347
            ]
          },
          "id": 348,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 156,
              "literals": [
                "solidity",
                "0.5",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:2"
            },
            {
              "absolutePath": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol",
              "file": "./InitializableModuleKeys.sol",
              "id": 158,
              "nodeType": "ImportDirective",
              "scope": 348,
              "sourceUnit": 419,
              "src": "25:72:2",
              "symbolAliases": [
                {
                  "foreign": 157,
                  "local": null
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@mstable/protocol/contracts/interfaces/INexus.sol",
              "file": "../interfaces/INexus.sol",
              "id": 160,
              "nodeType": "ImportDirective",
              "scope": 348,
              "sourceUnit": 155,
              "src": "98:50:2",
              "symbolAliases": [
                {
                  "foreign": 159,
                  "local": null
                }
              ],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 161,
                    "name": "InitializableModuleKeys",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 418,
                    "src": "413:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InitializableModuleKeys_$418",
                      "typeString": "contract InitializableModuleKeys"
                    }
                  },
                  "id": 162,
                  "nodeType": "InheritanceSpecifier",
                  "src": "413:23:2"
                }
              ],
              "contractDependencies": [
                418
              ],
              "contractKind": "contract",
              "documentation": "@title   InitializableModule\n@author  Stability Labs Pty. Ltd.\n@dev     Subscribes to module updates from a given publisher and reads from its registry.\n         Contract is used for upgradable proxy contracts.",
              "fullyImplemented": true,
              "id": 347,
              "linearizedBaseContracts": [
                347,
                418
              ],
              "name": "InitializableModule",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 164,
                  "name": "nexus",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "444:19:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_INexus_$154",
                    "typeString": "contract INexus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 163,
                    "name": "INexus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 154,
                    "src": "444:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_INexus_$154",
                      "typeString": "contract INexus"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 176,
                    "nodeType": "Block",
                    "src": "579:91:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 167,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1722,
                                  "src": "597:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "597:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 169,
                                  "name": "_governor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 258,
                                  "src": "611:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 170,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "611:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "597:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f6e6c7920676f7665726e6f722063616e2065786563757465",
                              "id": 172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "624:27:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5eab3ff5912cf7e89acb9afdea718e074ebcab2a8b5addc42f2b3c2690c3d957",
                                "typeString": "literal_string \"Only governor can execute\""
                              },
                              "value": "Only governor can execute"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5eab3ff5912cf7e89acb9afdea718e074ebcab2a8b5addc42f2b3c2690c3d957",
                                "typeString": "literal_string \"Only governor can execute\""
                              }
                            ],
                            "id": 166,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "589:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "589:63:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 174,
                        "nodeType": "ExpressionStatement",
                        "src": "589:63:2"
                      },
                      {
                        "id": 175,
                        "nodeType": "PlaceholderStatement",
                        "src": "662:1:2"
                      }
                    ]
                  },
                  "documentation": "@dev Modifier to allow function calls only from the Governor.",
                  "id": 177,
                  "name": "onlyGovernor",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 165,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "576:2:2"
                  },
                  "src": "555:115:2",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 195,
                    "nodeType": "Block",
                    "src": "862:158:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 180,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1722,
                                    "src": "893:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 181,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "893:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 182,
                                    "name": "_governor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 258,
                                    "src": "907:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "907:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "893:25:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 189,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 185,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1722,
                                    "src": "922:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 186,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "922:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 187,
                                    "name": "_governance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 269,
                                    "src": "936:11:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "936:13:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "922:27:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "893:56:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f6e6c7920676f7665726e616e63652063616e2065786563757465",
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "963:29:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18fd61fbf01912f41027151aa86e2abfdc4576050387007619e060f2fe87fc22",
                                "typeString": "literal_string \"Only governance can execute\""
                              },
                              "value": "Only governance can execute"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18fd61fbf01912f41027151aa86e2abfdc4576050387007619e060f2fe87fc22",
                                "typeString": "literal_string \"Only governance can execute\""
                              }
                            ],
                            "id": 179,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "872:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "872:130:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "ExpressionStatement",
                        "src": "872:130:2"
                      },
                      {
                        "id": 194,
                        "nodeType": "PlaceholderStatement",
                        "src": "1012:1:2"
                      }
                    ]
                  },
                  "documentation": "@dev Modifier to allow function calls only from the Governance.\n     Governance is either Governor address or Governance address.",
                  "id": 196,
                  "name": "onlyGovernance",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "859:2:2"
                  },
                  "src": "836:184:2",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "1139:117:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 199,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1722,
                                  "src": "1170:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1170:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 201,
                                  "name": "_proxyAdmin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 291,
                                  "src": "1184:11:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1184:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1170:27:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f6e6c792050726f787941646d696e2063616e2065786563757465",
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1199:29:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_067d559b62d51dd01b2c9ae60d85892378c8eba5458de108cb022669c66474ce",
                                "typeString": "literal_string \"Only ProxyAdmin can execute\""
                              },
                              "value": "Only ProxyAdmin can execute"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_067d559b62d51dd01b2c9ae60d85892378c8eba5458de108cb022669c66474ce",
                                "typeString": "literal_string \"Only ProxyAdmin can execute\""
                              }
                            ],
                            "id": 198,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "1149:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1149:89:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 206,
                        "nodeType": "ExpressionStatement",
                        "src": "1149:89:2"
                      },
                      {
                        "id": 207,
                        "nodeType": "PlaceholderStatement",
                        "src": "1248:1:2"
                      }
                    ]
                  },
                  "documentation": "@dev Modifier to allow function calls only from the ProxyAdmin.",
                  "id": 209,
                  "name": "onlyProxyAdmin",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 197,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1136:2:2"
                  },
                  "src": "1113:143:2",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 221,
                    "nodeType": "Block",
                    "src": "1369:89:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 216,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 212,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1722,
                                  "src": "1387:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1387:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 214,
                                  "name": "_manager",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 324,
                                  "src": "1401:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 215,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1401:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1387:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4f6e6c79206d616e616765722063616e2065786563757465",
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1413:26:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_eb2fa416ea62e60ae0309992b752705edb2269fd35788f197b90471af7821585",
                                "typeString": "literal_string \"Only manager can execute\""
                              },
                              "value": "Only manager can execute"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_eb2fa416ea62e60ae0309992b752705edb2269fd35788f197b90471af7821585",
                                "typeString": "literal_string \"Only manager can execute\""
                              }
                            ],
                            "id": 211,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "1379:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:61:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 219,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:61:2"
                      },
                      {
                        "id": 220,
                        "nodeType": "PlaceholderStatement",
                        "src": "1450:1:2"
                      }
                    ]
                  },
                  "documentation": "@dev Modifier to allow function calls only from the Manager.",
                  "id": 222,
                  "name": "onlyManager",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1366:2:2"
                  },
                  "src": "1346:112:2",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 247,
                    "nodeType": "Block",
                    "src": "1637:150:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 228,
                                "name": "_nexus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "1655:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1673:1:2",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1665:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 231,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1665:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "1655:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4e657875732061646472657373206973207a65726f",
                              "id": 233,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1677:23:2",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0922f34f8d038c1b556bb3b632d9b06c6ab74c2cb94c86ce19966ca14765f070",
                                "typeString": "literal_string \"Nexus address is zero\""
                              },
                              "value": "Nexus address is zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0922f34f8d038c1b556bb3b632d9b06c6ab74c2cb94c86ce19966ca14765f070",
                                "typeString": "literal_string \"Nexus address is zero\""
                              }
                            ],
                            "id": 227,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "1647:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1647:54:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 235,
                        "nodeType": "ExpressionStatement",
                        "src": "1647:54:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 236,
                            "name": "nexus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "1711:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INexus_$154",
                              "typeString": "contract INexus"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 238,
                                "name": "_nexus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 224,
                                "src": "1726:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 237,
                              "name": "INexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 154,
                              "src": "1719:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_INexus_$154_$",
                                "typeString": "type(contract INexus)"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1719:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_INexus_$154",
                              "typeString": "contract INexus"
                            }
                          },
                          "src": "1711:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_INexus_$154",
                            "typeString": "contract INexus"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "1711:22:2"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 242,
                              "name": "InitializableModuleKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "1743:23:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_InitializableModuleKeys_$418_$",
                                "typeString": "type(contract InitializableModuleKeys)"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 417,
                            "src": "1743:35:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1743:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 246,
                        "nodeType": "ExpressionStatement",
                        "src": "1743:37:2"
                      }
                    ]
                  },
                  "documentation": "@dev Initialization function for upgradable proxy contracts\n@param _nexus Nexus contract address",
                  "id": 248,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 224,
                        "name": "_nexus",
                        "nodeType": "VariableDeclaration",
                        "scope": 248,
                        "src": "1612:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 223,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1612:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1611:16:2"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1637:0:2"
                  },
                  "scope": 347,
                  "src": "1591:196:2",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 257,
                    "nodeType": "Block",
                    "src": "1958:40:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 253,
                              "name": "nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "1975:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INexus_$154",
                                "typeString": "contract INexus"
                              }
                            },
                            "id": 254,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "governor",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 108,
                            "src": "1975:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1975:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 252,
                        "id": 256,
                        "nodeType": "Return",
                        "src": "1968:23:2"
                      }
                    ]
                  },
                  "documentation": "@dev Returns Governor address from the Nexus\n@return Address of Governor Contract",
                  "id": 258,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_governor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 249,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1923:2:2"
                  },
                  "returnParameters": {
                    "id": 252,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 251,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 258,
                        "src": "1949:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 250,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1949:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1948:9:2"
                  },
                  "scope": 347,
                  "src": "1905:93:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 268,
                    "nodeType": "Block",
                    "src": "2187:55:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 265,
                              "name": "KEY_GOVERNANCE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 351,
                              "src": "2220:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 263,
                              "name": "nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2204:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INexus_$154",
                                "typeString": "contract INexus"
                              }
                            },
                            "id": 264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "2204:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2204:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 262,
                        "id": 267,
                        "nodeType": "Return",
                        "src": "2197:38:2"
                      }
                    ]
                  },
                  "documentation": "@dev Returns Governance Module address from the Nexus\n@return Address of the Governance (Phase 2)",
                  "id": 269,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_governance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2152:2:2"
                  },
                  "returnParameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 261,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 269,
                        "src": "2178:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2178:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2177:9:2"
                  },
                  "scope": 347,
                  "src": "2132:110:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 279,
                    "nodeType": "Block",
                    "src": "2427:52:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 276,
                              "name": "KEY_STAKING",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 353,
                              "src": "2460:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 274,
                              "name": "nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2444:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INexus_$154",
                                "typeString": "contract INexus"
                              }
                            },
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "2444:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2444:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 273,
                        "id": 278,
                        "nodeType": "Return",
                        "src": "2437:35:2"
                      }
                    ]
                  },
                  "documentation": "@dev Return Staking Module address from the Nexus\n@return Address of the Staking Module contract",
                  "id": 280,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_staking",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2392:2:2"
                  },
                  "returnParameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 272,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 280,
                        "src": "2418:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2418:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2417:9:2"
                  },
                  "scope": 347,
                  "src": "2375:104:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 290,
                    "nodeType": "Block",
                    "src": "2673:56:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 287,
                              "name": "KEY_PROXY_ADMIN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 355,
                              "src": "2706:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 285,
                              "name": "nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2690:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INexus_$154",
                                "typeString": "contract INexus"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "2690:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2690:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 284,
                        "id": 289,
                        "nodeType": "Return",
                        "src": "2683:39:2"
                      }
                    ]
                  },
                  "documentation": "@dev Return ProxyAdmin Module address from the Nexus\n@return Address of the ProxyAdmin Module contract",
                  "id": 291,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_proxyAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 281,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2638:2:2"
                  },
                  "returnParameters": {
                    "id": 284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 283,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 291,
                        "src": "2664:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 282,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2664:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2663:9:2"
                  },
                  "scope": 347,
                  "src": "2618:111:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 301,
                    "nodeType": "Block",
                    "src": "2920:55:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 298,
                              "name": "KEY_META_TOKEN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 363,
                              "src": "2953:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 296,
                              "name": "nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "2937:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INexus_$154",
                                "typeString": "contract INexus"
                              }
                            },
                            "id": 297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "2937:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2937:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 295,
                        "id": 300,
                        "nodeType": "Return",
                        "src": "2930:38:2"
                      }
                    ]
                  },
                  "documentation": "@dev Return MetaToken Module address from the Nexus\n@return Address of the MetaToken Module contract",
                  "id": 302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_metaToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 292,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2885:2:2"
                  },
                  "returnParameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 294,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "2911:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 293,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2911:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2910:9:2"
                  },
                  "scope": 347,
                  "src": "2866:109:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 312,
                    "nodeType": "Block",
                    "src": "3166:55:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 309,
                              "name": "KEY_ORACLE_HUB",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "3199:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 307,
                              "name": "nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "3183:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INexus_$154",
                                "typeString": "contract INexus"
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "3183:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3183:31:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 306,
                        "id": 311,
                        "nodeType": "Return",
                        "src": "3176:38:2"
                      }
                    ]
                  },
                  "documentation": "@dev Return OracleHub Module address from the Nexus\n@return Address of the OracleHub Module contract",
                  "id": 313,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_oracleHub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3131:2:2"
                  },
                  "returnParameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "3157:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3157:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3156:9:2"
                  },
                  "scope": 347,
                  "src": "3112:109:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "3406:52:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 320,
                              "name": "KEY_MANAGER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "3439:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 318,
                              "name": "nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "3423:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INexus_$154",
                                "typeString": "contract INexus"
                              }
                            },
                            "id": 319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "3423:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3423:28:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 317,
                        "id": 322,
                        "nodeType": "Return",
                        "src": "3416:35:2"
                      }
                    ]
                  },
                  "documentation": "@dev Return Manager Module address from the Nexus\n@return Address of the Manager Module contract",
                  "id": 324,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_manager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 314,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3371:2:2"
                  },
                  "returnParameters": {
                    "id": 317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "3397:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3397:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3396:9:2"
                  },
                  "scope": 347,
                  "src": "3354:104:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "3664:60:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 331,
                              "name": "KEY_SAVINGS_MANAGER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 365,
                              "src": "3697:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "3681:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INexus_$154",
                                "typeString": "contract INexus"
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "3681:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3681:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 328,
                        "id": 333,
                        "nodeType": "Return",
                        "src": "3674:43:2"
                      }
                    ]
                  },
                  "documentation": "@dev Return SavingsManager Module address from the Nexus\n@return Address of the SavingsManager Module contract",
                  "id": 335,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_savingsManager",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3629:2:2"
                  },
                  "returnParameters": {
                    "id": 328,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 327,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "3655:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 326,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3655:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3654:9:2"
                  },
                  "scope": 347,
                  "src": "3605:119:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 345,
                    "nodeType": "Block",
                    "src": "3947:61:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 342,
                              "name": "KEY_RECOLLATERALISER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 361,
                              "src": "3980:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 340,
                              "name": "nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 164,
                              "src": "3964:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_INexus_$154",
                                "typeString": "contract INexus"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getModule",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 115,
                            "src": "3964:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32) view external returns (address)"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3964:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 339,
                        "id": 344,
                        "nodeType": "Return",
                        "src": "3957:44:2"
                      }
                    ]
                  },
                  "documentation": "@dev Return Recollateraliser Module address from the Nexus\n@return  Address of the Recollateraliser Module contract (Phase 2)",
                  "id": 346,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_recollateraliser",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 336,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3912:2:2"
                  },
                  "returnParameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 346,
                        "src": "3938:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3938:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3937:9:2"
                  },
                  "scope": 347,
                  "src": "3886:122:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 348,
              "src": "381:3629:2"
            }
          ],
          "src": "0:4011:2"
        },
        "id": 2
      },
      "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol": {
        "ast": {
          "absolutePath": "@mstable/protocol/contracts/shared/InitializableModuleKeys.sol",
          "exportedSymbols": {
            "InitializableModuleKeys": [
              418
            ]
          },
          "id": 419,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 349,
              "literals": [
                "solidity",
                "0.5",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:3"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": "@title  InitializableModuleKeys\n@author Stability Labs Pty. Ltd.\n@notice Provides system wide access to the byte32 represntations of system modules\n        This allows each system module to be able to reference and update one another in a\n        friendly way. Contract is used for upgradable proxy contracts.\n@dev    The contract is a replica of ModuleKeys.sol\n        The following variables are to be assigned only once from initialize() function.\n        Hence, the variable names are declared in UPPER_CASE to indicate constants.",
              "fullyImplemented": true,
              "id": 418,
              "linearizedBaseContracts": [
                418
              ],
              "name": "InitializableModuleKeys",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 351,
                  "name": "KEY_GOVERNANCE",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "688:31:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 353,
                  "name": "KEY_STAKING",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "741:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 352,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 355,
                  "name": "KEY_PROXY_ADMIN",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "794:32:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 354,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "794:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 357,
                  "name": "KEY_ORACLE_HUB",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "863:31:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 359,
                  "name": "KEY_MANAGER",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "916:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "name": "KEY_RECOLLATERALISER",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "969:37:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "969:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "name": "KEY_META_TOKEN",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "1022:31:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1022:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 365,
                  "name": "KEY_SAVINGS_MANAGER",
                  "nodeType": "VariableDeclaration",
                  "scope": 418,
                  "src": "1075:36:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 416,
                    "nodeType": "Block",
                    "src": "1341:579:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 368,
                            "name": "KEY_GOVERNANCE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 351,
                            "src": "1514:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "476f7665726e616e6365",
                                "id": 370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1541:12:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9409903de1e6fd852dfc61c9dacb48196c48535b60e25abf92acc92dd689078d",
                                  "typeString": "literal_string \"Governance\""
                                },
                                "value": "Governance"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_9409903de1e6fd852dfc61c9dacb48196c48535b60e25abf92acc92dd689078d",
                                  "typeString": "literal_string \"Governance\""
                                }
                              ],
                              "id": 369,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "1531:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1531:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1514:40:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 373,
                        "nodeType": "ExpressionStatement",
                        "src": "1514:40:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "KEY_STAKING",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 353,
                            "src": "1564:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "5374616b696e67",
                                "id": 376,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1588:9:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
                                  "typeString": "literal_string \"Staking\""
                                },
                                "value": "Staking"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_1df41cd916959d1163dc8f0671a666ea8a3e434c13e40faef527133b5d167034",
                                  "typeString": "literal_string \"Staking\""
                                }
                              ],
                              "id": 375,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "1578:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1578:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1564:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "1564:34:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 380,
                            "name": "KEY_PROXY_ADMIN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 355,
                            "src": "1608:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "50726f787941646d696e",
                                "id": 382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1636:12:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_96ed0203eb7e975a4cbcaa23951943fa35c5d8288117d50c12b3d48b0fab48d1",
                                  "typeString": "literal_string \"ProxyAdmin\""
                                },
                                "value": "ProxyAdmin"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_96ed0203eb7e975a4cbcaa23951943fa35c5d8288117d50c12b3d48b0fab48d1",
                                  "typeString": "literal_string \"ProxyAdmin\""
                                }
                              ],
                              "id": 381,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "1626:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1626:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1608:41:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 385,
                        "nodeType": "ExpressionStatement",
                        "src": "1608:41:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 386,
                            "name": "KEY_ORACLE_HUB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "1660:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "4f7261636c65487562",
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1687:11:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_8ae3a082c61a7379e2280f3356a5131507d9829d222d853bfa7c9fe1200dd040",
                                  "typeString": "literal_string \"OracleHub\""
                                },
                                "value": "OracleHub"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_8ae3a082c61a7379e2280f3356a5131507d9829d222d853bfa7c9fe1200dd040",
                                  "typeString": "literal_string \"OracleHub\""
                                }
                              ],
                              "id": 387,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "1677:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1677:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1660:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 391,
                        "nodeType": "ExpressionStatement",
                        "src": "1660:39:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 392,
                            "name": "KEY_MANAGER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "1709:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "4d616e61676572",
                                "id": 394,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1733:9:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_6d439300980e333f0256d64be2c9f67e86f4493ce25f82498d6db7f4be3d9e6f",
                                  "typeString": "literal_string \"Manager\""
                                },
                                "value": "Manager"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_6d439300980e333f0256d64be2c9f67e86f4493ce25f82498d6db7f4be3d9e6f",
                                  "typeString": "literal_string \"Manager\""
                                }
                              ],
                              "id": 393,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "1723:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1723:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1709:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 397,
                        "nodeType": "ExpressionStatement",
                        "src": "1709:34:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 398,
                            "name": "KEY_RECOLLATERALISER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "1753:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "5265636f6c6c61746572616c69736572",
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1786:18:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_39e3ed1fc335ce346a8cbe3e64dd525cf22b37f1e2104a755e761c3c1eb4734f",
                                  "typeString": "literal_string \"Recollateraliser\""
                                },
                                "value": "Recollateraliser"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_39e3ed1fc335ce346a8cbe3e64dd525cf22b37f1e2104a755e761c3c1eb4734f",
                                  "typeString": "literal_string \"Recollateraliser\""
                                }
                              ],
                              "id": 399,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "1776:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1776:29:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1753:52:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 403,
                        "nodeType": "ExpressionStatement",
                        "src": "1753:52:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 404,
                            "name": "KEY_META_TOKEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 363,
                            "src": "1815:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "4d657461546f6b656e",
                                "id": 406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1842:11:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ea7469b14936af748ee93c53b2fe510b9928edbdccac3963321efca7eb1a57a2",
                                  "typeString": "literal_string \"MetaToken\""
                                },
                                "value": "MetaToken"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_ea7469b14936af748ee93c53b2fe510b9928edbdccac3963321efca7eb1a57a2",
                                  "typeString": "literal_string \"MetaToken\""
                                }
                              ],
                              "id": 405,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "1832:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1832:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1815:39:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 409,
                        "nodeType": "ExpressionStatement",
                        "src": "1815:39:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 410,
                            "name": "KEY_SAVINGS_MANAGER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "1864:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "536176696e67734d616e61676572",
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1896:16:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_12fe936c77a1e196473c4314f3bed8eeac1d757b319abb85bdda70df35511bf1",
                                  "typeString": "literal_string \"SavingsManager\""
                                },
                                "value": "SavingsManager"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_12fe936c77a1e196473c4314f3bed8eeac1d757b319abb85bdda70df35511bf1",
                                  "typeString": "literal_string \"SavingsManager\""
                                }
                              ],
                              "id": 411,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1716,
                              "src": "1886:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1886:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1864:49:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 415,
                        "nodeType": "ExpressionStatement",
                        "src": "1864:49:3"
                      }
                    ]
                  },
                  "documentation": "@dev Initialize function for upgradable proxy contracts. This function should be called\n     via Proxy to initialize constants in the Proxy contract.",
                  "id": 417,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 366,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1329:2:3"
                  },
                  "returnParameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1341:0:3"
                  },
                  "scope": 418,
                  "src": "1309:611:3",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 419,
              "src": "592:1330:3"
            }
          ],
          "src": "0:1922:3"
        },
        "id": 3
      },
      "@openzeppelin/upgrades/contracts/Initializable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
          "exportedSymbols": {
            "Initializable": [
              487
            ]
          },
          "id": 488,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 420,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".24",
                "<",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:32:4"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": "@title Initializable\n * @dev Helper contract to support initializer functions. To use it, replace\nthe constructor with a function that has the `initializer` modifier.\nWARNING: Unlike constructors, initializer functions must be manually\ninvoked. This applies both to deploying an Initializable contract, as well\nas extending an Initializable contract via inheritance.\nWARNING: When used with inheritance, manual care must be taken to not invoke\na parent initializer twice, or ensure that all initializers are idempotent,\nbecause this is not dealt with automatically as with constructors.",
              "fullyImplemented": true,
              "id": 487,
              "linearizedBaseContracts": [
                487
              ],
              "name": "Initializable",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 422,
                  "name": "initialized",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "757:24:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 421,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "757:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 424,
                  "name": "initializing",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "876:25:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 423,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "876:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 461,
                    "nodeType": "Block",
                    "src": "1010:313:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 427,
                                  "name": "initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 424,
                                  "src": "1024:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "||",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 428,
                                    "name": "isConstructor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 482,
                                    "src": "1040:13:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                      "typeString": "function () view returns (bool)"
                                    }
                                  },
                                  "id": 429,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1040:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "1024:31:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 432,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "1059:12:4",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "id": 431,
                                  "name": "initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 422,
                                  "src": "1060:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1024:47:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
                              "id": 434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1073:48:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                                "typeString": "literal_string \"Contract instance has already been initialized\""
                              },
                              "value": "Contract instance has already been initialized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                                "typeString": "literal_string \"Contract instance has already been initialized\""
                              }
                            ],
                            "id": 426,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "1016:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1016:106:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 436,
                        "nodeType": "ExpressionStatement",
                        "src": "1016:106:4"
                      },
                      {
                        "assignments": [
                          438
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 438,
                            "name": "isTopLevelCall",
                            "nodeType": "VariableDeclaration",
                            "scope": 461,
                            "src": "1129:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 437,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1129:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 441,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1151:13:4",
                          "subExpression": {
                            "argumentTypes": null,
                            "id": 439,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "1152:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1129:35:4"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 442,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "1174:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 452,
                        "nodeType": "IfStatement",
                        "src": "1170:80:4",
                        "trueBody": {
                          "id": 451,
                          "nodeType": "Block",
                          "src": "1190:60:4",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 443,
                                  "name": "initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 424,
                                  "src": "1198:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 444,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1213:4:4",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1198:19:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 446,
                              "nodeType": "ExpressionStatement",
                              "src": "1198:19:4"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 447,
                                  "name": "initialized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 422,
                                  "src": "1225:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 448,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1239:4:4",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "1225:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 450,
                              "nodeType": "ExpressionStatement",
                              "src": "1225:18:4"
                            }
                          ]
                        }
                      },
                      {
                        "id": 453,
                        "nodeType": "PlaceholderStatement",
                        "src": "1256:1:4"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "id": 454,
                          "name": "isTopLevelCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "1268:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 460,
                        "nodeType": "IfStatement",
                        "src": "1264:55:4",
                        "trueBody": {
                          "id": 459,
                          "nodeType": "Block",
                          "src": "1284:35:4",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 455,
                                  "name": "initializing",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 424,
                                  "src": "1292:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "66616c7365",
                                  "id": 456,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1307:5:4",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "1292:20:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 458,
                              "nodeType": "ExpressionStatement",
                              "src": "1292:20:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": "@dev Modifier to use in the initializer function of a contract.",
                  "id": 462,
                  "name": "initializer",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1007:2:4"
                  },
                  "src": "987:336:4",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "1462:445:4",
                    "statements": [
                      {
                        "assignments": [
                          468
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 468,
                            "name": "self",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "1797:12:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 467,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1797:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 472,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 470,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1744,
                              "src": "1820:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Initializable_$487",
                                "typeString": "contract Initializable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Initializable_$487",
                                "typeString": "contract Initializable"
                              }
                            ],
                            "id": 469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1812:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1812:13:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1797:28:4"
                      },
                      {
                        "assignments": [
                          474
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 474,
                            "name": "cs",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "1831:10:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 473,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1831:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 475,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1831:10:4"
                      },
                      {
                        "externalReferences": [
                          {
                            "cs": {
                              "declaration": 474,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1858:2:4",
                              "valueSize": 1
                            }
                          },
                          {
                            "self": {
                              "declaration": 468,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1876:4:4",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 476,
                        "nodeType": "InlineAssembly",
                        "operations": "{ cs := extcodesize(self) }",
                        "src": "1847:36:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 477,
                            "name": "cs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 474,
                            "src": "1895:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1901:1:4",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1895:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 466,
                        "id": 480,
                        "nodeType": "Return",
                        "src": "1888:14:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns true if and only if the function is running in the constructor",
                  "id": 482,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isConstructor",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 463,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1431:2:4"
                  },
                  "returnParameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "1456:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1456:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1455:6:4"
                  },
                  "scope": 487,
                  "src": "1409:498:4",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 486,
                  "name": "______gap",
                  "nodeType": "VariableDeclaration",
                  "scope": 487,
                  "src": "1982:29:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$50_storage",
                    "typeString": "uint256[50]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 483,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1982:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 485,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3530",
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1990:2:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1982:11:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                      "typeString": "uint256[50]"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                }
              ],
              "scope": 488,
              "src": "657:1357:4"
            }
          ],
          "src": "0:2015:4"
        },
        "id": 4
      },
      "contracts/migration/MerkleDrop.sol": {
        "ast": {
          "absolutePath": "contracts/migration/MerkleDrop.sol",
          "exportedSymbols": {
            "MerkleDrop": [
              1087
            ]
          },
          "id": 1088,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 489,
              "literals": [
                "solidity",
                "0.5",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "1491:23:5"
            },
            {
              "id": 490,
              "literals": [
                "experimental",
                "ABIEncoderV2"
              ],
              "nodeType": "PragmaDirective",
              "src": "1515:33:5"
            },
            {
              "absolutePath": "openzeppelin-contracts-sol5/cryptography/MerkleProof.sol",
              "file": "openzeppelin-contracts-sol5/cryptography/MerkleProof.sol",
              "id": 492,
              "nodeType": "ImportDirective",
              "scope": 1088,
              "sourceUnit": 1157,
              "src": "1550:87:5",
              "symbolAliases": [
                {
                  "foreign": 491,
                  "local": null
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "openzeppelin-contracts-sol5/token/ERC20/IERC20.sol",
              "file": "openzeppelin-contracts-sol5/token/ERC20/IERC20.sol",
              "id": 494,
              "nodeType": "ImportDirective",
              "scope": 1088,
              "sourceUnit": 1413,
              "src": "1638:76:5",
              "symbolAliases": [
                {
                  "foreign": 493,
                  "local": null
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol",
              "file": "openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol",
              "id": 496,
              "nodeType": "ImportDirective",
              "scope": 1088,
              "sourceUnit": 1633,
              "src": "1715:82:5",
              "symbolAliases": [
                {
                  "foreign": 495,
                  "local": null
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "openzeppelin-contracts-sol5/math/SafeMath.sol",
              "file": "openzeppelin-contracts-sol5/math/SafeMath.sol",
              "id": 498,
              "nodeType": "ImportDirective",
              "scope": 1088,
              "sourceUnit": 1344,
              "src": "1798:73:5",
              "symbolAliases": [
                {
                  "foreign": 497,
                  "local": null
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
              "id": 500,
              "nodeType": "ImportDirective",
              "scope": 1088,
              "sourceUnit": 488,
              "src": "1873:83:5",
              "symbolAliases": [
                {
                  "foreign": 499,
                  "local": null
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol",
              "file": "@mstable/protocol/contracts/governance/InitializableGovernableWhitelist.sol",
              "id": 502,
              "nodeType": "ImportDirective",
              "scope": 1088,
              "sourceUnit": 102,
              "src": "1957:127:5",
              "symbolAliases": [
                {
                  "foreign": 501,
                  "local": null
                }
              ],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 503,
                    "name": "Initializable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 487,
                    "src": "2109:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Initializable_$487",
                      "typeString": "contract Initializable"
                    }
                  },
                  "id": 504,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2109:13:5"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 505,
                    "name": "InitializableGovernableWhitelist",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 101,
                    "src": "2124:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_InitializableGovernableWhitelist_$101",
                      "typeString": "contract InitializableGovernableWhitelist"
                    }
                  },
                  "id": 506,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2124:32:5"
                }
              ],
              "contractDependencies": [
                101,
                347,
                418,
                487
              ],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1087,
              "linearizedBaseContracts": [
                1087,
                101,
                347,
                418,
                487
              ],
              "name": "MerkleDrop",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 511,
                    "nodeType": "Block",
                    "src": "2216:2:5",
                    "statements": []
                  },
                  "documentation": null,
                  "id": 512,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "c_0x89b12937",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 509,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 508,
                        "name": "c__0x89b12937",
                        "nodeType": "VariableDeclaration",
                        "scope": 512,
                        "src": "2181:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 507,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2181:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2180:23:5"
                  },
                  "returnParameters": {
                    "id": 510,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2216:0:5"
                  },
                  "scope": 1087,
                  "src": "2159:59:5",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "id": 515,
                  "libraryName": {
                    "contractScope": null,
                    "id": 513,
                    "name": "SafeERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1632,
                    "src": "2231:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeERC20_$1632",
                      "typeString": "library SafeERC20"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "2225:27:5",
                  "typeName": {
                    "contractScope": null,
                    "id": 514,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1412,
                    "src": "2245:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1412",
                      "typeString": "contract IERC20"
                    }
                  }
                },
                {
                  "id": 518,
                  "libraryName": {
                    "contractScope": null,
                    "id": 516,
                    "name": "SafeMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1343,
                    "src": "2263:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeMath_$1343",
                      "typeString": "library SafeMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "2257:27:5",
                  "typeName": {
                    "id": 517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 526,
                  "name": "Claimed",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 525,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 520,
                        "indexed": false,
                        "name": "claimant",
                        "nodeType": "VariableDeclaration",
                        "scope": 526,
                        "src": "2304:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 519,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2304:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 522,
                        "indexed": false,
                        "name": "week",
                        "nodeType": "VariableDeclaration",
                        "scope": 526,
                        "src": "2322:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 521,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2322:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 524,
                        "indexed": false,
                        "name": "balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 526,
                        "src": "2336:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 523,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2336:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2303:49:5"
                  },
                  "src": "2290:63:5"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 534,
                  "name": "TrancheAdded",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 533,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 528,
                        "indexed": false,
                        "name": "tranche",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2377:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 527,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 530,
                        "indexed": false,
                        "name": "merkleRoot",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2394:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 529,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2394:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 532,
                        "indexed": false,
                        "name": "totalAmount",
                        "nodeType": "VariableDeclaration",
                        "scope": 534,
                        "src": "2414:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 531,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2414:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:58:5"
                  },
                  "src": "2358:77:5"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 538,
                  "name": "TrancheExpired",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 537,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 536,
                        "indexed": false,
                        "name": "tranche",
                        "nodeType": "VariableDeclaration",
                        "scope": 538,
                        "src": "2461:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 535,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2461:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2460:17:5"
                  },
                  "src": "2440:38:5"
                },
                {
                  "anonymous": false,
                  "documentation": null,
                  "id": 542,
                  "name": "RemovedFunder",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 541,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 540,
                        "indexed": true,
                        "name": "_address",
                        "nodeType": "VariableDeclaration",
                        "scope": 542,
                        "src": "2503:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2503:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2502:26:5"
                  },
                  "src": "2483:46:5"
                },
                {
                  "constant": false,
                  "id": 544,
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "2535:19:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$1412",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 543,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1412,
                    "src": "2535:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$1412",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 548,
                  "name": "merkleRoots",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "2561:46:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                    "typeString": "mapping(uint256 => bytes32)"
                  },
                  "typeName": {
                    "id": 547,
                    "keyType": {
                      "id": 545,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2569:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2561:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                      "typeString": "mapping(uint256 => bytes32)"
                    },
                    "valueType": {
                      "id": 546,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2580:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 554,
                  "name": "claimed",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "2613:59:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                    "typeString": "mapping(uint256 => mapping(address => bool))"
                  },
                  "typeName": {
                    "id": 553,
                    "keyType": {
                      "id": 549,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2621:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2613:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                      "typeString": "mapping(uint256 => mapping(address => bool))"
                    },
                    "valueType": {
                      "id": 552,
                      "keyType": {
                        "id": 550,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2640:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "2632:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "valueType": {
                        "id": 551,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2651:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 556,
                  "name": "tranches",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "2678:16:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 558,
                  "name": "thresholdBlock",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "2701:29:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2701:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 615,
                    "nodeType": "Block",
                    "src": "2921:822:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307834643166313931346234363361316466316632326235393137333939396436366530306633656233643933633936303738343631303839373431666534643565",
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2935:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_34883034701774443781786772737248437315181748179933632288226580824650732686686_by_1",
                                "typeString": "int_const 3488...(69 digits omitted)...6686"
                              },
                              "value": "0x4d1f1914b463a1df1f22b59173999d66e00f3eb3d93c96078461089741fe4d5e"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_34883034701774443781786772737248437315181748179933632288226580824650732686686_by_1",
                                "typeString": "int_const 3488...(69 digits omitted)...6686"
                              }
                            ],
                            "id": 572,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "2922:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2922:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 575,
                        "nodeType": "ExpressionStatement",
                        "src": "2922:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307863383638306161353138363664643238633936346439666631633436386631336632363566653931393437373837343336393639383239353966313534323764",
                              "id": 577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3034:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_90646395279814708386022014651612323527259867170312475355389625129481597698685_by_1",
                                "typeString": "int_const 9064...(69 digits omitted)...8685"
                              },
                              "value": "0xc8680aa51866dd28c964d9ff1c468f13f265fe9194778743696982959f15427d"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_90646395279814708386022014651612323527259867170312475355389625129481597698685_by_1",
                                "typeString": "int_const 9064...(69 digits omitted)...8685"
                              }
                            ],
                            "id": 576,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "3021:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3021:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 579,
                        "nodeType": "ExpressionStatement",
                        "src": "3021:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307837306665373535306138323932393936373733633661386566663965633630346436623164363230663931353664363264643536643664303366346333326537",
                              "id": 581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3136:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_51108627874607251236519659836460379239249743158011816728872410966060245463783_by_1",
                                "typeString": "int_const 5110...(69 digits omitted)...3783"
                              },
                              "value": "0x70fe7550a8292996773c6a8eff9ec604d6b1d620f9156d62dd56d6d03f4c32e7"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_51108627874607251236519659836460379239249743158011816728872410966060245463783_by_1",
                                "typeString": "int_const 5110...(69 digits omitted)...3783"
                              }
                            ],
                            "id": 580,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "3123:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3123:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 583,
                        "nodeType": "ExpressionStatement",
                        "src": "3123:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 587,
                              "name": "_nexus",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 560,
                              "src": "3267:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 588,
                              "name": "_funders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 563,
                              "src": "3275:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 584,
                              "name": "InitializableGovernableWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "3222:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_InitializableGovernableWhitelist_$101_$",
                                "typeString": "type(contract InitializableGovernableWhitelist)"
                              }
                            },
                            "id": 586,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_initialize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 67,
                            "src": "3222:44:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,address[] memory)"
                            }
                          },
                          "id": 589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3222:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 590,
                        "nodeType": "ExpressionStatement",
                        "src": "3222:62:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307833383562663035656439373561643034613239636332656233323437633861633836313665386438366339626133336239623064303866616466363061663834",
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3299:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25491961579817143500123219821575164649101222238796560129431378650200105070468_by_1",
                                "typeString": "int_const 2549...(69 digits omitted)...0468"
                              },
                              "value": "0x385bf05ed975ad04a29cc2eb3247c8ac8616e8d86c9ba33b9b0d08fadf60af84"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_25491961579817143500123219821575164649101222238796560129431378650200105070468_by_1",
                                "typeString": "int_const 2549...(69 digits omitted)...0468"
                              }
                            ],
                            "id": 591,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "3286:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3286:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 594,
                        "nodeType": "ExpressionStatement",
                        "src": "3286:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307866626333626437633830303664313132393335353961326663363632363939393039313230323363343438633133366536313431353366633263333264366566",
                              "id": 596,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3401:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_113876367958607356126271278583015386990252844814754187318695549490757597583087_by_1",
                                "typeString": "int_const 1138...(70 digits omitted)...3087"
                              },
                              "value": "0xfbc3bd7c8006d11293559a2fc66269990912023c448c136e614153fc2c32d6ef"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_113876367958607356126271278583015386990252844814754187318695549490757597583087_by_1",
                                "typeString": "int_const 1138...(70 digits omitted)...3087"
                              }
                            ],
                            "id": 595,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "3388:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3388:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 598,
                        "nodeType": "ExpressionStatement",
                        "src": "3388:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 544,
                            "src": "3487:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1412",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 600,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 565,
                            "src": "3495:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$1412",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "3487:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1412",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 602,
                        "nodeType": "ExpressionStatement",
                        "src": "3487:14:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307865343261383264396661373832333134373630346164363766376230386164613438653834623965656230323764333331383434383364653937653832653331",
                              "id": 604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3516:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_103202440157416432661067925191508910788064303879615593188917025625344567684657_by_1",
                                "typeString": "int_const 1032...(70 digits omitted)...4657"
                              },
                              "value": "0xe42a82d9fa7823147604ad67f7b08ada48e84b9eeb027d33184483de97e82e31"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_103202440157416432661067925191508910788064303879615593188917025625344567684657_by_1",
                                "typeString": "int_const 1032...(70 digits omitted)...4657"
                              }
                            ],
                            "id": 603,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "3503:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3503:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 606,
                        "nodeType": "ExpressionStatement",
                        "src": "3503:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307864303234353963613438363266373830616636383166303334333339363862363737313632386638313238373065353431376635623035626339646230643538",
                              "id": 608,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3618:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_94145298708608719325380145674655950301306999756649189865824421620106403712344_by_1",
                                "typeString": "int_const 9414...(69 digits omitted)...2344"
                              },
                              "value": "0xd02459ca4862f780af681f03433968b6771628f812870e5417f5b05bc9db0d58"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_94145298708608719325380145674655950301306999756649189865824421620106403712344_by_1",
                                "typeString": "int_const 9414...(69 digits omitted)...2344"
                              }
                            ],
                            "id": 607,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "3605:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3605:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 610,
                        "nodeType": "ExpressionStatement",
                        "src": "3605:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 611,
                            "name": "thresholdBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 558,
                            "src": "3704:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 612,
                            "name": "_thresholdBlock",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 567,
                            "src": "3721:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3704:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 614,
                        "nodeType": "ExpressionStatement",
                        "src": "3704:32:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 570,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 569,
                        "name": "initializer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "2905:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2905:11:5"
                    }
                  ],
                  "name": "initialize",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 568,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "name": "_nexus",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "2766:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 559,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2766:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 563,
                        "name": "_funders",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "2790:27:5",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 561,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2790:7:5",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 562,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "2790:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 565,
                        "name": "_token",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "2827:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1412",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 564,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1412,
                          "src": "2827:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1412",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 567,
                        "name": "_thresholdBlock",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "2850:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 566,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2850:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2756:123:5"
                  },
                  "returnParameters": {
                    "id": 571,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2921:0:5"
                  },
                  "scope": 1087,
                  "src": "2737:1006:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 705,
                    "nodeType": "Block",
                    "src": "4021:1327:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307833313532343239363864656437663962383333306563646633396364343631616532323562316464316333386663323533366437346333363964666437346430",
                              "id": 628,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4035:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_22308670614089503122711685562029175624686259406494496363846607176166438434000_by_1",
                                "typeString": "int_const 2230...(69 digits omitted)...4000"
                              },
                              "value": "0x315242968ded7f9b8330ecdf39cd461ae225b1dd1c38fc2536d74c369dfd74d0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_22308670614089503122711685562029175624686259406494496363846607176166438434000_by_1",
                                "typeString": "int_const 2230...(69 digits omitted)...4000"
                              }
                            ],
                            "id": 627,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "4022:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4022:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 630,
                        "nodeType": "ExpressionStatement",
                        "src": "4022:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830666439356364313335333536323637653936653363386335373666333833333131316366656338616137343062323832313339336531663366633566646432",
                              "id": 632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4134:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_7168739142702175917483153981348861442731551060562552499889955348441488293330_by_1",
                                "typeString": "int_const 7168...(68 digits omitted)...3330"
                              },
                              "value": "0x0fd95cd135356267e96e3c8c576f3833111cfec8aa740b2821393e1f3fc5fdd2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_7168739142702175917483153981348861442731551060562552499889955348441488293330_by_1",
                                "typeString": "int_const 7168...(68 digits omitted)...3330"
                              }
                            ],
                            "id": 631,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "4121:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4121:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 634,
                        "nodeType": "ExpressionStatement",
                        "src": "4121:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307837343961346234393165336563386663326362386464336539336639386261666437313261306166353836353731356263383965316432363834646337616339",
                              "id": 636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4236:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_52740904485872085273572459761511558881812978632473872108652891376718960163529_by_1",
                                "typeString": "int_const 5274...(69 digits omitted)...3529"
                              },
                              "value": "0x749a4b491e3ec8fc2cb8dd3e93f98bafd712a0af5865715bc89e1d2684dc7ac9"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_52740904485872085273572459761511558881812978632473872108652891376718960163529_by_1",
                                "typeString": "int_const 5274...(69 digits omitted)...3529"
                              }
                            ],
                            "id": 635,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "4223:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4223:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 638,
                        "nodeType": "ExpressionStatement",
                        "src": "4223:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 642,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1722,
                                "src": "4341:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 643,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4341:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 645,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1756,
                                  "src": "4361:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MerkleDrop_$1087",
                                    "typeString": "contract MerkleDrop"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MerkleDrop_$1087",
                                    "typeString": "contract MerkleDrop"
                                  }
                                ],
                                "id": 644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4353:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4353:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 647,
                              "name": "_totalAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "4368:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 639,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "4322:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1395,
                            "src": "4322:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4322:63:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 649,
                        "nodeType": "ExpressionStatement",
                        "src": "4322:63:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307837653539656361356331623433303831363138353034623265616537646166636437643936656535333232626562616536333066373635383466343162666162",
                              "id": 651,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4401:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_57150301591185281735555571691654233305929156069945062233209674410094456061867_by_1",
                                "typeString": "int_const 5715...(69 digits omitted)...1867"
                              },
                              "value": "0x7e59eca5c1b43081618504b2eae7dafcd7d96ee5322bebae630f76584f41bfab"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_57150301591185281735555571691654233305929156069945062233209674410094456061867_by_1",
                                "typeString": "int_const 5715...(69 digits omitted)...1867"
                              }
                            ],
                            "id": 650,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "4388:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4388:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 653,
                        "nodeType": "ExpressionStatement",
                        "src": "4388:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307833613933303234636535373238656536346361646465303933386339633034326465656263363132656631363732353764633766333638613738353431383736",
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4503:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_26493887612964154609476847088692585396650461239059069504876298329191913625718_by_1",
                                "typeString": "int_const 2649...(69 digits omitted)...5718"
                              },
                              "value": "0x3a93024ce5728ee64cadde0938c9c042deebc612ef167257dc7f368a78541876"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_26493887612964154609476847088692585396650461239059069504876298329191913625718_by_1",
                                "typeString": "int_const 2649...(69 digits omitted)...5718"
                              }
                            ],
                            "id": 654,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "4490:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4490:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 657,
                        "nodeType": "ExpressionStatement",
                        "src": "4490:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 658,
                            "name": "trancheId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 625,
                            "src": "4589:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 659,
                            "name": "tranches",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "4601:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4589:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 661,
                        "nodeType": "ExpressionStatement",
                        "src": "4589:20:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307861376635373463376230393134646631306135666533613832383431383366626435343331303635653439366134333863333630663465316332356464313739",
                              "id": 663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4624:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_75969929230476543608603972613519942951723948932266909081036146982078925099385_by_1",
                                "typeString": "int_const 7596...(69 digits omitted)...9385"
                              },
                              "value": "0xa7f574c7b0914df10a5fe3a8284183fbd5431065e496a438c360f4e1c25dd179"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_75969929230476543608603972613519942951723948932266909081036146982078925099385_by_1",
                                "typeString": "int_const 7596...(69 digits omitted)...9385"
                              }
                            ],
                            "id": 662,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "4611:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4611:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 665,
                        "nodeType": "ExpressionStatement",
                        "src": "4611:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307835646563633161623232626433383033343037323866383639346164363262303065613861613934303661373031303739346530313534383333343032656662",
                              "id": 667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4726:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_42483407476385741498077588110557535738354608071080815655254812219546078818043_by_1",
                                "typeString": "int_const 4248...(69 digits omitted)...8043"
                              },
                              "value": "0x5decc1ab22bd380340728f8694ad62b00ea8aa9406a7010794e0154833402efb"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_42483407476385741498077588110557535738354608071080815655254812219546078818043_by_1",
                                "typeString": "int_const 4248...(69 digits omitted)...8043"
                              }
                            ],
                            "id": 666,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "4713:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4713:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 669,
                        "nodeType": "ExpressionStatement",
                        "src": "4713:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 670,
                              "name": "merkleRoots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 548,
                              "src": "4812:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 672,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 671,
                              "name": "trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "4824:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4812:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 673,
                            "name": "_merkleRoot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 618,
                            "src": "4837:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "4812:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 675,
                        "nodeType": "ExpressionStatement",
                        "src": "4812:36:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830303261636430373235326562303733393662326334373864666635613065643439346264633138633863643037653137613466333366663266313961306434",
                              "id": 677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4864:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_75622627357172518276811931651807485239069993470288343411889375752257904852_by_1",
                                "typeString": "int_const 7562...(66 digits omitted)...4852"
                              },
                              "value": "0x002acd07252eb07396b2c478dff5a0ed494bdc18c8cd07e17a4f33ff2f19a0d4"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_75622627357172518276811931651807485239069993470288343411889375752257904852_by_1",
                                "typeString": "int_const 7562...(66 digits omitted)...4852"
                              }
                            ],
                            "id": 676,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "4851:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4851:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 679,
                        "nodeType": "ExpressionStatement",
                        "src": "4851:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307834393339306364336363353034326430346266356430616538376130316134653066333632666635373232303536386237363062613532326365353464326364",
                              "id": 681,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4966:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_33119636760292447470532068868366029152539883701204334556031011039585693389517_by_1",
                                "typeString": "int_const 3311...(69 digits omitted)...9517"
                              },
                              "value": "0x49390cd3cc5042d04bf5d0ae87a01a4e0f362ff57220568b760ba522ce54d2cd"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_33119636760292447470532068868366029152539883701204334556031011039585693389517_by_1",
                                "typeString": "int_const 3311...(69 digits omitted)...9517"
                              }
                            ],
                            "id": 680,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "4953:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4953:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 683,
                        "nodeType": "ExpressionStatement",
                        "src": "4953:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 684,
                            "name": "tranches",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 556,
                            "src": "5052:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "31",
                                "id": 687,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5076:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 685,
                                "name": "tranches",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 556,
                                "src": "5063:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "add",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1183,
                              "src": "5063:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 688,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5063:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5052:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 690,
                        "nodeType": "ExpressionStatement",
                        "src": "5052:26:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307837366234356338636132393230623237306138313466636663653431343037336461663165353536633532663039383265356137333933376463363238396464",
                              "id": 692,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5094:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_53691587356662651228366787391026440154925043532428128400709036376852753713629_by_1",
                                "typeString": "int_const 5369...(69 digits omitted)...3629"
                              },
                              "value": "0x76b45c8ca2920b270a814fcfce414073daf1e556c52f0982e5a73937dc6289dd"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_53691587356662651228366787391026440154925043532428128400709036376852753713629_by_1",
                                "typeString": "int_const 5369...(69 digits omitted)...3629"
                              }
                            ],
                            "id": 691,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "5081:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5081:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 694,
                        "nodeType": "ExpressionStatement",
                        "src": "5081:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830383237633233356265323934306138353532343433326166386563613237396436366164383236333339396532633666633839316633393465616263376537",
                              "id": 696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5196:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_3688750211887244563613012479940885207039384189398679087567048249022398318567_by_1",
                                "typeString": "int_const 3688...(68 digits omitted)...8567"
                              },
                              "value": "0x0827c235be2940a85524432af8eca279d66ad8263399e2c6fc891f394eabc7e7"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_3688750211887244563613012479940885207039384189398679087567048249022398318567_by_1",
                                "typeString": "int_const 3688...(68 digits omitted)...8567"
                              }
                            ],
                            "id": 695,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "5183:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5183:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 698,
                        "nodeType": "ExpressionStatement",
                        "src": "5183:80:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 700,
                              "name": "trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 625,
                              "src": "5300:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 701,
                              "name": "_merkleRoot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 618,
                              "src": "5311:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 702,
                              "name": "_totalAllocation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "5324:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 699,
                            "name": "TrancheAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 534,
                            "src": "5287:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,bytes32,uint256)"
                            }
                          },
                          "id": 703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5287:54:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 704,
                        "nodeType": "EmitStatement",
                        "src": "5282:59:5"
                      }
                    ]
                  },
                  "documentation": "*************************************\nADMIN***************************************",
                  "id": 706,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 623,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 622,
                        "name": "onlyWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "3965:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3965:15:5"
                    }
                  ],
                  "name": "seedNewAllocations",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 618,
                        "name": "_merkleRoot",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "3895:19:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 617,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3895:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 620,
                        "name": "_totalAllocation",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "3916:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 619,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3916:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3894:47:5"
                  },
                  "returnParameters": {
                    "id": 626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 625,
                        "name": "trancheId",
                        "nodeType": "VariableDeclaration",
                        "scope": 706,
                        "src": "3998:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3998:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3997:19:5"
                  },
                  "scope": 1087,
                  "src": "3867:1481:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 745,
                    "nodeType": "Block",
                    "src": "5440:579:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307863623232343662373163663432646338353963633132303862646665643133626461633536343561366131383638623233353265393639653065353935346230",
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5454:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_91880069121569250849573192734334384635661286913153724815314918126804119671984_by_1",
                                "typeString": "int_const 9188...(69 digits omitted)...1984"
                              },
                              "value": "0xcb2246b71cf42dc859cc1208bdfed13bdac5645a6a1868b2352e969e0e5954b0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_91880069121569250849573192734334384635661286913153724815314918126804119671984_by_1",
                                "typeString": "int_const 9188...(69 digits omitted)...1984"
                              }
                            ],
                            "id": 713,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "5441:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5441:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "5441:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307861353338353166333931393236316635653739383764323730343861306565306431313633323835313632633934393439666630323837626561343231626161",
                              "id": 718,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5553:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_74731129059918174382169346846017701601097403856528978217607908076503240416170_by_1",
                                "typeString": "int_const 7473...(69 digits omitted)...6170"
                              },
                              "value": "0xa53851f3919261f5e7987d27048a0ee0d1163285162c94949ff0287bea421baa"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_74731129059918174382169346846017701601097403856528978217607908076503240416170_by_1",
                                "typeString": "int_const 7473...(69 digits omitted)...6170"
                              }
                            ],
                            "id": 717,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "5540:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5540:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 720,
                        "nodeType": "ExpressionStatement",
                        "src": "5540:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307838646631336362343461383839633561316463393433656437363037313131626365633130623631323131613735353635663737613133363764353830323031",
                              "id": 722,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5655:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_64202340758272666891437259139193028899467121136057494198309665346762309108225_by_1",
                                "typeString": "int_const 6420...(69 digits omitted)...8225"
                              },
                              "value": "0x8df13cb44a889c5a1dc943ed7607111bcec10b61211a75565f77a1367d580201"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_64202340758272666891437259139193028899467121136057494198309665346762309108225_by_1",
                                "typeString": "int_const 6420...(69 digits omitted)...8225"
                              }
                            ],
                            "id": 721,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "5642:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5642:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "5642:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 725,
                              "name": "merkleRoots",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 548,
                              "src": "5741:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                "typeString": "mapping(uint256 => bytes32)"
                              }
                            },
                            "id": 727,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 726,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "5753:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5741:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 729,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5775:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5767:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              },
                              "typeName": "bytes32"
                            },
                            "id": 730,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5767:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5741:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 732,
                        "nodeType": "ExpressionStatement",
                        "src": "5741:36:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307862323566656533646434336562376165313333393265343239616263383336626264333739366133653666623165333734616136663131306337663866323335",
                              "id": 734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5793:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_80681181801514652808854309816895274187970154857622415260916334230368383726133_by_1",
                                "typeString": "int_const 8068...(69 digits omitted)...6133"
                              },
                              "value": "0xb25fee3dd43eb7ae13392e429abc836bbd3796a3e6fb1e374aa6f110c7f8f235"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_80681181801514652808854309816895274187970154857622415260916334230368383726133_by_1",
                                "typeString": "int_const 8068...(69 digits omitted)...6133"
                              }
                            ],
                            "id": 733,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "5780:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5780:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 736,
                        "nodeType": "ExpressionStatement",
                        "src": "5780:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307863613733303234306132373930623139376364316661623466663235363530313931666537633035376533386166626236323665303336376435373636366465",
                              "id": 738,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5895:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_91570398372308990527553925437314081041655199486872254789622329533429506795230_by_1",
                                "typeString": "int_const 9157...(69 digits omitted)...5230"
                              },
                              "value": "0xca730240a2790b197cd1fab4ff25650191fe7c057e38afbb626e0367d57666de"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_91570398372308990527553925437314081041655199486872254789622329533429506795230_by_1",
                                "typeString": "int_const 9157...(69 digits omitted)...5230"
                              }
                            ],
                            "id": 737,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "5882:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5882:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 740,
                        "nodeType": "ExpressionStatement",
                        "src": "5882:80:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 742,
                              "name": "_trancheId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 708,
                              "src": "6001:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 741,
                            "name": "TrancheExpired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "5986:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5986:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 744,
                        "nodeType": "EmitStatement",
                        "src": "5981:31:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 746,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 711,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 710,
                        "name": "onlyWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "5420:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_modifier$__$",
                          "typeString": "modifier ()"
                        }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5420:15:5"
                    }
                  ],
                  "name": "expireTranche",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 709,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 708,
                        "name": "_trancheId",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "5377:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 707,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5377:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5376:20:5"
                  },
                  "returnParameters": {
                    "id": 712,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5440:0:5"
                  },
                  "scope": 1087,
                  "src": "5354:665:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 814,
                    "nodeType": "Block",
                    "src": "6310:1073:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307861623136666666613565633938333466333638333233336535623132323539376530396333373430313561646538303033663664306232313337643235373466",
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6324:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_77386134438451028275476246284270117982810038633465878253719938594859354576719_by_1",
                                "typeString": "int_const 7738...(69 digits omitted)...6719"
                              },
                              "value": "0xab16fffa5ec9834f3683233e5b122597e09c374015ade8003f6d0b2137d2574f"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_77386134438451028275476246284270117982810038633465878253719938594859354576719_by_1",
                                "typeString": "int_const 7738...(69 digits omitted)...6719"
                              }
                            ],
                            "id": 758,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "6311:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6311:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 761,
                        "nodeType": "ExpressionStatement",
                        "src": "6311:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307865366631636237623536396338373131376230323939613866653465316533363866653733383463363431346465633930383831323633666433653464333563",
                              "id": 763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6423:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_104459169696465947300866025375277658146427934763368490607020752159753214677852_by_1",
                                "typeString": "int_const 1044...(70 digits omitted)...7852"
                              },
                              "value": "0xe6f1cb7b569c87117b0299a8fe4e1e368fe7384c6414dec90881263fd3e4d35c"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_104459169696465947300866025375277658146427934763368490607020752159753214677852_by_1",
                                "typeString": "int_const 1044...(70 digits omitted)...7852"
                              }
                            ],
                            "id": 762,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "6410:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6410:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 765,
                        "nodeType": "ExpressionStatement",
                        "src": "6410:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307835633263616333333863646230656236666537333835346264366663326464336462633338633165616266313430663839633530376236373637613931363538",
                              "id": 767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6525:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_41691711830673520496417160330138915773715084039391959653830087424203666560600_by_1",
                                "typeString": "int_const 4169...(69 digits omitted)...0600"
                              },
                              "value": "0x5c2cac338cdb0eb6fe73854bd6fc2dd3dbc38c1eabf140f89c507b6767a91658"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_41691711830673520496417160330138915773715084039391959653830087424203666560600_by_1",
                                "typeString": "int_const 4169...(69 digits omitted)...0600"
                              }
                            ],
                            "id": 766,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "6512:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6512:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 769,
                        "nodeType": "ExpressionStatement",
                        "src": "6512:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307864613566613736316266616536663837343264363061663865396231643164633237396531343133666632623032306632373465666230663735326335653665",
                              "id": 771,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6625:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_98773206689247166290568000542463628103071673627016662083078176592466719563374_by_1",
                                "typeString": "int_const 9877...(69 digits omitted)...3374"
                              },
                              "value": "0xda5fa761bfae6f8742d60af8e9b1d1dc279e1413ff2b020f274efb0f752c5e6e"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_98773206689247166290568000542463628103071673627016662083078176592466719563374_by_1",
                                "typeString": "int_const 9877...(69 digits omitted)...3374"
                              }
                            ],
                            "id": 770,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "6612:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6612:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 773,
                        "nodeType": "ExpressionStatement",
                        "src": "6612:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 778,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 775,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1712,
                                  "src": "6719:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6719:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 777,
                                "name": "thresholdBlock",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 558,
                                "src": "6735:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6719:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5265776172647320617265206e6f742079657420636c61696d61626c65",
                              "id": 779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6751:31:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a349e07653ed5f99dc7f7105ecf95f7197f6bb78c44462329b7c366228e55d19",
                                "typeString": "literal_string \"Rewards are not yet claimable\""
                              },
                              "value": "Rewards are not yet claimable"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a349e07653ed5f99dc7f7105ecf95f7197f6bb78c44462329b7c366228e55d19",
                                "typeString": "literal_string \"Rewards are not yet claimable\""
                              }
                            ],
                            "id": 774,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "6711:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6711:72:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 781,
                        "nodeType": "ExpressionStatement",
                        "src": "6711:72:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307831643563336434376238616533353035663066323237623938396436316666323863616635363166316663346332636530366438666564376634363533663537",
                              "id": 783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6797:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_13280045479006830533502348910495778119434240168135566619887579681992237989719_by_1",
                                "typeString": "int_const 1328...(69 digits omitted)...9719"
                              },
                              "value": "0x1d5c3d47b8ae3505f0f227b989d61ff28caf561f1fc4c2ce06d8fed7f4653f57"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_13280045479006830533502348910495778119434240168135566619887579681992237989719_by_1",
                                "typeString": "int_const 1328...(69 digits omitted)...9719"
                              }
                            ],
                            "id": 782,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "6784:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6784:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 785,
                        "nodeType": "ExpressionStatement",
                        "src": "6784:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307839643961333161303339343530333237633962393532656433313264356534393931386233356265653531343662613133396332373132323364356232343162",
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6899:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_71285554180742344292384579483408304749850652893607961925047352946000100271131_by_1",
                                "typeString": "int_const 7128...(69 digits omitted)...1131"
                              },
                              "value": "0x9d9a31a039450327c9b952ed312d5e49918b35bee5146ba139c271223d5b241b"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_71285554180742344292384579483408304749850652893607961925047352946000100271131_by_1",
                                "typeString": "int_const 7128...(69 digits omitted)...1131"
                              }
                            ],
                            "id": 786,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "6886:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6886:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 789,
                        "nodeType": "ExpressionStatement",
                        "src": "6886:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830643634636563653330373731313337303433646666346661636239646132633834323531353934376434306135356163653737383035353666353163306161",
                              "id": 791,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7001:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6058179056660725194945969661152337006626081263448202913042291696192332087466_by_1",
                                "typeString": "int_const 6058...(68 digits omitted)...7466"
                              },
                              "value": "0x0d64cece30771137043dff4facb9da2c842515947d40a55ace7780556f51c0aa"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_6058179056660725194945969661152337006626081263448202913042291696192332087466_by_1",
                                "typeString": "int_const 6058...(68 digits omitted)...7466"
                              }
                            ],
                            "id": 790,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "6988:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6988:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 793,
                        "nodeType": "ExpressionStatement",
                        "src": "6988:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 795,
                              "name": "_claimer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "7101:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 796,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 750,
                              "src": "7111:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 797,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "7121:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 798,
                              "name": "_merkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 755,
                              "src": "7131:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            ],
                            "id": 794,
                            "name": "_claimTranche",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "7087:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,uint256,bytes32[] memory)"
                            }
                          },
                          "id": 799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7087:57:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 800,
                        "nodeType": "ExpressionStatement",
                        "src": "7087:57:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307833666534306539316464313533376232313830363436613930303262373331666237333238643531303532663235623336643130616436336333656365643963",
                              "id": 802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7159:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_28898651148439120756582905381330375887445356910842699476591183999599643520412_by_1",
                                "typeString": "int_const 2889...(69 digits omitted)...0412"
                              },
                              "value": "0x3fe40e91dd1537b2180646a9002b731fb7328d51052f25b36d10ad63c3eced9c"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_28898651148439120756582905381330375887445356910842699476591183999599643520412_by_1",
                                "typeString": "int_const 2889...(69 digits omitted)...0412"
                              }
                            ],
                            "id": 801,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "7146:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7146:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 804,
                        "nodeType": "ExpressionStatement",
                        "src": "7146:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307831356464633936333133383431353264636163363664633161616430623432313536643666643334663239386466613162313562333665363235363834386333",
                              "id": 806,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7261:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_9890432943670311269147055332652358421787618437198394515061162981158017321155_by_1",
                                "typeString": "int_const 9890...(68 digits omitted)...1155"
                              },
                              "value": "0x15ddc9631384152dcac66dc1aad0b42156d6fd34f298dfa1b15b36e6256848c3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_9890432943670311269147055332652358421787618437198394515061162981158017321155_by_1",
                                "typeString": "int_const 9890...(68 digits omitted)...1155"
                              }
                            ],
                            "id": 805,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "7248:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7248:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 808,
                        "nodeType": "ExpressionStatement",
                        "src": "7248:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 810,
                              "name": "_claimer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 748,
                              "src": "7357:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 811,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 752,
                              "src": "7367:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 809,
                            "name": "_disburse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1086,
                            "src": "7347:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7347:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 813,
                        "nodeType": "ExpressionStatement",
                        "src": "7347:29:5"
                      }
                    ]
                  },
                  "documentation": "*************************************\nCLAIMING***************************************",
                  "id": 815,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "claimTranche",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 756,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 748,
                        "name": "_claimer",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "6177:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 747,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6177:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 750,
                        "name": "_tranche",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "6203:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6203:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 752,
                        "name": "_balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "6229:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6229:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 755,
                        "name": "_merkleProof",
                        "nodeType": "VariableDeclaration",
                        "scope": 815,
                        "src": "6255:29:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 753,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "6255:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 754,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "6255:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "6167:123:5"
                  },
                  "returnParameters": {
                    "id": 757,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6310:0:5"
                  },
                  "scope": 1087,
                  "src": "6146:1237:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 848,
                    "nodeType": "Block",
                    "src": "7595:371:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307834313230616662643535316637326334313632383831653232373964333737313065393530353161656436313536336130376336363064363865326166353462",
                              "id": 830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7609:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_29458087173990313856885362347950817821325627844481503799001720468878964487499_by_1",
                                "typeString": "int_const 2945...(69 digits omitted)...7499"
                              },
                              "value": "0x4120afbd551f72c4162881e2279d37710e95051aed61563a07c660d68e2af54b"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_29458087173990313856885362347950817821325627844481503799001720468878964487499_by_1",
                                "typeString": "int_const 2945...(69 digits omitted)...7499"
                              }
                            ],
                            "id": 829,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "7596:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7596:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 832,
                        "nodeType": "ExpressionStatement",
                        "src": "7596:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307861313135636337333936306532383163346532326664386335636130656565323664343936376164343330623066653233643365626663326262303938353864",
                              "id": 834,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7708:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_72860883482717514067793379143013761231425629174003225591747050507516674409869_by_1",
                                "typeString": "int_const 7286...(69 digits omitted)...9869"
                              },
                              "value": "0xa115cc73960e281c4e22fd8c5ca0eee26d4967ad430b0fe23d3ebfc2bb09858d"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_72860883482717514067793379143013761231425629174003225591747050507516674409869_by_1",
                                "typeString": "int_const 7286...(69 digits omitted)...9869"
                              }
                            ],
                            "id": 833,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "7695:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7695:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 836,
                        "nodeType": "ExpressionStatement",
                        "src": "7695:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307831653764333333626230346466393864383130623733343465393064316363313537613334343963383435386632663036663962346637616665393138663838",
                              "id": 838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7810:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_13790594938862869685241574818799340483736912239231029381433404648240152940424_by_1",
                                "typeString": "int_const 1379...(69 digits omitted)...0424"
                              },
                              "value": "0x1e7d333bb04df98d810b7344e90d1cc157a3449c8458f2f06f9b4f7afe918f88"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_13790594938862869685241574818799340483736912239231029381433404648240152940424_by_1",
                                "typeString": "int_const 1379...(69 digits omitted)...0424"
                              }
                            ],
                            "id": 837,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "7797:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7797:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 840,
                        "nodeType": "ExpressionStatement",
                        "src": "7797:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 842,
                              "name": "_claimer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 817,
                              "src": "7916:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 843,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 819,
                              "src": "7926:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 844,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 821,
                              "src": "7936:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 845,
                              "name": "_merkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 824,
                              "src": "7946:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            ],
                            "id": 841,
                            "name": "_verifyClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "7903:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,uint256,bytes32[] memory) view returns (bool)"
                            }
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7903:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 828,
                        "id": 847,
                        "nodeType": "Return",
                        "src": "7896:63:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 849,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verifyClaim",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 825,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 817,
                        "name": "_claimer",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "7420:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7420:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 819,
                        "name": "_tranche",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "7446:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 818,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7446:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 821,
                        "name": "_balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "7472:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 820,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7472:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 824,
                        "name": "_merkleProof",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "7498:29:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 822,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "7498:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 823,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "7498:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7410:123:5"
                  },
                  "returnParameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 827,
                        "name": "valid",
                        "nodeType": "VariableDeclaration",
                        "scope": 849,
                        "src": "7579:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 826,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "7579:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "7578:12:5"
                  },
                  "scope": 1087,
                  "src": "7390:576:5",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 970,
                    "nodeType": "Block",
                    "src": "8266:2016:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307839666233336464393636633835386232663866383965656630393635616634303338623764356336396363633437633465386433663266383832643632353065",
                              "id": 862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8280:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_72234435416994539054469473172201456311107850147518331616915168922739534079246_by_1",
                                "typeString": "int_const 7223...(69 digits omitted)...9246"
                              },
                              "value": "0x9fb33dd966c858b2f8f89eef0965af4038b7d5c69ccc47c4e8d3f2f882d6250e"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_72234435416994539054469473172201456311107850147518331616915168922739534079246_by_1",
                                "typeString": "int_const 7223...(69 digits omitted)...9246"
                              }
                            ],
                            "id": 861,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "8267:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8267:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 864,
                        "nodeType": "ExpressionStatement",
                        "src": "8267:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307837353361383662316264313161346532393032613438646134333961346432313965383366646230363031333530663632396136336339386330366433316463",
                              "id": 866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8379:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_53024010039831625231730611778364168068521239359017027206951045912838076707292_by_1",
                                "typeString": "int_const 5302...(69 digits omitted)...7292"
                              },
                              "value": "0x753a86b1bd11a4e2902a48da439a4d219e83fdb0601350f629a63c98c06d31dc"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_53024010039831625231730611778364168068521239359017027206951045912838076707292_by_1",
                                "typeString": "int_const 5302...(69 digits omitted)...7292"
                              }
                            ],
                            "id": 865,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "8366:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8366:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "8366:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307861343935633062613536326538316434383865623834326564643464643162616130623861613466316532326563313365376237653163303935626238656266",
                              "id": 870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8481:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_74443897539232319851614920397955816863784009600302038089224180914485628473023_by_1",
                                "typeString": "int_const 7444...(69 digits omitted)...3023"
                              },
                              "value": "0xa495c0ba562e81d488eb842edd4dd1baa0b8aa4f1e22ec13e7b7e1c095bb8ebf"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_74443897539232319851614920397955816863784009600302038089224180914485628473023_by_1",
                                "typeString": "int_const 7444...(69 digits omitted)...3023"
                              }
                            ],
                            "id": 869,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "8468:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8468:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 872,
                        "nodeType": "ExpressionStatement",
                        "src": "8468:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830313431623364303331373731623939323766383736623732666230336332656639613431343264643933633939666637616539363737343833323363656130",
                              "id": 874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8581:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_568398933268144049090710459780901509249384919495602532038021395440046689952_by_1",
                                "typeString": "int_const 5683...(67 digits omitted)...9952"
                              },
                              "value": "0x0141b3d031771b9927f876b72fb03c2ef9a4142dd93c99ff7ae967748323cea0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_568398933268144049090710459780901509249384919495602532038021395440046689952_by_1",
                                "typeString": "int_const 5683...(67 digits omitted)...9952"
                              }
                            ],
                            "id": 873,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "8568:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8568:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 876,
                        "nodeType": "ExpressionStatement",
                        "src": "8568:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 878,
                                "name": "_tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 853,
                                "src": "8675:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 879,
                                "name": "tranches",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 556,
                                "src": "8686:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8675:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5765656b2063616e6e6f7420626520696e2074686520667574757265",
                              "id": 881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8696:30:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1611a95efef9e911dfc34d5ba5a69cf487b3902a720be0e627ef44fe4a2c33a0",
                                "typeString": "literal_string \"Week cannot be in the future\""
                              },
                              "value": "Week cannot be in the future"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1611a95efef9e911dfc34d5ba5a69cf487b3902a720be0e627ef44fe4a2c33a0",
                                "typeString": "literal_string \"Week cannot be in the future\""
                              }
                            ],
                            "id": 877,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "8667:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8667:60:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 883,
                        "nodeType": "ExpressionStatement",
                        "src": "8667:60:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307833373435663163343531323463643664613835626266646236303661366432313836626465623737336638333730323239353739333064616438366539646433",
                              "id": 885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8741:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25000787733113918443472568960414302225858718311050488441746711717005902126547_by_1",
                                "typeString": "int_const 2500...(69 digits omitted)...6547"
                              },
                              "value": "0x3745f1c45124cd6da85bbfdb606a6d2186bdeb773f837022957930dad86e9dd3"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_25000787733113918443472568960414302225858718311050488441746711717005902126547_by_1",
                                "typeString": "int_const 2500...(69 digits omitted)...6547"
                              }
                            ],
                            "id": 884,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "8728:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8728:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 887,
                        "nodeType": "ExpressionStatement",
                        "src": "8728:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307834376339656665356534623236313865373637383066356436386132656533316662323734306662333630616666373962393962396466336431343437386561",
                              "id": 889,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8844:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_32471004224721622767469390885911355641524940644360986455085390114942691342570_by_1",
                                "typeString": "int_const 3247...(69 digits omitted)...2570"
                              },
                              "value": "0x47c9efe5e4b2618e76780f5d68a2ee31fb2740fb360aff79b99b9df3d14478ea"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_32471004224721622767469390885911355641524940644360986455085390114942691342570_by_1",
                                "typeString": "int_const 3247...(69 digits omitted)...2570"
                              }
                            ],
                            "id": 888,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "8831:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8831:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 891,
                        "nodeType": "ExpressionStatement",
                        "src": "8831:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307837623438633733383439376663393934363336356565666537386237636234666130353063623338353238346535633438333638653565663333396564346266",
                              "id": 893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8946:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_55763068329426200111773209189392156329331269186343596164701250816748738761919_by_1",
                                "typeString": "int_const 5576...(69 digits omitted)...1919"
                              },
                              "value": "0x7b48c738497fc9946365eefe78b7cb4fa050cb385284e5c48368e5ef339ed4bf"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_55763068329426200111773209189392156329331269186343596164701250816748738761919_by_1",
                                "typeString": "int_const 5576...(69 digits omitted)...1919"
                              }
                            ],
                            "id": 892,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "8933:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8933:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 895,
                        "nodeType": "ExpressionStatement",
                        "src": "8933:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307863326138643235386361633430353036343838393461646539396631653539343833633265393636653637623631626262326534323733303734316635323166",
                              "id": 897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9046:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_88046974692598301353935251670931437977702769635571894329743222335897230856735_by_1",
                                "typeString": "int_const 8804...(69 digits omitted)...6735"
                              },
                              "value": "0xc2a8d258cac4050648894ade99f1e59483c2e966e67b61bbb2e42730741f521f"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_88046974692598301353935251670931437977702769635571894329743222335897230856735_by_1",
                                "typeString": "int_const 8804...(69 digits omitted)...6735"
                              }
                            ],
                            "id": 896,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "9033:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9033:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 899,
                        "nodeType": "ExpressionStatement",
                        "src": "9033:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 906,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "9140:28:5",
                              "subExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 901,
                                    "name": "claimed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 554,
                                    "src": "9141:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => bool))"
                                    }
                                  },
                                  "id": 903,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 902,
                                    "name": "_tranche",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 853,
                                    "src": "9149:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9141:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 905,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 904,
                                  "name": "_claimer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 851,
                                  "src": "9159:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9141:27:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "4c502068617320616c726561647920636c61696d6564",
                              "id": 907,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9170:24:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b128e493bc90cf19e2970399742a9f85a5c0dc392355fcfcec6a7df462bff3a2",
                                "typeString": "literal_string \"LP has already claimed\""
                              },
                              "value": "LP has already claimed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b128e493bc90cf19e2970399742a9f85a5c0dc392355fcfcec6a7df462bff3a2",
                                "typeString": "literal_string \"LP has already claimed\""
                              }
                            ],
                            "id": 900,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "9132:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9132:63:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 909,
                        "nodeType": "ExpressionStatement",
                        "src": "9132:63:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307834613830653065353733653938383636386534353739633433613565643866663136323562323138656432306430346231633733626230636431313135643437",
                              "id": 911,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9209:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_33698859396669797167272465566693117820268940343083652561579080566522749476167_by_1",
                                "typeString": "int_const 3369...(69 digits omitted)...6167"
                              },
                              "value": "0x4a80e0e573e988668e4579c43a5ed8ff1625b218ed20d04b1c73bb0cd1115d47"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_33698859396669797167272465566693117820268940343083652561579080566522749476167_by_1",
                                "typeString": "int_const 3369...(69 digits omitted)...6167"
                              }
                            ],
                            "id": 910,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "9196:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9196:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 913,
                        "nodeType": "ExpressionStatement",
                        "src": "9196:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307832333138613865386166346362383535393564383133643263613633333136353664653965336333343431656533613966363837353137386564656666353536",
                              "id": 915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9311:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_15874519796524104253055633373462611148615694531856048056404448507317338502486_by_1",
                                "typeString": "int_const 1587...(69 digits omitted)...2486"
                              },
                              "value": "0x2318a8e8af4cb85595d813d2ca6331656de9e3c3441ee3a9f6875178edeff556"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_15874519796524104253055633373462611148615694531856048056404448507317338502486_by_1",
                                "typeString": "int_const 1587...(69 digits omitted)...2486"
                              }
                            ],
                            "id": 914,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "9298:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9298:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 917,
                        "nodeType": "ExpressionStatement",
                        "src": "9298:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307835326335363133633235336662643435623438346536353535353030366339653866326536643664393863643230633234303933383531653134633835626266",
                              "id": 919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9413:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_37438393546504399910617385612246426838387200727146227708091510202360794733503_by_1",
                                "typeString": "int_const 3743...(69 digits omitted)...3503"
                              },
                              "value": "0x52c5613c253fbd45b484e65555006c9e8f2e6d6d98cd20c24093851e14c85bbf"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_37438393546504399910617385612246426838387200727146227708091510202360794733503_by_1",
                                "typeString": "int_const 3743...(69 digits omitted)...3503"
                              }
                            ],
                            "id": 918,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "9400:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9400:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 921,
                        "nodeType": "ExpressionStatement",
                        "src": "9400:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307865303533383234366466633137653232333432633835643536653337386264616564616562383334303535303037333065336462663838623262333831646435",
                              "id": 923,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9513:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_101465625526813865694690514907082920434726544512646620169044819737282329714133_by_1",
                                "typeString": "int_const 1014...(70 digits omitted)...4133"
                              },
                              "value": "0xe0538246dfc17e22342c85d56e378bdaedaeb83405500730e3dbf88b2b381dd5"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_101465625526813865694690514907082920434726544512646620169044819737282329714133_by_1",
                                "typeString": "int_const 1014...(70 digits omitted)...4133"
                              }
                            ],
                            "id": 922,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "9500:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9500:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 925,
                        "nodeType": "ExpressionStatement",
                        "src": "9500:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 928,
                                  "name": "_claimer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 851,
                                  "src": "9620:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 929,
                                  "name": "_tranche",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 853,
                                  "src": "9630:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 930,
                                  "name": "_balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 855,
                                  "src": "9640:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 931,
                                  "name": "_merkleProof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 858,
                                  "src": "9650:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                ],
                                "id": 927,
                                "name": "_verifyClaim",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1025,
                                "src": "9607:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_uint256_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256,uint256,bytes32[] memory) view returns (bool)"
                                }
                              },
                              "id": 932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9607:56:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "496e636f7272656374206d65726b6c652070726f6f66",
                              "id": 933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9665:24:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2f2cb5e1a21821f0eb21adf223f2ad01d1bf6d24565e381bd4fbeccefb35f922",
                                "typeString": "literal_string \"Incorrect merkle proof\""
                              },
                              "value": "Incorrect merkle proof"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2f2cb5e1a21821f0eb21adf223f2ad01d1bf6d24565e381bd4fbeccefb35f922",
                                "typeString": "literal_string \"Incorrect merkle proof\""
                              }
                            ],
                            "id": 926,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "9599:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9599:91:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 935,
                        "nodeType": "ExpressionStatement",
                        "src": "9599:91:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307835636137343664363733373038306466623436333165356338316664303330336235326664633634646263353432356663663064646332633064383262356262",
                              "id": 937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9704:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_41908334433308554784863773126584559413887952068001658565274030477160197830075_by_1",
                                "typeString": "int_const 4190...(69 digits omitted)...0075"
                              },
                              "value": "0x5ca746d6737080dfb4631e5c81fd0303b52fdc64dbc5425fcf0ddc2c0d82b5bb"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_41908334433308554784863773126584559413887952068001658565274030477160197830075_by_1",
                                "typeString": "int_const 4190...(69 digits omitted)...0075"
                              }
                            ],
                            "id": 936,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "9691:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9691:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 939,
                        "nodeType": "ExpressionStatement",
                        "src": "9691:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307863626335396433336538353735656538626436363362353337396365613233613362393531383230373933366536323038363133656462636230643139333230",
                              "id": 941,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9807:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_92168662107766538600244795782244412528166658927519746035970186125000825738016_by_1",
                                "typeString": "int_const 9216...(69 digits omitted)...8016"
                              },
                              "value": "0xcbc59d33e8575ee8bd663b5379cea23a3b9518207936e6208613edbcb0d19320"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_92168662107766538600244795782244412528166658927519746035970186125000825738016_by_1",
                                "typeString": "int_const 9216...(69 digits omitted)...8016"
                              }
                            ],
                            "id": 940,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "9794:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9794:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 943,
                        "nodeType": "ExpressionStatement",
                        "src": "9794:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307862353636633233343638646130653731353630333432356438366533313931336234663439633765376630646438646561326238623161383038323735643362",
                              "id": 945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9909:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_82050184345929297098855295912628182161355076318596634894675763334873283517755_by_1",
                                "typeString": "int_const 8205...(69 digits omitted)...7755"
                              },
                              "value": "0xb566c23468da0e715603425d86e31913b4f49c7e7f0dd8dea2b8b1a808275d3b"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_82050184345929297098855295912628182161355076318596634894675763334873283517755_by_1",
                                "typeString": "int_const 8205...(69 digits omitted)...7755"
                              }
                            ],
                            "id": 944,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "9896:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9896:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 947,
                        "nodeType": "ExpressionStatement",
                        "src": "9896:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 954,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 948,
                                "name": "claimed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 554,
                                "src": "9995:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => bool))"
                                }
                              },
                              "id": 951,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 949,
                                "name": "_tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 853,
                                "src": "10003:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9995:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 952,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 950,
                              "name": "_claimer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "10013:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9995:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "74727565",
                            "id": 953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10025:4:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "9995:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 955,
                        "nodeType": "ExpressionStatement",
                        "src": "9995:34:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307862626361333933353665613363663063613463393466393361303261306663613166316565323437613563656361376362363730383032663131333565353236",
                              "id": 957,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10045:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_84939800632226727791300299115395469214988845753479204551403590125902653416742_by_1",
                                "typeString": "int_const 8493...(69 digits omitted)...6742"
                              },
                              "value": "0xbbca39356ea3cf0ca4c94f93a02a0fca1f1ee247a5ceca7cb670802f1135e526"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_84939800632226727791300299115395469214988845753479204551403590125902653416742_by_1",
                                "typeString": "int_const 8493...(69 digits omitted)...6742"
                              }
                            ],
                            "id": 956,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "10032:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10032:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 959,
                        "nodeType": "ExpressionStatement",
                        "src": "10032:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307833323262353536363565346135643437393339663034633036353865613836313561663137663261346636356462613462616532653936613963623437333338",
                              "id": 961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10147:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_22692206261232774337812298436578961890326557667998036989162993560470236197688_by_1",
                                "typeString": "int_const 2269...(69 digits omitted)...7688"
                              },
                              "value": "0x322b55665e4a5d47939f04c0658ea8615af17f2a4f65dba4bae2e96a9cb47338"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_22692206261232774337812298436578961890326557667998036989162993560470236197688_by_1",
                                "typeString": "int_const 2269...(69 digits omitted)...7688"
                              }
                            ],
                            "id": 960,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "10134:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10134:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 963,
                        "nodeType": "ExpressionStatement",
                        "src": "10134:80:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 965,
                              "name": "_claimer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 851,
                              "src": "10246:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 966,
                              "name": "_tranche",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 853,
                              "src": "10256:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 967,
                              "name": "_balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 855,
                              "src": "10266:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 964,
                            "name": "Claimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 526,
                            "src": "10238:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10238:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 969,
                        "nodeType": "EmitStatement",
                        "src": "10233:42:5"
                      }
                    ]
                  },
                  "documentation": "*************************************\nCLAIMING - INTERNAL***************************************",
                  "id": 971,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_claimTranche",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 859,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 851,
                        "name": "_claimer",
                        "nodeType": "VariableDeclaration",
                        "scope": 971,
                        "src": "8132:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8132:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 853,
                        "name": "_tranche",
                        "nodeType": "VariableDeclaration",
                        "scope": 971,
                        "src": "8158:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 852,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8158:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 855,
                        "name": "_balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 971,
                        "src": "8184:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 854,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8184:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 858,
                        "name": "_merkleProof",
                        "nodeType": "VariableDeclaration",
                        "scope": 971,
                        "src": "8210:29:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 856,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "8210:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 857,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "8210:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "8122:123:5"
                  },
                  "returnParameters": {
                    "id": 860,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8266:0:5"
                  },
                  "scope": 1087,
                  "src": "8100:2182:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1024,
                    "nodeType": "Block",
                    "src": "10496:641:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830363734393132323663306464303931666166666532643261383535656264333537616333333631336261613934623334353837613938643437353737616366",
                              "id": 986,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10510:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2919833032251772776805457289225223988955356277940777541423657863763264502479_by_1",
                                "typeString": "int_const 2919...(68 digits omitted)...2479"
                              },
                              "value": "0x067491226c0dd091faffe2d2a855ebd357ac33613baa94b34587a98d47577acf"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_2919833032251772776805457289225223988955356277940777541423657863763264502479_by_1",
                                "typeString": "int_const 2919...(68 digits omitted)...2479"
                              }
                            ],
                            "id": 985,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "10497:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10497:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 988,
                        "nodeType": "ExpressionStatement",
                        "src": "10497:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307832353339653064666130616136316161333833313231396535356435346339656133303466356464633432393735323338343039333732633631306666653530",
                              "id": 990,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10609:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_16837837700443069689611012597270563058682862452227305707469378749394699943504_by_1",
                                "typeString": "int_const 1683...(69 digits omitted)...3504"
                              },
                              "value": "0x2539e0dfa0aa61aa3831219e55d54c9ea304f5ddc42975238409372c610ffe50"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_16837837700443069689611012597270563058682862452227305707469378749394699943504_by_1",
                                "typeString": "int_const 1683...(69 digits omitted)...3504"
                              }
                            ],
                            "id": 989,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "10596:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10596:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 992,
                        "nodeType": "ExpressionStatement",
                        "src": "10596:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307832316230663530313064373637613265353836633239373562313434623939376465326631636263373966333531393965393534356364626561626135343334",
                              "id": 994,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10711:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_15238980042881495327093330964546556685141768918518419654969347963386001511476_by_1",
                                "typeString": "int_const 1523...(69 digits omitted)...1476"
                              },
                              "value": "0x21b0f5010d767a2e586c2975b144b997de2f1cbc79f35199e9545cdbeaba5434"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_15238980042881495327093330964546556685141768918518419654969347963386001511476_by_1",
                                "typeString": "int_const 1523...(69 digits omitted)...1476"
                              }
                            ],
                            "id": 993,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "10698:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10698:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 996,
                        "nodeType": "ExpressionStatement",
                        "src": "10698:80:5"
                      },
                      {
                        "assignments": [
                          998
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 998,
                            "name": "leaf",
                            "nodeType": "VariableDeclaration",
                            "scope": 1024,
                            "src": "10797:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 997,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10797:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1006,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1002,
                                  "name": "_claimer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 973,
                                  "src": "10839:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1003,
                                  "name": "_balance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 977,
                                  "src": "10849:8:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1000,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "10822:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1001,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10822:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1004,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10822:36:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 999,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1716,
                            "src": "10812:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10812:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10797:62:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307864323862653931396362376636366163346265303436313230356261376635393439323033373066346564636566383663623633393531633138666231323239",
                              "id": 1008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10874:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_95232898746818410827953165055427092860114506562227572435135609080013515330089_by_1",
                                "typeString": "int_const 9523...(69 digits omitted)...0089"
                              },
                              "value": "0xd28be919cb7f66ac4be0461205ba7f594920370f4edcef86cb63951c18fb1229"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_95232898746818410827953165055427092860114506562227572435135609080013515330089_by_1",
                                "typeString": "int_const 9523...(69 digits omitted)...0089"
                              }
                            ],
                            "id": 1007,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "10861:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 1009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10861:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1010,
                        "nodeType": "ExpressionStatement",
                        "src": "10861:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307832323131363862383139636533643861646633323339313664643339326130623739633237346361616236643964383162303834343936393963323061353035",
                              "id": 1012,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10976:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_15409395996900192383997018495729717341380168370090415630447579894271159870725_by_1",
                                "typeString": "int_const 1540...(69 digits omitted)...0725"
                              },
                              "value": "0x221168b819ce3d8adf323916dd392a0b79c274caab6d9d81b08449699c20a505"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_15409395996900192383997018495729717341380168370090415630447579894271159870725_by_1",
                                "typeString": "int_const 1540...(69 digits omitted)...0725"
                              }
                            ],
                            "id": 1011,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "10963:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 1013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10963:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1014,
                        "nodeType": "ExpressionStatement",
                        "src": "10963:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1017,
                              "name": "_merkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 980,
                              "src": "11088:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1018,
                                "name": "merkleRoots",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 548,
                                "src": "11102:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_bytes32_$",
                                  "typeString": "mapping(uint256 => bytes32)"
                                }
                              },
                              "id": 1020,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1019,
                                "name": "_tranche",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 975,
                                "src": "11114:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11102:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1021,
                              "name": "leaf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 998,
                              "src": "11125:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1015,
                              "name": "MerkleProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1156,
                              "src": "11069:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_MerkleProof_$1156_$",
                                "typeString": "type(library MerkleProof)"
                              }
                            },
                            "id": 1016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "verify",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1155,
                            "src": "11069:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                              "typeString": "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"
                            }
                          },
                          "id": 1022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11069:61:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 984,
                        "id": 1023,
                        "nodeType": "Return",
                        "src": "11062:68:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1025,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_verifyClaim",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 981,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 973,
                        "name": "_claimer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1025,
                        "src": "10320:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 972,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10320:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 975,
                        "name": "_tranche",
                        "nodeType": "VariableDeclaration",
                        "scope": 1025,
                        "src": "10346:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 974,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10346:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 977,
                        "name": "_balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1025,
                        "src": "10372:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 976,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10372:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 980,
                        "name": "_merkleProof",
                        "nodeType": "VariableDeclaration",
                        "scope": 1025,
                        "src": "10398:29:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 978,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "10398:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 979,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "10398:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10310:123:5"
                  },
                  "returnParameters": {
                    "id": 984,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 983,
                        "name": "valid",
                        "nodeType": "VariableDeclaration",
                        "scope": 1025,
                        "src": "10480:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 982,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10480:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "10479:12:5"
                  },
                  "scope": 1087,
                  "src": "10289:848:5",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1085,
                    "nodeType": "Block",
                    "src": "11207:1068:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307838633061366137356338366238366138643039613839623132643437333933386539623362373034636437613163383763636461396130613033373561313230",
                              "id": 1033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11221:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_63342202032838290041933288258978556748348702865688288020578523653690493346080_by_1",
                                "typeString": "int_const 6334...(69 digits omitted)...6080"
                              },
                              "value": "0x8c0a6a75c86b86a8d09a89b12d473938e9b3b704cd7a1c87ccda9a0a0375a120"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_63342202032838290041933288258978556748348702865688288020578523653690493346080_by_1",
                                "typeString": "int_const 6334...(69 digits omitted)...6080"
                              }
                            ],
                            "id": 1032,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "11208:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 1034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11208:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1035,
                        "nodeType": "ExpressionStatement",
                        "src": "11208:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307832643264646266343734326261376265613963353239653030663130333761396432663062366261323139353063343531313235333536656464626166313766",
                              "id": 1037,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11320:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_20435104377073133252865703764366213742694654206706131939176372471828206776703_by_1",
                                "typeString": "int_const 2043...(69 digits omitted)...6703"
                              },
                              "value": "0x2d2ddbf4742ba7bea9c529e00f1037a9d2f0b6ba21950c451125356eddbaf17f"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_20435104377073133252865703764366213742694654206706131939176372471828206776703_by_1",
                                "typeString": "int_const 2043...(69 digits omitted)...6703"
                              }
                            ],
                            "id": 1036,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "11307:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 1038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11307:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1039,
                        "nodeType": "ExpressionStatement",
                        "src": "11307:80:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830653935643238333166346432356335383366323561623738383835326566316663313064386337316534393336363461343631333362373635386333376266",
                              "id": 1041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11422:66:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6597092994599965818449333018089033122818513537840404669012929809494974412735_by_1",
                                "typeString": "int_const 6597...(68 digits omitted)...2735"
                              },
                              "value": "0x0e95d2831f4d25c583f25ab788852ef1fc10d8c71e493664a46133b7658c37bf"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_6597092994599965818449333018089033122818513537840404669012929809494974412735_by_1",
                                "typeString": "int_const 6597...(68 digits omitted)...2735"
                              }
                            ],
                            "id": 1040,
                            "name": "c_0x89b12937",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 512,
                            "src": "11409:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) pure"
                            }
                          },
                          "id": 1042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11409:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1043,
                        "nodeType": "ExpressionStatement",
                        "src": "11409:80:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1044,
                            "name": "_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "11512:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11523:1:5",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11512:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1083,
                          "nodeType": "Block",
                          "src": "11884:385:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307864313433636439633130343933313137643139323862653730393161393838623866323835643033353963663363633331373766336339383038616638336561",
                                    "id": 1068,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11898:66:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_94653183172710705075527299561357232540900781422494251502716234681622698361834_by_1",
                                      "typeString": "int_const 9465...(69 digits omitted)...1834"
                                    },
                                    "value": "0xd143cd9c10493117d1928be7091a988b8f285d0359cf3cc3177f3c9808af83ea"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_94653183172710705075527299561357232540900781422494251502716234681622698361834_by_1",
                                      "typeString": "int_const 9465...(69 digits omitted)...1834"
                                    }
                                  ],
                                  "id": 1067,
                                  "name": "c_0x89b12937",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "11885:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 1069,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11885:80:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1070,
                              "nodeType": "ExpressionStatement",
                              "src": "11885:80:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307835343633383665613234396539336536636161376439343763346566626436386563383038303566386661313738653764396136373365643039616133366661",
                                    "id": 1072,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11995:66:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_38170128286901904319462457992729817142503638836265509361914210063484032005882_by_1",
                                      "typeString": "int_const 3817...(69 digits omitted)...5882"
                                    },
                                    "value": "0x546386ea249e93e6caa7d947c4efbd68ec80805f8fa178e7d9a673ed09aa36fa"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_38170128286901904319462457992729817142503638836265509361914210063484032005882_by_1",
                                      "typeString": "int_const 3817...(69 digits omitted)...5882"
                                    }
                                  ],
                                  "id": 1071,
                                  "name": "c_0x89b12937",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "11982:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 1073,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11982:80:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1074,
                              "nodeType": "ExpressionStatement",
                              "src": "11982:80:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307833353666356461336434613463653639356435663636383133303931373664356535323263656234343434626434353031623130313238383365303836376435",
                                    "id": 1076,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12101:66:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_24169347278379080723563027979590325331587913645702981223337470164368609535957_by_1",
                                      "typeString": "int_const 2416...(69 digits omitted)...5957"
                                    },
                                    "value": "0x356f5da3d4a4ce695d5f6681309176d5e522ceb4444bd4501b1012883e0867d5"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_24169347278379080723563027979590325331587913645702981223337470164368609535957_by_1",
                                      "typeString": "int_const 2416...(69 digits omitted)...5957"
                                    }
                                  ],
                                  "id": 1075,
                                  "name": "c_0x89b12937",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "12088:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 1077,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12088:80:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1078,
                              "nodeType": "ExpressionStatement",
                              "src": "12088:80:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4e6f2062616c616e636520776f756c64206265207472616e73666572726564202d206e6f7420676f696e6720746f20776173746520796f757220676173",
                                    "id": 1080,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12194:63:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ab779a2cb1bd2fc56f23655cbe3b670ecda2e508d139f61ad736cfcf75d1675b",
                                      "typeString": "literal_string \"No balance would be transferred - not going to waste your gas\""
                                    },
                                    "value": "No balance would be transferred - not going to waste your gas"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_ab779a2cb1bd2fc56f23655cbe3b670ecda2e508d139f61ad736cfcf75d1675b",
                                      "typeString": "literal_string \"No balance would be transferred - not going to waste your gas\""
                                    }
                                  ],
                                  "id": 1079,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    1727,
                                    1728
                                  ],
                                  "referencedDeclaration": 1728,
                                  "src": "12187:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12187:71:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1082,
                              "nodeType": "ExpressionStatement",
                              "src": "12187:71:5"
                            }
                          ]
                        },
                        "id": 1084,
                        "nodeType": "IfStatement",
                        "src": "11508:761:5",
                        "trueBody": {
                          "id": 1066,
                          "nodeType": "Block",
                          "src": "11526:352:5",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307833356263666161313961323531396164303336613430316435343332346233306564363337356435373037633065653063633264353737343035396235636535",
                                    "id": 1048,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11540:66:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_24306478016462920983534177211623405294191392722712402229765974178452358257893_by_1",
                                      "typeString": "int_const 2430...(69 digits omitted)...7893"
                                    },
                                    "value": "0x35bcfaa19a2519ad036a401d54324b30ed6375d5707c0ee0cc2d5774059b5ce5"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_24306478016462920983534177211623405294191392722712402229765974178452358257893_by_1",
                                      "typeString": "int_const 2430...(69 digits omitted)...7893"
                                    }
                                  ],
                                  "id": 1047,
                                  "name": "c_0x89b12937",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "11527:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 1049,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11527:80:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1050,
                              "nodeType": "ExpressionStatement",
                              "src": "11527:80:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307834326231363630653030373439623538333464613266653466613535393832366238623130373636353863373633666638656537366137373164336431393230",
                                    "id": 1052,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11637:66:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_30166084292575950897830975994547069076572135376957659091004646551155250108704_by_1",
                                      "typeString": "int_const 3016...(69 digits omitted)...8704"
                                    },
                                    "value": "0x42b1660e00749b5834da2fe4fa559826b8b1076658c763ff8ee76a771d3d1920"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_30166084292575950897830975994547069076572135376957659091004646551155250108704_by_1",
                                      "typeString": "int_const 3016...(69 digits omitted)...8704"
                                    }
                                  ],
                                  "id": 1051,
                                  "name": "c_0x89b12937",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "11624:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 1053,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11624:80:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1054,
                              "nodeType": "ExpressionStatement",
                              "src": "11624:80:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307833303931646335616539616166303064623236323737373166363232663561633866353937643065306566623864356532343435616666373737643462393537",
                                    "id": 1056,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11743:66:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_21968730391589229990866853993471842387039856001639238371334388506474063378775_by_1",
                                      "typeString": "int_const 2196...(69 digits omitted)...8775"
                                    },
                                    "value": "0x3091dc5ae9aaf00db2627771f622f5ac8f597d0e0efb8d5e2445aff777d4b957"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_21968730391589229990866853993471842387039856001639238371334388506474063378775_by_1",
                                      "typeString": "int_const 2196...(69 digits omitted)...8775"
                                    }
                                  ],
                                  "id": 1055,
                                  "name": "c_0x89b12937",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 512,
                                  "src": "11730:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$__$",
                                    "typeString": "function (bytes32) pure"
                                  }
                                },
                                "id": 1057,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11730:80:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1058,
                              "nodeType": "ExpressionStatement",
                              "src": "11730:80:5"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1062,
                                    "name": "_claimer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1027,
                                    "src": "11848:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "id": 1063,
                                    "name": "_balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1029,
                                    "src": "11858:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1059,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 544,
                                    "src": "11829:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$1412",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1061,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1445,
                                  "src": "11829:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1412_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$1412_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 1064,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11829:38:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1065,
                              "nodeType": "ExpressionStatement",
                              "src": "11829:38:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1086,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_disburse",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1030,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1027,
                        "name": "_claimer",
                        "nodeType": "VariableDeclaration",
                        "scope": 1086,
                        "src": "11163:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1026,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11163:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1029,
                        "name": "_balance",
                        "nodeType": "VariableDeclaration",
                        "scope": 1086,
                        "src": "11181:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1028,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11181:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "11162:36:5"
                  },
                  "returnParameters": {
                    "id": 1031,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11207:0:5"
                  },
                  "scope": 1087,
                  "src": "11144:1131:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "private"
                }
              ],
              "scope": 1088,
              "src": "2086:10191:5"
            }
          ],
          "src": "1491:10787:5"
        },
        "id": 5
      },
      "openzeppelin-contracts-sol5/cryptography/MerkleProof.sol": {
        "ast": {
          "absolutePath": "openzeppelin-contracts-sol5/cryptography/MerkleProof.sol",
          "exportedSymbols": {
            "MerkleProof": [
              1156
            ]
          },
          "id": 1157,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1089,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:6"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@dev These functions deal with verification of Merkle trees (hash trees),",
              "fullyImplemented": true,
              "id": 1156,
              "linearizedBaseContracts": [
                1156
              ],
              "name": "MerkleProof",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1154,
                    "nodeType": "Block",
                    "src": "561:682:6",
                    "statements": [
                      {
                        "assignments": [
                          1102
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1102,
                            "name": "computedHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 1154,
                            "src": "571:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1101,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "571:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1104,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1103,
                          "name": "leaf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1096,
                          "src": "594:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "571:27:6"
                      },
                      {
                        "body": {
                          "id": 1148,
                          "nodeType": "Block",
                          "src": "652:472:6",
                          "statements": [
                            {
                              "assignments": [
                                1117
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1117,
                                  "name": "proofElement",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1148,
                                  "src": "666:20:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 1116,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "666:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1121,
                              "initialValue": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1118,
                                  "name": "proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1092,
                                  "src": "689:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                    "typeString": "bytes32[] memory"
                                  }
                                },
                                "id": 1120,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1119,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1106,
                                  "src": "695:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "689:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "666:31:6"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1122,
                                  "name": "computedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1102,
                                  "src": "716:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1123,
                                  "name": "proofElement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1117,
                                  "src": "732:12:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "716:28:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1146,
                                "nodeType": "Block",
                                "src": "933:181:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1144,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 1136,
                                        "name": "computedHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1102,
                                        "src": "1029:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 1140,
                                                "name": "proofElement",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1117,
                                                "src": "1071:12:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "argumentTypes": null,
                                                "id": 1141,
                                                "name": "computedHash",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1102,
                                                "src": "1085:12:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1138,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1709,
                                                "src": "1054:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 1139,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "1054:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 1142,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1054:44:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 1137,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1716,
                                          "src": "1044:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 1143,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1044:55:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "src": "1029:70:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 1145,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1029:70:6"
                                  }
                                ]
                              },
                              "id": 1147,
                              "nodeType": "IfStatement",
                              "src": "712:402:6",
                              "trueBody": {
                                "id": 1135,
                                "nodeType": "Block",
                                "src": "746:181:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1133,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "id": 1125,
                                        "name": "computedHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1102,
                                        "src": "842:12:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "arguments": [
                                              {
                                                "argumentTypes": null,
                                                "id": 1129,
                                                "name": "computedHash",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1102,
                                                "src": "884:12:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "argumentTypes": null,
                                                "id": 1130,
                                                "name": "proofElement",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1117,
                                                "src": "898:12:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": null,
                                                "id": 1127,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1709,
                                                "src": "867:3:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 1128,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": null,
                                              "src": "867:16:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 1131,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "867:44:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 1126,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1716,
                                          "src": "857:9:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 1132,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "857:55:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "src": "842:70:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 1134,
                                    "nodeType": "ExpressionStatement",
                                    "src": "842:70:6"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1109,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "629:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1110,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1092,
                              "src": "633:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                                "typeString": "bytes32[] memory"
                              }
                            },
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "633:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "629:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1149,
                        "initializationExpression": {
                          "assignments": [
                            1106
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1106,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 1149,
                              "src": "614:9:6",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1105,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "614:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 1108,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "626:1:6",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "614:13:6"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 1114,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "647:3:6",
                            "subExpression": {
                              "argumentTypes": null,
                              "id": 1113,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1106,
                              "src": "647:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1115,
                          "nodeType": "ExpressionStatement",
                          "src": "647:3:6"
                        },
                        "nodeType": "ForStatement",
                        "src": "609:515:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1150,
                            "name": "computedHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1102,
                            "src": "1216:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1151,
                            "name": "root",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1094,
                            "src": "1232:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "1216:20:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1100,
                        "id": 1153,
                        "nodeType": "Return",
                        "src": "1209:27:6"
                      }
                    ]
                  },
                  "documentation": "@dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\ndefined by `root`. For this, a `proof` must be provided, containing\nsibling hashes on the branch from the leaf to the root of the tree. Each\npair of leaves and each pair of pre-images are assumed to be sorted.",
                  "id": 1155,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "verify",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1097,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1092,
                        "name": "proof",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "480:22:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                          "typeString": "bytes32[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1090,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "480:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 1091,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "480:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                            "typeString": "bytes32[]"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1094,
                        "name": "root",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "504:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1093,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "504:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1096,
                        "name": "leaf",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "518:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "518:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "479:52:6"
                  },
                  "returnParameters": {
                    "id": 1100,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1099,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1155,
                        "src": "555:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1098,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "554:6:6"
                  },
                  "scope": 1156,
                  "src": "464:779:6",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1157,
              "src": "110:1135:6"
            }
          ],
          "src": "0:1246:6"
        },
        "id": 6
      },
      "openzeppelin-contracts-sol5/math/SafeMath.sol": {
        "ast": {
          "absolutePath": "openzeppelin-contracts-sol5/math/SafeMath.sol",
          "exportedSymbols": {
            "SafeMath": [
              1343
            ]
          },
          "id": 1344,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1158,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:7"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
              "fullyImplemented": true,
              "id": 1343,
              "linearizedBaseContracts": [
                1343
              ],
              "name": "SafeMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1182,
                    "nodeType": "Block",
                    "src": "901:109:7",
                    "statements": [
                      {
                        "assignments": [
                          1168
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1168,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1182,
                            "src": "911:9:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1167,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "911:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1172,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1169,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1160,
                            "src": "923:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1170,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1162,
                            "src": "927:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "923:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "911:17:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1174,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1168,
                                "src": "946:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1175,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1160,
                                "src": "951:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "946:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                              "id": 1177,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "954:29:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              },
                              "value": "SafeMath: addition overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              }
                            ],
                            "id": 1173,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "938:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "938:46:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1179,
                        "nodeType": "ExpressionStatement",
                        "src": "938:46:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1180,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1168,
                          "src": "1002:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1166,
                        "id": 1181,
                        "nodeType": "Return",
                        "src": "995:8:7"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
                  "id": 1183,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1163,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1160,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "847:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1159,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "847:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1162,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "858:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1161,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "846:22:7"
                  },
                  "returnParameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1165,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1183,
                        "src": "892:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "892:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "891:9:7"
                  },
                  "scope": 1343,
                  "src": "834:176:7",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1198,
                    "nodeType": "Block",
                    "src": "1341:67:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1193,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1185,
                              "src": "1362:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1194,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "1365:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                              "id": 1195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1368:32:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              },
                              "value": "SafeMath: subtraction overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              }
                            ],
                            "id": 1192,
                            "name": "sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1199,
                              1226
                            ],
                            "referencedDeclaration": 1226,
                            "src": "1358:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 1196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1358:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1191,
                        "id": 1197,
                        "nodeType": "Return",
                        "src": "1351:50:7"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
                  "id": 1199,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1185,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "1287:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1184,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1287:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1187,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "1298:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1298:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1286:22:7"
                  },
                  "returnParameters": {
                    "id": 1191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1190,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1199,
                        "src": "1332:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1189,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1332:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1331:9:7"
                  },
                  "scope": 1343,
                  "src": "1274:134:7",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1225,
                    "nodeType": "Block",
                    "src": "1827:92:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1211,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1203,
                                "src": "1845:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1212,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1201,
                                "src": "1850:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1845:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1214,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1205,
                              "src": "1853:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1210,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "1837:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1837:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1216,
                        "nodeType": "ExpressionStatement",
                        "src": "1837:29:7"
                      },
                      {
                        "assignments": [
                          1218
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1218,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1225,
                            "src": "1876:9:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1217,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1876:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1222,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1219,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1201,
                            "src": "1888:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1220,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1203,
                            "src": "1892:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1888:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1876:17:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1223,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1218,
                          "src": "1911:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1209,
                        "id": 1224,
                        "nodeType": "Return",
                        "src": "1904:8:7"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.\n     * _Available since v2.4.0._",
                  "id": 1226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1206,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1201,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "1745:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1200,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1745:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1203,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "1756:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1202,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1756:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1205,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "1767:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1204,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1767:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1744:50:7"
                  },
                  "returnParameters": {
                    "id": 1209,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1208,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1226,
                        "src": "1818:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1207,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1818:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1817:9:7"
                  },
                  "scope": 1343,
                  "src": "1732:187:7",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1259,
                    "nodeType": "Block",
                    "src": "2226:392:7",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1235,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1228,
                            "src": "2458:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2463:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2458:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1241,
                        "nodeType": "IfStatement",
                        "src": "2454:45:7",
                        "trueBody": {
                          "id": 1240,
                          "nodeType": "Block",
                          "src": "2466:33:7",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1238,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2487:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 1234,
                              "id": 1239,
                              "nodeType": "Return",
                              "src": "2480:8:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          1243
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1243,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1259,
                            "src": "2509:9:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1242,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2509:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1247,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1244,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1228,
                            "src": "2521:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1245,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "2525:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2521:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2509:17:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1249,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1243,
                                  "src": "2544:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1250,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1228,
                                  "src": "2548:1:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2544:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1252,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1230,
                                "src": "2553:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2544:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                              "id": 1254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2556:35:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              },
                              "value": "SafeMath: multiplication overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              }
                            ],
                            "id": 1248,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "2536:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2536:56:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1256,
                        "nodeType": "ExpressionStatement",
                        "src": "2536:56:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1257,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1243,
                          "src": "2610:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1234,
                        "id": 1258,
                        "nodeType": "Return",
                        "src": "2603:8:7"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
                  "id": 1260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1228,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "2172:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1227,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2172:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1230,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "2183:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1229,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2183:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2171:22:7"
                  },
                  "returnParameters": {
                    "id": 1234,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1233,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "2217:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1232,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2217:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2216:9:7"
                  },
                  "scope": 1343,
                  "src": "2159:459:7",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1275,
                    "nodeType": "Block",
                    "src": "3140:63:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1270,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1262,
                              "src": "3161:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1271,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1264,
                              "src": "3164:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                              "id": 1272,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3167:28:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              },
                              "value": "SafeMath: division by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              }
                            ],
                            "id": 1269,
                            "name": "div",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1276,
                              1303
                            ],
                            "referencedDeclaration": 1303,
                            "src": "3157:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3157:39:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1268,
                        "id": 1274,
                        "nodeType": "Return",
                        "src": "3150:46:7"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
                  "id": 1276,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1262,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1276,
                        "src": "3086:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3086:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1264,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1276,
                        "src": "3097:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1263,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3097:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3085:22:7"
                  },
                  "returnParameters": {
                    "id": 1268,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1267,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1276,
                        "src": "3131:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1266,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3131:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3130:9:7"
                  },
                  "scope": 1343,
                  "src": "3073:130:7",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1302,
                    "nodeType": "Block",
                    "src": "3813:243:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1288,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1280,
                                "src": "3897:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3901:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3897:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1291,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1282,
                              "src": "3904:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1287,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "3889:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3889:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1293,
                        "nodeType": "ExpressionStatement",
                        "src": "3889:28:7"
                      },
                      {
                        "assignments": [
                          1295
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1295,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 1302,
                            "src": "3927:9:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1294,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3927:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1299,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1296,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1278,
                            "src": "3939:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1297,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1280,
                            "src": "3943:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3939:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3927:17:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1300,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1295,
                          "src": "4048:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1286,
                        "id": 1301,
                        "nodeType": "Return",
                        "src": "4041:8:7"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
                  "id": 1303,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1283,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1278,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3731:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1277,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3731:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1280,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3742:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1279,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3742:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1282,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3753:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1281,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3753:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3730:50:7"
                  },
                  "returnParameters": {
                    "id": 1286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1285,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1303,
                        "src": "3804:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1284,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3804:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3803:9:7"
                  },
                  "scope": 1343,
                  "src": "3718:338:7",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1318,
                    "nodeType": "Block",
                    "src": "4567:61:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1313,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1305,
                              "src": "4588:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1314,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1307,
                              "src": "4591:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                              "id": 1315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4594:26:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              },
                              "value": "SafeMath: modulo by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              }
                            ],
                            "id": 1312,
                            "name": "mod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1319,
                              1342
                            ],
                            "referencedDeclaration": 1342,
                            "src": "4584:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 1316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4584:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1311,
                        "id": 1317,
                        "nodeType": "Return",
                        "src": "4577:44:7"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
                  "id": 1319,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1308,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1305,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1319,
                        "src": "4513:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4513:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1307,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1319,
                        "src": "4524:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1306,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4524:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4512:22:7"
                  },
                  "returnParameters": {
                    "id": 1311,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1310,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1319,
                        "src": "4558:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1309,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4558:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4557:9:7"
                  },
                  "scope": 1343,
                  "src": "4500:128:7",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1341,
                    "nodeType": "Block",
                    "src": "5227:68:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 1331,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1323,
                                "src": "5245:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1332,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5250:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5245:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1334,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1325,
                              "src": "5253:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1330,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "5237:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5237:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1336,
                        "nodeType": "ExpressionStatement",
                        "src": "5237:29:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1337,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1321,
                            "src": "5283:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1338,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1323,
                            "src": "5287:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5283:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1329,
                        "id": 1340,
                        "nodeType": "Return",
                        "src": "5276:12:7"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.\n     * _Available since v2.4.0._",
                  "id": 1342,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1326,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1321,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 1342,
                        "src": "5145:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1320,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5145:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1323,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 1342,
                        "src": "5156:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1322,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5156:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1325,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 1342,
                        "src": "5167:26:7",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1324,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5167:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5144:50:7"
                  },
                  "returnParameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1328,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1342,
                        "src": "5218:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1327,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5218:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5217:9:7"
                  },
                  "scope": 1343,
                  "src": "5132:163:7",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1344,
              "src": "589:4708:7"
            }
          ],
          "src": "0:5298:7"
        },
        "id": 7
      },
      "openzeppelin-contracts-sol5/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "openzeppelin-contracts-sol5/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1412
            ]
          },
          "id": 1413,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1345,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:8"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": "@dev Interface of the ERC20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {ERC20Detailed}.",
              "fullyImplemented": false,
              "id": 1412,
              "linearizedBaseContracts": [
                1412
              ],
              "name": "IERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": "@dev Returns the amount of tokens in existence.",
                  "id": 1350,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1346,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "290:2:8"
                  },
                  "returnParameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1350,
                        "src": "316:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "316:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "315:9:8"
                  },
                  "scope": 1412,
                  "src": "270:55:8",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Returns the amount of tokens owned by `account`.",
                  "id": 1357,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1353,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1352,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1357,
                        "src": "427:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1351,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "426:17:8"
                  },
                  "returnParameters": {
                    "id": 1356,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1355,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1357,
                        "src": "467:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1354,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "467:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "466:9:8"
                  },
                  "scope": 1412,
                  "src": "408:68:8",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
                  "id": 1366,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1362,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1359,
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1366,
                        "src": "714:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1358,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "714:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1361,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1366,
                        "src": "733:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "713:35:8"
                  },
                  "returnParameters": {
                    "id": 1365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1364,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1366,
                        "src": "767:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1363,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "767:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "766:6:8"
                  },
                  "scope": 1412,
                  "src": "696:77:8",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
                  "id": 1375,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1368,
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "1067:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1367,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1067:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1370,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "1082:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1369,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1082:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1066:32:8"
                  },
                  "returnParameters": {
                    "id": 1374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1373,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "1122:7:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1122:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1121:9:8"
                  },
                  "scope": 1412,
                  "src": "1048:83:8",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
                  "id": 1384,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1380,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1377,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1384,
                        "src": "1801:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1801:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1379,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1384,
                        "src": "1818:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1378,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1818:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1800:33:8"
                  },
                  "returnParameters": {
                    "id": 1383,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1382,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1384,
                        "src": "1852:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1381,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1852:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1851:6:8"
                  },
                  "scope": 1412,
                  "src": "1784:74:8",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
                  "id": 1395,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1391,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1386,
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "2187:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1385,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2187:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1388,
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "2203:17:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2203:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1390,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "2222:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1389,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2222:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2186:51:8"
                  },
                  "returnParameters": {
                    "id": 1394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1393,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1395,
                        "src": "2256:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2256:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2255:6:8"
                  },
                  "scope": 1412,
                  "src": "2165:97:8",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
                  "id": 1403,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1397,
                        "indexed": true,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "2446:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1396,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2446:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1399,
                        "indexed": true,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "2468:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1398,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2468:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1401,
                        "indexed": false,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1403,
                        "src": "2488:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2488:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2445:57:8"
                  },
                  "src": "2431:72:8"
                },
                {
                  "anonymous": false,
                  "documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
                  "id": 1411,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1410,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1405,
                        "indexed": true,
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 1411,
                        "src": "2677:21:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1404,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2677:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1407,
                        "indexed": true,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1411,
                        "src": "2700:23:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1406,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2700:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1409,
                        "indexed": false,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1411,
                        "src": "2725:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1408,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2676:63:8"
                  },
                  "src": "2662:78:8"
                }
              ],
              "scope": 1413,
              "src": "176:2566:8"
            }
          ],
          "src": "0:2743:8"
        },
        "id": 8
      },
      "openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol": {
        "ast": {
          "absolutePath": "openzeppelin-contracts-sol5/token/ERC20/SafeERC20.sol",
          "exportedSymbols": {
            "SafeERC20": [
              1632
            ]
          },
          "id": 1633,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1414,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:9"
            },
            {
              "absolutePath": "openzeppelin-contracts-sol5/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 1415,
              "nodeType": "ImportDirective",
              "scope": 1633,
              "sourceUnit": 1413,
              "src": "25:22:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "openzeppelin-contracts-sol5/math/SafeMath.sol",
              "file": "../../math/SafeMath.sol",
              "id": 1416,
              "nodeType": "ImportDirective",
              "scope": 1633,
              "sourceUnit": 1344,
              "src": "48:33:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "openzeppelin-contracts-sol5/utils/Address.sol",
              "file": "../../utils/Address.sol",
              "id": 1417,
              "nodeType": "ImportDirective",
              "scope": 1633,
              "sourceUnit": 1708,
              "src": "82:33:9",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@title SafeERC20\n@dev Wrappers around ERC20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeERC20 for ERC20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
              "fullyImplemented": true,
              "id": 1632,
              "linearizedBaseContracts": [
                1632
              ],
              "name": "SafeERC20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 1420,
                  "libraryName": {
                    "contractScope": null,
                    "id": 1418,
                    "name": "SafeMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1343,
                    "src": "604:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeMath_$1343",
                      "typeString": "library SafeMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "598:27:9",
                  "typeName": {
                    "id": 1419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "id": 1423,
                  "libraryName": {
                    "contractScope": null,
                    "id": 1421,
                    "name": "Address",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1707,
                    "src": "636:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Address_$1707",
                      "typeString": "library Address"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "630:26:9",
                  "typeName": {
                    "id": 1422,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "body": {
                    "id": 1444,
                    "nodeType": "Block",
                    "src": "734:102:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1433,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1425,
                              "src": "763:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1436,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1425,
                                      "src": "793:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1412",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1366,
                                    "src": "793:14:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 1438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "793:23:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1439,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1427,
                                  "src": "818:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1440,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1429,
                                  "src": "822:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1434,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "770:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "770:22:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "770:58:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1432,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "744:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1412_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "744:85:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1443,
                        "nodeType": "ExpressionStatement",
                        "src": "744:85:9"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1445,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1425,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1445,
                        "src": "684:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1412",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1424,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1412,
                          "src": "684:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1412",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1427,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1445,
                        "src": "698:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1426,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "698:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1429,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1445,
                        "src": "710:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "710:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "683:41:9"
                  },
                  "returnParameters": {
                    "id": 1431,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "734:0:9"
                  },
                  "scope": 1632,
                  "src": "662:174:9",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1469,
                    "nodeType": "Block",
                    "src": "932:112:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1457,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1447,
                              "src": "961:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1460,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1447,
                                      "src": "991:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1412",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1461,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1395,
                                    "src": "991:18:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 1462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "991:27:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1463,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1449,
                                  "src": "1020:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1464,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1451,
                                  "src": "1026:2:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1465,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1453,
                                  "src": "1030:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1458,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "968:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "968:22:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "968:68:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1456,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "942:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1412_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "942:95:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1468,
                        "nodeType": "ExpressionStatement",
                        "src": "942:95:9"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1470,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1447,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1470,
                        "src": "868:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1412",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1446,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1412,
                          "src": "868:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1412",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1449,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 1470,
                        "src": "882:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1448,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "882:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1451,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 1470,
                        "src": "896:10:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "896:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1453,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1470,
                        "src": "908:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1452,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "908:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "867:55:9"
                  },
                  "returnParameters": {
                    "id": 1455,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "932:0:9"
                  },
                  "scope": 1632,
                  "src": "842:202:9",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1510,
                    "nodeType": "Block",
                    "src": "1126:536:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1482,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 1480,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1476,
                                      "src": "1415:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 1481,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1424:1:9",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1415:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 1483,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1414:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1492,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 1487,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1754,
                                              "src": "1455:4:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SafeERC20_$1632",
                                                "typeString": "library SafeERC20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_SafeERC20_$1632",
                                                "typeString": "library SafeERC20"
                                              }
                                            ],
                                            "id": 1486,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1447:7:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": "address"
                                          },
                                          "id": 1488,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1447:13:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 1489,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1474,
                                          "src": "1462:7:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 1484,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1472,
                                          "src": "1431:5:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1412",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1485,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1375,
                                        "src": "1431:15:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 1490,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1431:39:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 1491,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1474:1:9",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1431:44:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  }
                                ],
                                "id": 1493,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1430:46:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1414:62:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
                              "id": 1495,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1490:56:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                                "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                              },
                              "value": "SafeERC20: approve from non-zero to non-zero allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
                                "typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
                              }
                            ],
                            "id": 1479,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "1406:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1406:150:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1497,
                        "nodeType": "ExpressionStatement",
                        "src": "1406:150:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1499,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1472,
                              "src": "1585:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1502,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1472,
                                      "src": "1615:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1412",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1503,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1384,
                                    "src": "1615:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 1504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1615:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1505,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1474,
                                  "src": "1639:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1506,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1476,
                                  "src": "1648:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1500,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "1592:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1592:22:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1592:62:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1498,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "1566:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1412_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1566:89:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1509,
                        "nodeType": "ExpressionStatement",
                        "src": "1566:89:9"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1511,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeApprove",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1477,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1472,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "1071:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1412",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1471,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1412,
                          "src": "1071:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1412",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1474,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "1085:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1473,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1085:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1476,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "1102:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1102:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1070:46:9"
                  },
                  "returnParameters": {
                    "id": 1478,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:0:9"
                  },
                  "scope": 1632,
                  "src": "1050:612:9",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1545,
                    "nodeType": "Block",
                    "src": "1754:196:9",
                    "statements": [
                      {
                        "assignments": [
                          1521
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1521,
                            "name": "newAllowance",
                            "nodeType": "VariableDeclaration",
                            "scope": 1545,
                            "src": "1764:20:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1520,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1764:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1532,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1530,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1517,
                              "src": "1831:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1525,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1754,
                                      "src": "1811:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1632",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1632",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 1524,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1803:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1526,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1803:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1527,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1515,
                                  "src": "1818:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1522,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1513,
                                  "src": "1787:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1412",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1523,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1375,
                                "src": "1787:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 1528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1787:39:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1183,
                            "src": "1787:43:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1787:50:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1764:73:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1534,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1513,
                              "src": "1866:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1537,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1513,
                                      "src": "1896:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1412",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1538,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1384,
                                    "src": "1896:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 1539,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1896:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1540,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1515,
                                  "src": "1920:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1541,
                                  "name": "newAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1521,
                                  "src": "1929:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1535,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "1873:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1873:22:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1873:69:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1533,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "1847:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1412_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1847:96:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1544,
                        "nodeType": "ExpressionStatement",
                        "src": "1847:96:9"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1546,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1518,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1513,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1546,
                        "src": "1699:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1412",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1512,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1412,
                          "src": "1699:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1412",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1515,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1546,
                        "src": "1713:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1514,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1713:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1517,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1546,
                        "src": "1730:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1730:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1698:46:9"
                  },
                  "returnParameters": {
                    "id": 1519,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1754:0:9"
                  },
                  "scope": 1632,
                  "src": "1668:282:9",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1581,
                    "nodeType": "Block",
                    "src": "2042:241:9",
                    "statements": [
                      {
                        "assignments": [
                          1556
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1556,
                            "name": "newAllowance",
                            "nodeType": "VariableDeclaration",
                            "scope": 1581,
                            "src": "2052:20:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1555,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2052:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1568,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1565,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1552,
                              "src": "2119:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                              "id": 1566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2126:43:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                                "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                              },
                              "value": "SafeERC20: decreased allowance below zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
                                "typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1560,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1754,
                                      "src": "2099:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1632",
                                        "typeString": "library SafeERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeERC20_$1632",
                                        "typeString": "library SafeERC20"
                                      }
                                    ],
                                    "id": 1559,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2091:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2091:13:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1562,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1550,
                                  "src": "2106:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1557,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1548,
                                  "src": "2075:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1412",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1375,
                                "src": "2075:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 1563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2075:39:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1226,
                            "src": "2075:43:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 1567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2075:95:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2052:118:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1570,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1548,
                              "src": "2199:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1573,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1548,
                                      "src": "2229:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1412",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1574,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1384,
                                    "src": "2229:13:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 1575,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2229:22:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1576,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1550,
                                  "src": "2253:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 1577,
                                  "name": "newAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1556,
                                  "src": "2262:12:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1571,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1709,
                                  "src": "2206:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2206:22:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 1578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2206:69:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$1412",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1569,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "2180:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1412_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,bytes memory)"
                            }
                          },
                          "id": 1579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2180:96:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1580,
                        "nodeType": "ExpressionStatement",
                        "src": "2180:96:9"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 1582,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1553,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1548,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "1987:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1412",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1547,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1412,
                          "src": "1987:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1412",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1550,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "2001:15:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1549,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2001:7:9",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1552,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 1582,
                        "src": "2018:13:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1551,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2018:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1986:46:9"
                  },
                  "returnParameters": {
                    "id": 1554,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2042:0:9"
                  },
                  "scope": 1632,
                  "src": "1956:327:9",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1630,
                    "nodeType": "Block",
                    "src": "2735:1026:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1591,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1584,
                                      "src": "3269:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1412",
                                        "typeString": "contract IERC20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IERC20_$1412",
                                        "typeString": "contract IERC20"
                                      }
                                    ],
                                    "id": 1590,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3261:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1592,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3261:14:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1593,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1659,
                                "src": "3261:25:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 1594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3261:27:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5361666545524332303a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 1595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3290:33:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
                                "typeString": "literal_string \"SafeERC20: call to non-contract\""
                              },
                              "value": "SafeERC20: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f6ce7bfd656f35145dec774d6f7e67f4cba158373d2dd7a0f8273e232f86148d",
                                "typeString": "literal_string \"SafeERC20: call to non-contract\""
                              }
                            ],
                            "id": 1589,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "3253:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3253:71:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1597,
                        "nodeType": "ExpressionStatement",
                        "src": "3253:71:9"
                      },
                      {
                        "assignments": [
                          1599,
                          1601
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1599,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 1630,
                            "src": "3395:12:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1598,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3395:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1601,
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 1630,
                            "src": "3409:23:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1600,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3409:5:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1608,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1606,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1586,
                              "src": "3456:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1603,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1584,
                                  "src": "3444:5:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$1412",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$1412",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "id": 1602,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3436:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3436:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3436:19:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3436:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3394:67:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1610,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1599,
                              "src": "3479:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 1611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3488:34:9",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              },
                              "value": "SafeERC20: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
                                "typeString": "literal_string \"SafeERC20: low-level call failed\""
                              }
                            ],
                            "id": 1609,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "3471:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:52:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1613,
                        "nodeType": "ExpressionStatement",
                        "src": "3471:52:9"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1614,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1601,
                              "src": "3538:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 1615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3538:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1616,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3558:1:9",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3538:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1629,
                        "nodeType": "IfStatement",
                        "src": "3534:221:9",
                        "trueBody": {
                          "id": 1628,
                          "nodeType": "Block",
                          "src": "3561:194:9",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 1621,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1601,
                                        "src": "3678:10:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "components": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1622,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3691:4:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": "bool"
                                          }
                                        ],
                                        "id": 1623,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3690:6:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1619,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1709,
                                        "src": "3667:3:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 1620,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "3667:10:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 1624,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3667:30:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
                                    "id": 1625,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3699:44:9",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                      "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                                    },
                                    "value": "SafeERC20: ERC20 operation did not succeed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
                                      "typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
                                    }
                                  ],
                                  "id": 1618,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    1725,
                                    1726
                                  ],
                                  "referencedDeclaration": 1726,
                                  "src": "3659:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1626,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3659:85:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1627,
                              "nodeType": "ExpressionStatement",
                              "src": "3659:85:9"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
                  "id": 1631,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callOptionalReturn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1587,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1584,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "2694:12:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$1412",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 1583,
                          "name": "IERC20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1412,
                          "src": "2694:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1412",
                            "typeString": "contract IERC20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1586,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 1631,
                        "src": "2708:17:9",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1585,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2708:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2693:33:9"
                  },
                  "returnParameters": {
                    "id": 1588,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2735:0:9"
                  },
                  "scope": 1632,
                  "src": "2666:1095:9",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "private"
                }
              ],
              "scope": 1633,
              "src": "574:3189:9"
            }
          ],
          "src": "0:3764:9"
        },
        "id": 9
      },
      "openzeppelin-contracts-sol5/utils/Address.sol": {
        "ast": {
          "absolutePath": "openzeppelin-contracts-sol5/utils/Address.sol",
          "exportedSymbols": {
            "Address": [
              1707
            ]
          },
          "id": 1708,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1634,
              "literals": [
                "solidity",
                "^",
                "0.5",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:23:10"
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@dev Collection of functions related to the address type",
              "fullyImplemented": true,
              "id": 1707,
              "linearizedBaseContracts": [
                1707
              ],
              "name": "Address",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1658,
                    "nodeType": "Block",
                    "src": "752:544:10",
                    "statements": [
                      {
                        "assignments": [
                          1642
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1642,
                            "name": "codehash",
                            "nodeType": "VariableDeclaration",
                            "scope": 1658,
                            "src": "1004:16:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1641,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1004:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1643,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1004:16:10"
                      },
                      {
                        "assignments": [
                          1645
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1645,
                            "name": "accountHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 1658,
                            "src": "1030:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1644,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1030:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1647,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                          "id": 1646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1052:66:10",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                            "typeString": "int_const 8947...(69 digits omitted)...1552"
                          },
                          "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1030:88:10"
                      },
                      {
                        "externalReferences": [
                          {
                            "codehash": {
                              "declaration": 1642,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1195:8:10",
                              "valueSize": 1
                            }
                          },
                          {
                            "account": {
                              "declaration": 1636,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1219:7:10",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 1648,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    codehash := extcodehash(account)\n}",
                        "src": "1184:45:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 1651,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1649,
                                  "name": "codehash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "1246:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1650,
                                  "name": "accountHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1645,
                                  "src": "1258:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "src": "1246:23:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "id": 1654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1652,
                                  "name": "codehash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "1273:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "307830",
                                  "id": 1653,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1285:3:10",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0x0"
                                },
                                "src": "1273:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1246:42:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 1656,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1245:44:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1640,
                        "id": 1657,
                        "nodeType": "Return",
                        "src": "1238:51:10"
                      }
                    ]
                  },
                  "documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following \ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
                  "id": 1659,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1636,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "706:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1635,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "706:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "705:17:10"
                  },
                  "returnParameters": {
                    "id": 1640,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1639,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1659,
                        "src": "746:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1638,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "746:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "745:6:10"
                  },
                  "scope": 1707,
                  "src": "686:610:10",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1672,
                    "nodeType": "Block",
                    "src": "1581:49:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1668,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1661,
                                  "src": "1614:7:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1606:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": "uint160"
                              },
                              "id": 1669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1606:16:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint160",
                                "typeString": "uint160"
                              }
                            ],
                            "id": 1666,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1598:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1598:25:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "functionReturnParameters": 1665,
                        "id": 1671,
                        "nodeType": "Return",
                        "src": "1591:32:10"
                      }
                    ]
                  },
                  "documentation": "@dev Converts an `address` into `address payable`. Note that this is\nsimply a type cast: the actual underlying value is not changed.\n     * _Available since v2.4.0._",
                  "id": 1673,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toPayable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1661,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 1673,
                        "src": "1524:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1524:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1523:17:10"
                  },
                  "returnParameters": {
                    "id": 1665,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1664,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1673,
                        "src": "1564:15:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1663,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1564:15:10",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1563:17:10"
                  },
                  "scope": 1707,
                  "src": "1505:125:10",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1705,
                    "nodeType": "Block",
                    "src": "2658:294:10",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1686,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 1682,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1752,
                                      "src": "2684:4:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$1707",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Address_$1707",
                                        "typeString": "library Address"
                                      }
                                    ],
                                    "id": 1681,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2676:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 1683,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2676:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 1684,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2676:21:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 1685,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "2701:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2676:31:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                              "id": 1687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2709:31:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              },
                              "value": "Address: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              }
                            ],
                            "id": 1680,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "2668:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2668:73:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1689,
                        "nodeType": "ExpressionStatement",
                        "src": "2668:73:10"
                      },
                      {
                        "assignments": [
                          1691,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1691,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 1705,
                            "src": "2807:12:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1690,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2807:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1699,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 1697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2854:2:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 1695,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1677,
                                "src": "2846:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 1692,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1675,
                                  "src": "2825:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 1693,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2825:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2825:20:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                              }
                            },
                            "id": 1696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2825:28:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2825:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2806:51:10"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1701,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "2875:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                              "id": 1702,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2884:60:10",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              },
                              "value": "Address: unable to send value, recipient may have reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              }
                            ],
                            "id": 1700,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              1725,
                              1726
                            ],
                            "referencedDeclaration": 1726,
                            "src": "2867:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2867:78:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1704,
                        "nodeType": "ExpressionStatement",
                        "src": "2867:78:10"
                      }
                    ]
                  },
                  "documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     * _Available since v2.4.0._",
                  "id": 1706,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1675,
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "2606:25:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "typeName": {
                          "id": 1674,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2606:15:10",
                          "stateMutability": "payable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1677,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "2633:14:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1676,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2633:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2605:43:10"
                  },
                  "returnParameters": {
                    "id": 1679,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2658:0:10"
                  },
                  "scope": 1707,
                  "src": "2587:365:10",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 1708,
              "src": "93:2861:10"
            }
          ],
          "src": "0:2955:10"
        },
        "id": 10
      }
    }
  }
}
